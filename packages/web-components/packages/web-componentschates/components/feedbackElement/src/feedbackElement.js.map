{"version":3,"sources":["components/feedbackElement/src/feedbackElement.ts","components/feedbackElement/src/feedbackElement.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","LitElement","property","state","styles","feedbackElement","constructor","orientation","showTextArea","usePopup","isSelected","firstUpdated","_a","feedbackFormValues","_setValues","isSlotted","style","setProperty","container","shadowRoot","querySelector","HTMLElement","focus","_handleTextInput","event","value","_textInput","updated","changedProperties","has","isOpen","values","popupTitle","title","textAreaPlaceholder","responsePlaceholder","promptTitle","prompt","tagList","tags","disclaimer","requestUpdate","_handleSubmit","feedbackDetails","formValues","userComment","parentMessageId","tagSelections","_tagSelections","complexFeedbackSubmission","CustomEvent","detail","bubbles","composed","dispatchEvent","_handleClose","handleTagSelection","selections","selectionList","preventDefault","type","attribute","reflect","prototype","Boolean","String"],"mappings":"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","file":"feedbackElement.js","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\n\n// @ts-ignore\nimport styles from './feedbackElement.scss?inline';\n/**\n * Input component using search typeahead api\n */\nexport default class feedbackElement extends LitElement {\n  static styles = styles;\n  /**\n   * Array of subelements parsed from API reply\n   */\n  @property({ type: Object, attribute: 'popup-elements', reflect: true })\n  popupElements;\n\n  /**\n   * top level title for section\n   */\n  @property({ type: Boolean, attribute: 'is-slotted' })\n  isSlotted;\n\n  /**\n   * top level title for section\n   */\n  @property({ type: String, attribute: 'popup-title' })\n  popupTitle;\n\n  /**\n   * array definition of tags to select\n   */\n  @property({ type: Object, attribute: 'tag-list' })\n  tagList;\n\n  /**\n   * legal disclaimer text\n   */\n  @property({ type: String, attribute: 'disclaimer' })\n  disclaimer;\n\n  /**\n   * question asked of user to give feedback\n   */\n  @property({ type: String, attribute: 'prompt-title' })\n  promptTitle;\n\n  /**\n   * placeholder in text area\n   */\n  @property({ type: String, attribute: 'text-area-placeholder' })\n  textAreaPlaceholder;\n\n  /**\n   * boolean determining to auto-open or not\n   */\n  @property({ type: Boolean, attribute: 'is-open' })\n  isOpen;\n\n  /**\n   * optional orientation value to show caret\n   */\n  @property({ type: String, attribute: 'orientation', reflect: true })\n  orientation = 'top';\n\n  /**\n   * target div to attach to\n   */\n  @property({ type: Object, attribute: 'targetElement' })\n  targetElement;\n\n  /**\n   * predefined JSON values of all above by dev/user\n   */\n  @property({ type: Object, attribute: 'feedbackFormValues' })\n  feedbackFormValues;\n\n  /**\n   * top description\n   */\n  @property({ type: String, attribute: 'description' })\n  description;\n\n  /** title of list, requires show-list\n   */\n  @property({ type: String, attribute: 'list-title' })\n  listTitle;\n\n  /** whether to show list\n   */\n  @property({ type: Boolean, attribute: 'show-list' })\n  showList;\n\n  /** whether to show text area\n   */\n  @property({ type: Boolean, attribute: 'show-text-area' })\n  showTextArea = true;\n\n  /**\n   * array of list items with title and text content\n   */\n  @property({ type: Object, attribute: 'listItems' })\n  listItems;\n\n  /**\n   * model object with title and url\n   */\n  @property({ type: Object, attribute: 'model' })\n  model;\n\n  /**\n   * internal saved text values for feedback\n   */\n  @state()\n  _textInput;\n\n  /**\n   * internal tag seelction list\n   */\n  @state()\n  _tagSelections;\n\n  /**\n   * index of message element in message list\n   */\n  @property({ type: String, attribute: 'parent-message-id' })\n  parentMessageId;\n\n  /**\n   * Event listener to check if parent visibility changed\n   */\n  //private intersectionObserver;\n\n  @state()\n  usePopup = true;\n\n  @state()\n  isSelected = false;\n\n  /** detect when component is rendered to process rawtext\n   */\n  firstUpdated() {\n    if (this.feedbackFormValues) {\n      this._setValues(this.feedbackFormValues);\n    }\n\n    if (this.isSlotted) {\n      this.style.setProperty('--chat-popup-slotted-mode', 'fixed');\n    }\n\n    const container = this.shadowRoot?.querySelector(\n      '.clabs--chat-popup-container'\n    );\n    if (container instanceof HTMLElement) {\n      container.focus();\n    }\n  }\n\n  /** _handleTextInput - handle text change in submission\n   * @param {event} event -  textarea change event\n   */\n  _handleTextInput(event) {\n    const { value } = event.target;\n    this._textInput = value;\n  }\n\n  /**\n   * updated - check changed properties\n   * @param {object} changedProperties - LIT object denoting changed attributes\n   */\n  updated(changedProperties) {\n    if (changedProperties.has('isOpen')) {\n      this.style.setProperty(\n        '--chat-popup-element-visibility',\n        this.isOpen ? 'visible' : 'hidden'\n      );\n    }\n    if (changedProperties.has('feedbackFormValues')) {\n      this._setValues(this.feedbackFormValues);\n    }\n  }\n\n  /**\n   * _setValues -  if preset Object is added, update all display values\n   * @param {object} values - defined values\n   */\n  _setValues(values) {\n    this.popupTitle = values.title;\n    this.textAreaPlaceholder = values.responsePlaceholder;\n    this.promptTitle = values.prompt;\n    this.tagList = values.tags;\n    this.disclaimer = values.disclaimer;\n    this.requestUpdate();\n  }\n\n  /**\n   * _handleSubmit - submit event when submit button click\n   * @param {event} event - button click event\n   */\n  _handleSubmit(event) {\n    const feedbackDetails = {\n      formValues: this.feedbackFormValues,\n      userComment: this._textInput ? this._textInput : 'no feedback given',\n      parentMessageId: this.parentMessageId ? this.parentMessageId : 'unknown',\n      tagSelections: this._tagSelections,\n    };\n    const complexFeedbackSubmission = new CustomEvent(\n      'on-user-complex-feedback-request',\n      {\n        detail: feedbackDetails,\n        bubbles: true,\n        composed: true,\n      }\n    );\n    this.dispatchEvent(complexFeedbackSubmission);\n    this._handleClose(event);\n  }\n\n  /**\n   * handleTagSelection - handle when tag list subelement sends seelction signal\n   * @param {event} event -  tag click event\n   */\n  handleTagSelection(event) {\n    const selections = event.detail.selectionList;\n    this._tagSelections = selections;\n  }\n\n  /**\n   * closing event when close button is selected\n   * @param {event} event - clsing button event\n   */\n  _handleClose(event) {\n    event.preventDefault();\n    //this.isSelected = false;\n  }\n}\n","/**\n * @license\n *\n * Copyright IBM Corp. 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\n// @ts-ignore\nimport styles from './feedbackElement.scss?inline';\n/**\n * Input component using search typeahead api\n */\nclass feedbackElement extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * optional orientation value to show caret\n         */\n        this.orientation = 'top';\n        /** whether to show text area\n         */\n        this.showTextArea = true;\n        /**\n         * Event listener to check if parent visibility changed\n         */\n        //private intersectionObserver;\n        this.usePopup = true;\n        this.isSelected = false;\n    }\n    /** detect when component is rendered to process rawtext\n     */\n    firstUpdated() {\n        var _a;\n        if (this.feedbackFormValues) {\n            this._setValues(this.feedbackFormValues);\n        }\n        if (this.isSlotted) {\n            this.style.setProperty('--chat-popup-slotted-mode', 'fixed');\n        }\n        const container = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.clabs--chat-popup-container');\n        if (container instanceof HTMLElement) {\n            container.focus();\n        }\n    }\n    /** _handleTextInput - handle text change in submission\n     * @param {event} event -  textarea change event\n     */\n    _handleTextInput(event) {\n        const { value } = event.target;\n        this._textInput = value;\n    }\n    /**\n     * updated - check changed properties\n     * @param {object} changedProperties - LIT object denoting changed attributes\n     */\n    updated(changedProperties) {\n        if (changedProperties.has('isOpen')) {\n            this.style.setProperty('--chat-popup-element-visibility', this.isOpen ? 'visible' : 'hidden');\n        }\n        if (changedProperties.has('feedbackFormValues')) {\n            this._setValues(this.feedbackFormValues);\n        }\n    }\n    /**\n     * _setValues -  if preset Object is added, update all display values\n     * @param {object} values - defined values\n     */\n    _setValues(values) {\n        this.popupTitle = values.title;\n        this.textAreaPlaceholder = values.responsePlaceholder;\n        this.promptTitle = values.prompt;\n        this.tagList = values.tags;\n        this.disclaimer = values.disclaimer;\n        this.requestUpdate();\n    }\n    /**\n     * _handleSubmit - submit event when submit button click\n     * @param {event} event - button click event\n     */\n    _handleSubmit(event) {\n        const feedbackDetails = {\n            formValues: this.feedbackFormValues,\n            userComment: this._textInput ? this._textInput : 'no feedback given',\n            parentMessageId: this.parentMessageId ? this.parentMessageId : 'unknown',\n            tagSelections: this._tagSelections,\n        };\n        const complexFeedbackSubmission = new CustomEvent('on-user-complex-feedback-request', {\n            detail: feedbackDetails,\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(complexFeedbackSubmission);\n        this._handleClose(event);\n    }\n    /**\n     * handleTagSelection - handle when tag list subelement sends seelction signal\n     * @param {event} event -  tag click event\n     */\n    handleTagSelection(event) {\n        const selections = event.detail.selectionList;\n        this._tagSelections = selections;\n    }\n    /**\n     * closing event when close button is selected\n     * @param {event} event - clsing button event\n     */\n    _handleClose(event) {\n        event.preventDefault();\n        //this.isSelected = false;\n    }\n}\nfeedbackElement.styles = styles;\nexport default feedbackElement;\n__decorate([\n    property({ type: Object, attribute: 'popup-elements', reflect: true })\n], feedbackElement.prototype, \"popupElements\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'is-slotted' })\n], feedbackElement.prototype, \"isSlotted\", void 0);\n__decorate([\n    property({ type: String, attribute: 'popup-title' })\n], feedbackElement.prototype, \"popupTitle\", void 0);\n__decorate([\n    property({ type: Object, attribute: 'tag-list' })\n], feedbackElement.prototype, \"tagList\", void 0);\n__decorate([\n    property({ type: String, attribute: 'disclaimer' })\n], feedbackElement.prototype, \"disclaimer\", void 0);\n__decorate([\n    property({ type: String, attribute: 'prompt-title' })\n], feedbackElement.prototype, \"promptTitle\", void 0);\n__decorate([\n    property({ type: String, attribute: 'text-area-placeholder' })\n], feedbackElement.prototype, \"textAreaPlaceholder\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'is-open' })\n], feedbackElement.prototype, \"isOpen\", void 0);\n__decorate([\n    property({ type: String, attribute: 'orientation', reflect: true })\n], feedbackElement.prototype, \"orientation\", void 0);\n__decorate([\n    property({ type: Object, attribute: 'targetElement' })\n], feedbackElement.prototype, \"targetElement\", void 0);\n__decorate([\n    property({ type: Object, attribute: 'feedbackFormValues' })\n], feedbackElement.prototype, \"feedbackFormValues\", void 0);\n__decorate([\n    property({ type: String, attribute: 'description' })\n], feedbackElement.prototype, \"description\", void 0);\n__decorate([\n    property({ type: String, attribute: 'list-title' })\n], feedbackElement.prototype, \"listTitle\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'show-list' })\n], feedbackElement.prototype, \"showList\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'show-text-area' })\n], feedbackElement.prototype, \"showTextArea\", void 0);\n__decorate([\n    property({ type: Object, attribute: 'listItems' })\n], feedbackElement.prototype, \"listItems\", void 0);\n__decorate([\n    property({ type: Object, attribute: 'model' })\n], feedbackElement.prototype, \"model\", void 0);\n__decorate([\n    state()\n], feedbackElement.prototype, \"_textInput\", void 0);\n__decorate([\n    state()\n], feedbackElement.prototype, \"_tagSelections\", void 0);\n__decorate([\n    property({ type: String, attribute: 'parent-message-id' })\n], feedbackElement.prototype, \"parentMessageId\", void 0);\n__decorate([\n    state()\n], feedbackElement.prototype, \"usePopup\", void 0);\n__decorate([\n    state()\n], feedbackElement.prototype, \"isSelected\", void 0);\n"]}