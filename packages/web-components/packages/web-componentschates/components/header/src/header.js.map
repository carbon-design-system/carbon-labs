{"version":3,"sources":["components/header/src/header.ts","components/header/src/header.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","LitElement","property","state","settings","stablePrefix","clabsPrefix","styles","header","constructor","enableFullscreen","enableDocking","menuOpened","mouseHeldDown","dragStart","useOverflowMenu","dragAcceleration","currentMenuItem","_isDragging","slugOpened","_useSlug","_renderLabel","customValue","labels","customLabels","_handleSlugClick","_event","_hideAISlug","_handlePopup","event","stopPropagation","dockingEvent","CustomEvent","detail","docking","originalEvent","bubbles","composed","dispatchEvent","_handleHeaderMouseDown","dragTimeout","window","setTimeout","initiateDragging","firstUpdated","_a","menuContainerTarget","shadowRoot","querySelector","_handleHeaderMouseUp","clearTimeout","dragArea","HTMLElement","blur","dragEvent","action","_focusMenu","lastKeyEvent","_handleDragAreaKeyup","_checkKeyboardEscape","shiftKey","preventDefault","_checkKeyboardMenu","_handleMenuItemSelected","menuItems","targetItem","menuItem","focus","_handleDragAreaKeydown","_keyboardDragging","_handleMenuKeyboardToggle","_handleHeaderMouseMove","mouseX","clientX","getBoundingClientRect","left","mouseY","clientY","top","offset","x","y","keyCode","dragDirection","dragStep","targetElement","index","getAttribute","menuSelectionEvent","hideMenu","_handleSubtract","minimizeEvent","_handleMaximize","fullscreenEvent","fullscreen","_handleClosed","closeEvent","_handleMinimize","_handleMenuToggle","type","Boolean","attribute","prototype","String"],"mappings":"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","file":"header.js","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { settings } from '@carbon-labs/utilities/es/settings/index.js';\nconst { stablePrefix: clabsPrefix } = settings;\n\n// @ts-ignore\nimport styles from './header.scss?inline';\n/**\n * Input component using search typeahead api\n */\nexport default class header extends LitElement {\n  static styles = styles;\n\n  /**\n   * disable header hamburger menu\n   */\n  @property({ type: Boolean, attribute: 'disable-header-menu' })\n  disableMenu;\n\n  /**\n   * disable header minimize button\n   */\n  @property({ type: Boolean, attribute: 'disable-header-minimize' })\n  disableMinimize;\n\n  /**\n   * disable header minimize button\n   */\n  @property({ type: Boolean, attribute: 'disable-header-fullscreen' })\n  disableFullscreen;\n\n  /**\n   * disable header close button\n   */\n  @property({ type: Boolean, attribute: 'disable-header-close' })\n  disableClose;\n\n  /**\n   * disable header close button\n   */\n  @property({ type: Boolean, attribute: 'docking-enabled' })\n  dockingEnabled;\n\n  /**\n   * header menu item list\n   */\n  @property({ type: Object, attribute: 'menuItems' })\n  menuItems;\n\n  /**\n   * provided title string to display in header\n   */\n  @property({ type: String, attribute: 'title' })\n  title;\n\n  /**\n   * state value denoting fullscreen mode, changed by button selection\n   */\n  @state()\n  enableFullscreen = false;\n\n  /**\n   * state value denoting docking mode, changed by button selection\n   */\n  @state()\n  enableDocking = false;\n\n  /**\n   * disable header hamburger menu\n   */\n  @property({ type: Boolean, attribute: 'disable-header-buttons' })\n  disableHeaderButtons;\n\n  /**\n   * html slug content to render\n   */\n  @property({ type: String, attribute: 'header-slug-content' })\n  headerSlugContent;\n\n  /**\n   * custom labels injected from parent\n   */\n  @property({ type: Object, attribute: 'customLabels' })\n  customLabels;\n\n  /**\n   * menuOpened - boolean to see if menu is opened\n   */\n  @state()\n  menuOpened = false;\n\n  /**\n   * mouseHeldDown - check if mouse is down\n   */\n  @state()\n  mouseHeldDown = false;\n\n  /**\n   * dragStart - check if drag is starting\n   */\n  @state()\n  dragStart = false;\n\n  /**\n   * dragTimeout - drag event to make sure double clicks don't trigger drag\n   */\n  @state()\n  dragTimeout;\n\n  /**\n   * useOverflowMenu - use carbon overflow\n   */\n  @state()\n  useOverflowMenu = true;\n\n  /**\n   * menuContainerTarget\n   */\n  @state()\n  menuContainerTarget;\n\n  /**\n   * count steps to accelerate movement\n   */\n  @state()\n  dragAcceleration = 0;\n\n  /**\n   * track current direction\n   */\n  @state()\n  dragDirection;\n\n  /**\n   * current Menu Item\n   */\n  @state()\n  currentMenuItem = 0;\n\n  /**\n   * drag state\n   */\n  @state()\n  _isDragging = false;\n\n  /**\n   * slug object dict\n   */\n  @property({ type: Object, attribute: 'headerSlugObject' })\n  headerSlugObject;\n\n  @state()\n  slugOpened = false;\n\n  @state()\n  _useSlug = true;\n\n  /**\n   * show slug on button click\n   * @param {event} _event - click event when docking chat\n   */\n  _handleSlugClick(_event) {\n    this.slugOpened = true;\n  }\n\n  /**\n   * hide slug\n   * @param {event} _event - click event when docking chat\n   */\n  _hideAISlug(_event) {\n    this.slugOpened = false;\n  }\n\n  /**\n   * docking event when popup button is clicked\n   * @param {event} event - click event when docking chat\n   */\n  _handlePopup(event) {\n    event.stopPropagation();\n    this.enableDocking = true;\n    this.enableFullscreen = false;\n    const dockingEvent = new CustomEvent('on-chat-docking-change', {\n      detail: { docking: true, originalEvent: event },\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(dockingEvent);\n  }\n\n  /**\n   * initial click event to check if dragging is initiated\n   * @param {event} event - click event when chat is clicked\n   */\n  _handleHeaderMouseDown(event) {\n    this.mouseHeldDown = true;\n    if (this.mouseHeldDown) {\n      this.dragTimeout = window.setTimeout(() => {\n        if (this.mouseHeldDown) {\n          this.initiateDragging(event);\n        }\n      }, 200);\n    }\n  }\n\n  /**\n   * LIT firstUpdated cycle to define initial parameters on first render\n   */\n  firstUpdated() {\n    this.menuContainerTarget = this.shadowRoot?.querySelector(\n      '#' + clabsPrefix + '--chat-header-container-target'\n    );\n  }\n\n  /**\n   * docking event when mouseup event happens to undo drag mode\n   */\n  _handleHeaderMouseUp() {\n    this.mouseHeldDown = false;\n    clearTimeout(this.dragTimeout);\n    this.dragTimeout = null;\n    this._isDragging = false;\n    this.dragAcceleration = 0;\n\n    const dragArea = this.shadowRoot?.querySelector(\n      '.' + clabsPrefix + '--chat-header-drag-area'\n    );\n    if (dragArea instanceof HTMLElement) {\n      dragArea.blur();\n    }\n    const dragEvent = new CustomEvent('on-header-drag-cancel', {\n      detail: {\n        action: 'user canceled drag event',\n      },\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(dragEvent);\n  }\n\n  /**\n   * focusMenu - focus on menu item\n   * @param {event} event - transfer event\n   */\n  _focusMenu(event) {\n    /*const overflowMenu = this.shadowRoot?.querySelector('#'+clabsPrefix+'--chat-header-overflow-menu-unique');\n    console.log(overflowMenu)\n    if(overflowMenu instanceof HTMLElement){\n      const subelem = overflowMenu.shadowRoot?.querySelector('#button');\n      console.log(subelem)\n        if (subelem instanceof HTMLElement) {\n          subelem.focus();\n        }\n    }*/\n    const lastKeyEvent = new CustomEvent('on-footer-escape', {\n      detail: {\n        action: 'FOOTER: user tabbed beyond chat',\n        originalEvent: event,\n      },\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(lastKeyEvent);\n  }\n\n  /** _handleDragAreaKeyup - move chat when arrow keys detected\n   */\n  _handleDragAreaKeyup() {\n    this.dragAcceleration = 0;\n  }\n\n  /** handle user tab inputs, check if escapes chat\n   * @param {event} event - lit event sent by the keyboard input\n   **/\n  _checkKeyboardEscape(event) {\n    if (event.key === 'Tab' && event.shiftKey && this.enableFullscreen) {\n      event.preventDefault();\n      const lastKeyEvent = new CustomEvent('on-header-escape', {\n        detail: {\n          action: 'HEADER: user tabbed beyond chat',\n          originalEvent: event,\n        },\n        bubbles: true,\n        composed: true,\n      });\n      this.dispatchEvent(lastKeyEvent);\n    }\n    if (event.key === 'Enter' || event.key === ' ') {\n      this.currentMenuItem = 0;\n    }\n  }\n\n  /** handle user tab inputs, check if escapes chat\n   * @param {event} event - lit event sent by the keyboard input\n   **/\n  _checkKeyboardMenu(event) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      this._handleMenuItemSelected(event);\n    }\n    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      if (event.key === 'ArrowUp') {\n        this.currentMenuItem--;\n      }\n      if (event.key === 'ArrowDown') {\n        this.currentMenuItem++;\n      }\n\n      if (this.currentMenuItem >= this.menuItems.length) {\n        this.currentMenuItem = 0;\n      }\n      if (this.currentMenuItem < 0) {\n        this.currentMenuItem = this.menuItems.length - 1;\n      }\n\n      const targetItem =\n        '.' +\n        clabsPrefix +\n        '--chat-header-overflow-menu-item-' +\n        this.currentMenuItem;\n      const menuItem = this.shadowRoot?.querySelector(targetItem);\n      if (menuItem instanceof HTMLElement) {\n        menuItem.focus();\n      }\n    }\n  }\n\n  /** _handleDragAreaKeydown - move chat when arrow keys detected\n   * @param {event} event - key event\n   */\n  _handleDragAreaKeydown(event) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      if (this._isDragging) {\n        this._handleHeaderMouseUp();\n      } else {\n        this.dragAcceleration = 0;\n        this._handleHeaderMouseDown(event);\n        this.initiateDragging(event);\n      }\n    }\n    if (event.key === 'Escape' || event.key === 'Tab') {\n      this._isDragging = false;\n      if (event.key === 'Escape') {\n        event.preventDefault();\n      }\n      if (event.key === 'Tab' && event.shiftKey) {\n        event.preventDefault();\n        this._focusMenu(event);\n      }\n      this._handleHeaderMouseUp();\n    }\n    if (\n      event.key === 'ArrowUp' ||\n      event.key === 'ArrowDown' ||\n      event.key === 'ArrowLeft' ||\n      event.key === 'ArrowRight'\n    ) {\n      event.preventDefault();\n      this._keyboardDragging(event.key);\n    }\n  }\n\n  /**\n   * handle when enter/tab is on overflow menu\n   * @param {event} event - key event on menu items\n   */\n  _handleMenuKeyboardToggle(event) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      this._handleMenuItemSelected(event);\n    }\n  }\n\n  /**\n   * mousemove event to trigger drag is click is held\n   * @param {event} event - mousemove on empty parts of header\n   */\n  _handleHeaderMouseMove(event) {\n    if (this.mouseHeldDown) {\n      this.initiateDragging(event);\n    }\n  }\n\n  /**\n   * drag trigger event if click held or click+mousemove happened\n   * @param {event} event - click event when docking chat\n   */\n  initiateDragging(event) {\n    const mouseX = event.clientX - this.getBoundingClientRect().left;\n    const mouseY = event.clientY - this.getBoundingClientRect().top;\n    this.dragAcceleration = 0;\n    this.mouseHeldDown = false;\n    this._isDragging = true;\n    const dragEvent = new CustomEvent('on-header-drag-initiated', {\n      detail: {\n        action: 'user initiated drag event',\n        offset: { x: mouseX, y: mouseY },\n      },\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(dragEvent);\n  }\n\n  /**\n   * drag trigger event if arrow keys used\n   * @param {string} keyCode - key event value when docking chat\n   */\n  _keyboardDragging(keyCode) {\n    this._isDragging = true;\n    if (this.dragDirection !== keyCode) {\n      this.dragAcceleration = 0;\n      this.dragDirection = keyCode;\n    }\n    this.dragAcceleration += 1;\n    let mouseX = 0;\n    let mouseY = 0;\n    const dragStep = 6 + 4 * this.dragAcceleration;\n\n    switch (keyCode) {\n      case 'ArrowUp':\n        mouseY = dragStep;\n        break;\n      case 'ArrowDown':\n        mouseY = -dragStep;\n        break;\n      case 'ArrowLeft':\n        mouseX = dragStep;\n        break;\n      case 'ArrowRight':\n        mouseX = -dragStep;\n        break;\n    }\n\n    const dragEvent = new CustomEvent('on-header-drag-keyboard-initiated', {\n      detail: {\n        action: 'user initiated drag event',\n        offset: { x: mouseX, y: mouseY },\n      },\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(dragEvent);\n  }\n\n  /**\n   * menu item selection event\n   * @param {event} event - click event when item is chosen\n   */\n  _handleMenuItemSelected(event) {\n    const targetElement = event?.target;\n    const index = targetElement?.getAttribute('data-menuindex');\n    if (index) {\n      if (this.menuItems[index]) {\n        const menuSelectionEvent = new CustomEvent(\n          'on-header-menu-item-selected',\n          {\n            detail: {\n              index: index,\n              menuItem: this.menuItems[index],\n              originalEvent: event,\n            },\n            bubbles: true,\n            composed: true,\n          }\n        );\n        this.dispatchEvent(menuSelectionEvent);\n      }\n    }\n  }\n\n  /**\n   * hide menu on button blur\n   * @param {event} event - hide menu on open state\n   */\n  hideMenu(event) {\n    event.preventDefault();\n    this.menuOpened = false;\n  }\n\n  /**\n   * undo docking mode when minimize is clicked\n   * @param {event} event - click event when minimizing chat\n   */\n  _handleSubtract(event) {\n    event.stopPropagation();\n    this.enableDocking = false;\n    this.enableFullscreen = false;\n    const minimizeEvent = new CustomEvent('on-chat-docking-change', {\n      detail: { docking: false, originalEvent: event },\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(minimizeEvent);\n  }\n\n  /**\n   * fullscreen event when popup button is clicked\n   * @param {event} event - click event when fullscreening chat\n   */\n  _handleMaximize(event) {\n    event.stopPropagation();\n    this.enableFullscreen = true;\n    this.enableDocking = false;\n    const fullscreenEvent = new CustomEvent('on-chat-fullscreen-change', {\n      detail: { fullscreen: true, originalEvent: event },\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(fullscreenEvent);\n  }\n\n  /**\n   * closing event when popup button is clicked\n   * @param {event} event - click event when fullscreening chat\n   */\n  _handleClosed(event) {\n    event.stopPropagation();\n    const closeEvent = new CustomEvent('on-chat-closed', {\n      detail: { action: 'chat was closed', originalEvent: event },\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(closeEvent);\n  }\n\n  /**\n   * undo fullscreen mode when minimize is clicked\n   * @param {event} event - click event when minimizing chat\n   */\n  _handleMinimize(event) {\n    event.stopPropagation();\n    this.enableFullscreen = false;\n    this.enableDocking = false;\n    const minimizeEvent = new CustomEvent('on-chat-fullscreen-change', {\n      detail: { fullscreen: false, originalEvent: event },\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(minimizeEvent);\n  }\n\n  /**\n   * menu toggling event when meny button is selected\n   * @param {event} event - click event when toggling menu\n   */\n  _handleMenuToggle(event) {\n    this.menuOpened = !this.menuOpened;\n    event.preventDefault();\n  }\n\n  /**\n   * _renderLabel - render default or custom label\n   * @param {string} key - dictionary key for label\n   */\n  _renderLabel = (key) => {\n    let customValue;\n    const labels = this.customLabels || {};\n    if (labels) {\n      switch (key) {\n        case 'header-close-chat':\n          customValue = labels[key] || 'Close';\n          break;\n        case 'header-enable-fullscreen':\n          customValue = labels[key] || 'Fullscreen';\n          break;\n        case 'header-disable-fullscreen':\n          customValue = labels[key] || 'Exit fullscreen';\n          break;\n        case 'header-popout-chat':\n          customValue = labels[key] || 'Pop out chat';\n          break;\n        case 'header-expand-chat':\n          customValue = labels[key] || 'Expand chat';\n          break;\n        case 'header-move-chat':\n          customValue = labels[key] || 'Move chat';\n          break;\n        case 'header-move-chat-done':\n          customValue = labels[key] || 'Set chat';\n          break;\n        case 'header-open-menu':\n          customValue = labels[key] || 'Open';\n          break;\n        case 'header-close-menu':\n          customValue = labels[key] || 'Close';\n          break;\n        case 'header-open-slug':\n          customValue = labels[key] || 'Open';\n          break;\n        case 'header-close-slug':\n          customValue = labels[key] || 'Close';\n          break;\n      }\n    }\n    return customValue || key;\n  };\n}\n","/**\n * @license\n *\n * Copyright IBM Corp. 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { settings } from '@carbon-labs/utilities/es/settings/index.js';\nconst { stablePrefix: clabsPrefix } = settings;\n// @ts-ignore\nimport styles from './header.scss?inline';\n/**\n * Input component using search typeahead api\n */\nclass header extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * state value denoting fullscreen mode, changed by button selection\n         */\n        this.enableFullscreen = false;\n        /**\n         * state value denoting docking mode, changed by button selection\n         */\n        this.enableDocking = false;\n        /**\n         * menuOpened - boolean to see if menu is opened\n         */\n        this.menuOpened = false;\n        /**\n         * mouseHeldDown - check if mouse is down\n         */\n        this.mouseHeldDown = false;\n        /**\n         * dragStart - check if drag is starting\n         */\n        this.dragStart = false;\n        /**\n         * useOverflowMenu - use carbon overflow\n         */\n        this.useOverflowMenu = true;\n        /**\n         * count steps to accelerate movement\n         */\n        this.dragAcceleration = 0;\n        /**\n         * current Menu Item\n         */\n        this.currentMenuItem = 0;\n        /**\n         * drag state\n         */\n        this._isDragging = false;\n        this.slugOpened = false;\n        this._useSlug = true;\n        /**\n         * _renderLabel - render default or custom label\n         * @param {string} key - dictionary key for label\n         */\n        this._renderLabel = (key) => {\n            let customValue;\n            const labels = this.customLabels || {};\n            if (labels) {\n                switch (key) {\n                    case 'header-close-chat':\n                        customValue = labels[key] || 'Close';\n                        break;\n                    case 'header-enable-fullscreen':\n                        customValue = labels[key] || 'Fullscreen';\n                        break;\n                    case 'header-disable-fullscreen':\n                        customValue = labels[key] || 'Exit fullscreen';\n                        break;\n                    case 'header-popout-chat':\n                        customValue = labels[key] || 'Pop out chat';\n                        break;\n                    case 'header-expand-chat':\n                        customValue = labels[key] || 'Expand chat';\n                        break;\n                    case 'header-move-chat':\n                        customValue = labels[key] || 'Move chat';\n                        break;\n                    case 'header-move-chat-done':\n                        customValue = labels[key] || 'Set chat';\n                        break;\n                    case 'header-open-menu':\n                        customValue = labels[key] || 'Open';\n                        break;\n                    case 'header-close-menu':\n                        customValue = labels[key] || 'Close';\n                        break;\n                    case 'header-open-slug':\n                        customValue = labels[key] || 'Open';\n                        break;\n                    case 'header-close-slug':\n                        customValue = labels[key] || 'Close';\n                        break;\n                }\n            }\n            return customValue || key;\n        };\n    }\n    /**\n     * show slug on button click\n     * @param {event} _event - click event when docking chat\n     */\n    _handleSlugClick(_event) {\n        this.slugOpened = true;\n    }\n    /**\n     * hide slug\n     * @param {event} _event - click event when docking chat\n     */\n    _hideAISlug(_event) {\n        this.slugOpened = false;\n    }\n    /**\n     * docking event when popup button is clicked\n     * @param {event} event - click event when docking chat\n     */\n    _handlePopup(event) {\n        event.stopPropagation();\n        this.enableDocking = true;\n        this.enableFullscreen = false;\n        const dockingEvent = new CustomEvent('on-chat-docking-change', {\n            detail: { docking: true, originalEvent: event },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(dockingEvent);\n    }\n    /**\n     * initial click event to check if dragging is initiated\n     * @param {event} event - click event when chat is clicked\n     */\n    _handleHeaderMouseDown(event) {\n        this.mouseHeldDown = true;\n        if (this.mouseHeldDown) {\n            this.dragTimeout = window.setTimeout(() => {\n                if (this.mouseHeldDown) {\n                    this.initiateDragging(event);\n                }\n            }, 200);\n        }\n    }\n    /**\n     * LIT firstUpdated cycle to define initial parameters on first render\n     */\n    firstUpdated() {\n        var _a;\n        this.menuContainerTarget = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('#' + clabsPrefix + '--chat-header-container-target');\n    }\n    /**\n     * docking event when mouseup event happens to undo drag mode\n     */\n    _handleHeaderMouseUp() {\n        var _a;\n        this.mouseHeldDown = false;\n        clearTimeout(this.dragTimeout);\n        this.dragTimeout = null;\n        this._isDragging = false;\n        this.dragAcceleration = 0;\n        const dragArea = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.' + clabsPrefix + '--chat-header-drag-area');\n        if (dragArea instanceof HTMLElement) {\n            dragArea.blur();\n        }\n        const dragEvent = new CustomEvent('on-header-drag-cancel', {\n            detail: {\n                action: 'user canceled drag event',\n            },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(dragEvent);\n    }\n    /**\n     * focusMenu - focus on menu item\n     * @param {event} event - transfer event\n     */\n    _focusMenu(event) {\n        /*const overflowMenu = this.shadowRoot?.querySelector('#'+clabsPrefix+'--chat-header-overflow-menu-unique');\n        console.log(overflowMenu)\n        if(overflowMenu instanceof HTMLElement){\n          const subelem = overflowMenu.shadowRoot?.querySelector('#button');\n          console.log(subelem)\n            if (subelem instanceof HTMLElement) {\n              subelem.focus();\n            }\n        }*/\n        const lastKeyEvent = new CustomEvent('on-footer-escape', {\n            detail: {\n                action: 'FOOTER: user tabbed beyond chat',\n                originalEvent: event,\n            },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(lastKeyEvent);\n    }\n    /** _handleDragAreaKeyup - move chat when arrow keys detected\n     */\n    _handleDragAreaKeyup() {\n        this.dragAcceleration = 0;\n    }\n    /** handle user tab inputs, check if escapes chat\n     * @param {event} event - lit event sent by the keyboard input\n     **/\n    _checkKeyboardEscape(event) {\n        if (event.key === 'Tab' && event.shiftKey && this.enableFullscreen) {\n            event.preventDefault();\n            const lastKeyEvent = new CustomEvent('on-header-escape', {\n                detail: {\n                    action: 'HEADER: user tabbed beyond chat',\n                    originalEvent: event,\n                },\n                bubbles: true,\n                composed: true,\n            });\n            this.dispatchEvent(lastKeyEvent);\n        }\n        if (event.key === 'Enter' || event.key === ' ') {\n            this.currentMenuItem = 0;\n        }\n    }\n    /** handle user tab inputs, check if escapes chat\n     * @param {event} event - lit event sent by the keyboard input\n     **/\n    _checkKeyboardMenu(event) {\n        var _a;\n        if (event.key === 'Enter' || event.key === ' ') {\n            this._handleMenuItemSelected(event);\n        }\n        if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n            if (event.key === 'ArrowUp') {\n                this.currentMenuItem--;\n            }\n            if (event.key === 'ArrowDown') {\n                this.currentMenuItem++;\n            }\n            if (this.currentMenuItem >= this.menuItems.length) {\n                this.currentMenuItem = 0;\n            }\n            if (this.currentMenuItem < 0) {\n                this.currentMenuItem = this.menuItems.length - 1;\n            }\n            const targetItem = '.' +\n                clabsPrefix +\n                '--chat-header-overflow-menu-item-' +\n                this.currentMenuItem;\n            const menuItem = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(targetItem);\n            if (menuItem instanceof HTMLElement) {\n                menuItem.focus();\n            }\n        }\n    }\n    /** _handleDragAreaKeydown - move chat when arrow keys detected\n     * @param {event} event - key event\n     */\n    _handleDragAreaKeydown(event) {\n        if (event.key === 'Enter' || event.key === ' ') {\n            event.preventDefault();\n            if (this._isDragging) {\n                this._handleHeaderMouseUp();\n            }\n            else {\n                this.dragAcceleration = 0;\n                this._handleHeaderMouseDown(event);\n                this.initiateDragging(event);\n            }\n        }\n        if (event.key === 'Escape' || event.key === 'Tab') {\n            this._isDragging = false;\n            if (event.key === 'Escape') {\n                event.preventDefault();\n            }\n            if (event.key === 'Tab' && event.shiftKey) {\n                event.preventDefault();\n                this._focusMenu(event);\n            }\n            this._handleHeaderMouseUp();\n        }\n        if (event.key === 'ArrowUp' ||\n            event.key === 'ArrowDown' ||\n            event.key === 'ArrowLeft' ||\n            event.key === 'ArrowRight') {\n            event.preventDefault();\n            this._keyboardDragging(event.key);\n        }\n    }\n    /**\n     * handle when enter/tab is on overflow menu\n     * @param {event} event - key event on menu items\n     */\n    _handleMenuKeyboardToggle(event) {\n        if (event.key === 'Enter' || event.key === ' ') {\n            this._handleMenuItemSelected(event);\n        }\n    }\n    /**\n     * mousemove event to trigger drag is click is held\n     * @param {event} event - mousemove on empty parts of header\n     */\n    _handleHeaderMouseMove(event) {\n        if (this.mouseHeldDown) {\n            this.initiateDragging(event);\n        }\n    }\n    /**\n     * drag trigger event if click held or click+mousemove happened\n     * @param {event} event - click event when docking chat\n     */\n    initiateDragging(event) {\n        const mouseX = event.clientX - this.getBoundingClientRect().left;\n        const mouseY = event.clientY - this.getBoundingClientRect().top;\n        this.dragAcceleration = 0;\n        this.mouseHeldDown = false;\n        this._isDragging = true;\n        const dragEvent = new CustomEvent('on-header-drag-initiated', {\n            detail: {\n                action: 'user initiated drag event',\n                offset: { x: mouseX, y: mouseY },\n            },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(dragEvent);\n    }\n    /**\n     * drag trigger event if arrow keys used\n     * @param {string} keyCode - key event value when docking chat\n     */\n    _keyboardDragging(keyCode) {\n        this._isDragging = true;\n        if (this.dragDirection !== keyCode) {\n            this.dragAcceleration = 0;\n            this.dragDirection = keyCode;\n        }\n        this.dragAcceleration += 1;\n        let mouseX = 0;\n        let mouseY = 0;\n        const dragStep = 6 + 4 * this.dragAcceleration;\n        switch (keyCode) {\n            case 'ArrowUp':\n                mouseY = dragStep;\n                break;\n            case 'ArrowDown':\n                mouseY = -dragStep;\n                break;\n            case 'ArrowLeft':\n                mouseX = dragStep;\n                break;\n            case 'ArrowRight':\n                mouseX = -dragStep;\n                break;\n        }\n        const dragEvent = new CustomEvent('on-header-drag-keyboard-initiated', {\n            detail: {\n                action: 'user initiated drag event',\n                offset: { x: mouseX, y: mouseY },\n            },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(dragEvent);\n    }\n    /**\n     * menu item selection event\n     * @param {event} event - click event when item is chosen\n     */\n    _handleMenuItemSelected(event) {\n        const targetElement = event === null || event === void 0 ? void 0 : event.target;\n        const index = targetElement === null || targetElement === void 0 ? void 0 : targetElement.getAttribute('data-menuindex');\n        if (index) {\n            if (this.menuItems[index]) {\n                const menuSelectionEvent = new CustomEvent('on-header-menu-item-selected', {\n                    detail: {\n                        index: index,\n                        menuItem: this.menuItems[index],\n                        originalEvent: event,\n                    },\n                    bubbles: true,\n                    composed: true,\n                });\n                this.dispatchEvent(menuSelectionEvent);\n            }\n        }\n    }\n    /**\n     * hide menu on button blur\n     * @param {event} event - hide menu on open state\n     */\n    hideMenu(event) {\n        event.preventDefault();\n        this.menuOpened = false;\n    }\n    /**\n     * undo docking mode when minimize is clicked\n     * @param {event} event - click event when minimizing chat\n     */\n    _handleSubtract(event) {\n        event.stopPropagation();\n        this.enableDocking = false;\n        this.enableFullscreen = false;\n        const minimizeEvent = new CustomEvent('on-chat-docking-change', {\n            detail: { docking: false, originalEvent: event },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(minimizeEvent);\n    }\n    /**\n     * fullscreen event when popup button is clicked\n     * @param {event} event - click event when fullscreening chat\n     */\n    _handleMaximize(event) {\n        event.stopPropagation();\n        this.enableFullscreen = true;\n        this.enableDocking = false;\n        const fullscreenEvent = new CustomEvent('on-chat-fullscreen-change', {\n            detail: { fullscreen: true, originalEvent: event },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(fullscreenEvent);\n    }\n    /**\n     * closing event when popup button is clicked\n     * @param {event} event - click event when fullscreening chat\n     */\n    _handleClosed(event) {\n        event.stopPropagation();\n        const closeEvent = new CustomEvent('on-chat-closed', {\n            detail: { action: 'chat was closed', originalEvent: event },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(closeEvent);\n    }\n    /**\n     * undo fullscreen mode when minimize is clicked\n     * @param {event} event - click event when minimizing chat\n     */\n    _handleMinimize(event) {\n        event.stopPropagation();\n        this.enableFullscreen = false;\n        this.enableDocking = false;\n        const minimizeEvent = new CustomEvent('on-chat-fullscreen-change', {\n            detail: { fullscreen: false, originalEvent: event },\n            bubbles: true,\n            composed: true,\n        });\n        this.dispatchEvent(minimizeEvent);\n    }\n    /**\n     * menu toggling event when meny button is selected\n     * @param {event} event - click event when toggling menu\n     */\n    _handleMenuToggle(event) {\n        this.menuOpened = !this.menuOpened;\n        event.preventDefault();\n    }\n}\nheader.styles = styles;\nexport default header;\n__decorate([\n    property({ type: Boolean, attribute: 'disable-header-menu' })\n], header.prototype, \"disableMenu\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'disable-header-minimize' })\n], header.prototype, \"disableMinimize\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'disable-header-fullscreen' })\n], header.prototype, \"disableFullscreen\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'disable-header-close' })\n], header.prototype, \"disableClose\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'docking-enabled' })\n], header.prototype, \"dockingEnabled\", void 0);\n__decorate([\n    property({ type: Object, attribute: 'menuItems' })\n], header.prototype, \"menuItems\", void 0);\n__decorate([\n    property({ type: String, attribute: 'title' })\n], header.prototype, \"title\", void 0);\n__decorate([\n    state()\n], header.prototype, \"enableFullscreen\", void 0);\n__decorate([\n    state()\n], header.prototype, \"enableDocking\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'disable-header-buttons' })\n], header.prototype, \"disableHeaderButtons\", void 0);\n__decorate([\n    property({ type: String, attribute: 'header-slug-content' })\n], header.prototype, \"headerSlugContent\", void 0);\n__decorate([\n    property({ type: Object, attribute: 'customLabels' })\n], header.prototype, \"customLabels\", void 0);\n__decorate([\n    state()\n], header.prototype, \"menuOpened\", void 0);\n__decorate([\n    state()\n], header.prototype, \"mouseHeldDown\", void 0);\n__decorate([\n    state()\n], header.prototype, \"dragStart\", void 0);\n__decorate([\n    state()\n], header.prototype, \"dragTimeout\", void 0);\n__decorate([\n    state()\n], header.prototype, \"useOverflowMenu\", void 0);\n__decorate([\n    state()\n], header.prototype, \"menuContainerTarget\", void 0);\n__decorate([\n    state()\n], header.prototype, \"dragAcceleration\", void 0);\n__decorate([\n    state()\n], header.prototype, \"dragDirection\", void 0);\n__decorate([\n    state()\n], header.prototype, \"currentMenuItem\", void 0);\n__decorate([\n    state()\n], header.prototype, \"_isDragging\", void 0);\n__decorate([\n    property({ type: Object, attribute: 'headerSlugObject' })\n], header.prototype, \"headerSlugObject\", void 0);\n__decorate([\n    state()\n], header.prototype, \"slugOpened\", void 0);\n__decorate([\n    state()\n], header.prototype, \"_useSlug\", void 0);\n"]}