{"version":3,"sources":["components/historyViewer/src/historyViewer.template.ts","components/historyViewer/src/historyViewer.template.js"],"names":["html","settings","stablePrefix","clabsPrefix","Renew16","Edit16","historyViewerTemplate","customElementClass","sortedParents","columns","branches","branchingIndices","debug","map","branchId","parentId","message","action","userSubmitted","index","text"],"mappings":"AAAA;ACCA;AACA;AACA;AACA;AACA;AACA;AACA;ADEA,SAASA,IAAI,QAAQ,KAAK;AAC1B,SAASC,QAAQ,QAAQ,6CAA6C;AACtE,MAAM;EAAEC,YAAY,EAAEC;AAAW,CAAE,GAAGF,QAAQ;AAE9C,OAAOG,OAAO,MAAM,6CAA6C;AACjE,OAAOC,MAAM,MAAM,4CAA4C;AAE/D;ACFA;AACA;AACA;AACA;AACA;ADIA,OAAM,SAAUC,qBAAqBA,CAACC,kBAAkB,EAAA;EACtD,MAAM;IAAEC,aAAa;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,gBAAgB;IAAEC;EAAK,CAAE,GACjEL,kBAAkB;EAEpB,OAAOP,IAAI,gBAAgBG,WAAW;ACJxC,kBDKkBA,WAAW;ACJ7B,oBDKoBA,WAAW;ACJ/B,UDKUO,QAAQ,KAAA,IAAA,IAARA,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAARA,QAAQ,CAAEG,GAAG,CACZC,QAAQ,IAAKd,IAAI;ACL5B,qBDMqBG,WAAW;ACLhC;AACA,uBDMuBA,WAAW,iCAAiCA,WAAW;ACL9E,uBDMuBW,QAAQ;ACL/B;AACA,cDMcN,aAAa,KAAA,IAAA,IAAbA,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAbA,aAAa,CAAEK,GAAG,CAAEE,QAAQ,IAAI;IAChC,MAAMC,OAAO,GAAGP,OAAO,CAACK,QAAQ,CAAC,CAACC,QAAQ,CAAC;IAC3C,OAAOC,OAAO,GACVhB,IAAI;ACLtB,6BDM6BG,WAAW,iCAAiCQ,gBAAgB,CACnEI,QAAQ,CACT,GAAG,CAAC,GACDZ,WAAW,GAAG,qCAAqC,GACnD,EAAE;ACP1B,sBDQsBa,OAAO,CAACC,MAAM,GACZjB,IAAI;ACP5B,mCDQmCG,WAAW;ACP9C,4BDQ4Ba,OAAO,CAACC,MAAM,KAAK,YAAY,GAAGb,OAAO,CAAA,CAAE,GAAG,EAAE;ACP5E,4BDQ4BY,OAAO,CAACC,MAAM,KAAK,MAAM,GAAGZ,MAAM,CAAA,CAAE,GAAG,EAAE;ACPrE,+BDQ+B,GACP,EAAE;ACP1B;AACA,+BDQ+BF,WAAW,GACpB,sCAAsC,IACrCa,OAAO,CAACE,aAAa,GAAG,MAAM,GAAG,KAAK,CAAC;ACP9D,wBDQwBN,KAAK,GACHZ,IAAI;ACP9B,+BDQ+BgB,OAAO,CAACG,KAAK,GAAG,GAAG,GAAGH,OAAO,CAACD,QAAQ;ACPrE,4BDQ4B,GACF,EAAE;ACP5B,wBDQwBC,OAAO,CAACI,IAAI;ACPpC;AACA,yBDQyB,GACPpB,IAAI;ACPtB,6BDQ6BG,WAAW,iCAAiCQ,gBAAgB,CACnEI,QAAQ,CACT,GAAG,CAAC,GACDZ,WAAW,GAAG,qCAAqC,GACnD,EAAE,IAAIA,WAAW,qCAAqC;EAClE,CAAC,CAAC;ACTd,iBDUiB,CACR;ACVT;AACA;AACA,SDWS;AACT","file":"historyViewer.template.js","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit';\nimport { settings } from '@carbon-labs/utilities/es/settings/index.js';\nconst { stablePrefix: clabsPrefix } = settings;\n\nimport Renew16 from '@carbon/web-components/es/icons/renew/16.js';\nimport Edit16 from '@carbon/web-components/es/icons/edit/16.js';\n\n/**\n * Lit template for formula\n *\n * @param {object} customElementClass Class functionality for the custom element\n * @returns {TemplateResult<1>} Lit html template\n */\nexport function historyViewerTemplate(customElementClass) {\n  const { sortedParents, columns, branches, branchingIndices, debug } =\n    customElementClass;\n\n  return html` <div class=\"${clabsPrefix}--chat-history-viewer-container\">\n    <div class=\"${clabsPrefix}--chat-history-viewer-container-tree\">\n      <div class=\"${clabsPrefix}--chat-history-viewer-grid\">\n        ${branches?.map(\n          (branchId) => html` <div\n            class=\"${clabsPrefix}--chat-history-viewer-column\">\n            <div\n              class=\"${clabsPrefix}--chat-history-viewer-message ${clabsPrefix}--chat-history-viewer-header\">\n              branch ${branchId}\n            </div>\n            ${sortedParents?.map((parentId) => {\n              const message = columns[branchId][parentId];\n              return message\n                ? html` <div\n                    class=\"${clabsPrefix}--chat-history-viewer-message ${branchingIndices[\n                      parentId\n                    ] > 1\n                      ? clabsPrefix + '--chat-history-viewer-common-branch'\n                      : ''}\">\n                    ${message.action\n                      ? html` <div\n                          class=\"${clabsPrefix}--chat-history-viewer-action-label\">\n                          ${message.action === 'regenerate' ? Renew16() : ''}\n                          ${message.action === 'edit' ? Edit16() : ''}\n                        </div>`\n                      : ''}\n                    <div\n                      class=\"${clabsPrefix +\n                      '--chat-history-viewer-block-content-' +\n                      (message.userSubmitted ? 'user' : 'bot')}\">\n                      ${debug\n                        ? html`<strong\n                            >${message.index + ':' + message.parentId}</strong\n                          >`\n                        : ''}\n                      ${message.text}\n                    </div>\n                  </div>`\n                : html`<div\n                    class=\"${clabsPrefix}--chat-history-viewer-message ${branchingIndices[\n                      parentId\n                    ] > 1\n                      ? clabsPrefix + '--chat-history-viewer-common-branch'\n                      : ''} ${clabsPrefix}--chat-history-viewer-empty\"></div>`;\n            })}\n          </div>`\n        )}\n      </div>\n    </div>\n  </div>`;\n}\n","/**\n * @license\n *\n * Copyright IBM Corp. 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { html } from 'lit';\nimport { settings } from '@carbon-labs/utilities/es/settings/index.js';\nconst { stablePrefix: clabsPrefix } = settings;\nimport Renew16 from '@carbon/web-components/es/icons/renew/16.js';\nimport Edit16 from '@carbon/web-components/es/icons/edit/16.js';\n/**\n * Lit template for formula\n *\n * @param {object} customElementClass Class functionality for the custom element\n * @returns {TemplateResult<1>} Lit html template\n */\nexport function historyViewerTemplate(customElementClass) {\n    const { sortedParents, columns, branches, branchingIndices, debug } = customElementClass;\n    return html ` <div class=\"${clabsPrefix}--chat-history-viewer-container\">\n    <div class=\"${clabsPrefix}--chat-history-viewer-container-tree\">\n      <div class=\"${clabsPrefix}--chat-history-viewer-grid\">\n        ${branches === null || branches === void 0 ? void 0 : branches.map((branchId) => html ` <div\n            class=\"${clabsPrefix}--chat-history-viewer-column\">\n            <div\n              class=\"${clabsPrefix}--chat-history-viewer-message ${clabsPrefix}--chat-history-viewer-header\">\n              branch ${branchId}\n            </div>\n            ${sortedParents === null || sortedParents === void 0 ? void 0 : sortedParents.map((parentId) => {\n        const message = columns[branchId][parentId];\n        return message\n            ? html ` <div\n                    class=\"${clabsPrefix}--chat-history-viewer-message ${branchingIndices[parentId] > 1\n                ? clabsPrefix + '--chat-history-viewer-common-branch'\n                : ''}\">\n                    ${message.action\n                ? html ` <div\n                          class=\"${clabsPrefix}--chat-history-viewer-action-label\">\n                          ${message.action === 'regenerate' ? Renew16() : ''}\n                          ${message.action === 'edit' ? Edit16() : ''}\n                        </div>`\n                : ''}\n                    <div\n                      class=\"${clabsPrefix +\n                '--chat-history-viewer-block-content-' +\n                (message.userSubmitted ? 'user' : 'bot')}\">\n                      ${debug\n                ? html `<strong\n                            >${message.index + ':' + message.parentId}</strong\n                          >`\n                : ''}\n                      ${message.text}\n                    </div>\n                  </div>`\n            : html `<div\n                    class=\"${clabsPrefix}--chat-history-viewer-message ${branchingIndices[parentId] > 1\n                ? clabsPrefix + '--chat-history-viewer-common-branch'\n                : ''} ${clabsPrefix}--chat-history-viewer-empty\"></div>`;\n    })}\n          </div>`)}\n      </div>\n    </div>\n  </div>`;\n}\n"]}