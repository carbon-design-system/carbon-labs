{"version":3,"sources":["components/linkListElement/src/linkListElement.ts","components/linkListElement/src/linkListElement.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","LitElement","property","state","styles","linkListElement","constructor","expanded","maxItems","hideArrows","disableRedirection","_linkList","trimmedList","_renderLabel","customValue","labels","customLabels","firstUpdated","content","undefined","_formatList","requestUpdate","updated","changedProperties","has","expandList","collapseList","_getSiteTitle","url","siteName","split","slice","siteTitle","replace","error","_handleLinkFeedback","event","targetElement","HTMLElement","hasAttribute","targetIndex","getAttribute","targetLink","linkClickedEvent","CustomEvent","detail","action","selectedURL","selectedTitle","title","originalEvent","bubbles","composed","dispatchEvent","indexOf","linkArray","markdownLinkRegex","RegExp","map","link","match","splitList","type","String","attribute","prototype","Boolean"],"mappings":"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","file":"linkListElement.js","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\n\n// @ts-ignore\nimport styles from './linkListElement.scss?inline';\n/**\n * Input component using search typeahead api\n */\nexport default class linkListElement extends LitElement {\n  static styles = styles;\n\n  /**\n   * Array of subelements parsed from API reply\n   */\n  @property({ type: String, attribute: 'content' })\n  content;\n\n  /**\n   * internal expanded value to show all links\n   */\n  @state()\n  expanded = false;\n\n  /**\n   * max items before cutoff\n   */\n  @state()\n  maxItems = 3;\n\n  /**\n   * hide arrows buttons (temp)\n   */\n  @state()\n  hideArrows = true;\n\n  /** enableReditection -  whether open black new page\n   */\n  @property({ type: Boolean, attribute: 'disable-redirection' })\n  disableRedirection = false;\n\n  /**\n   * full list of link strings\n   */\n  @state()\n  _linkList: { url: string; title: string }[] = [];\n\n  /**\n   * compact list of strings taken from full list\n   */\n  @state()\n  trimmedList: { url: string; title: string }[] = [];\n\n  /**\n   * custom label presets\n   */\n  @property({ type: Object, attribute: 'customLabels' })\n  customLabels;\n\n  /** detect when component is rendered to process visualization specification object\n   */\n  firstUpdated() {\n    if (this.content !== undefined) {\n      this._formatList();\n      this.requestUpdate();\n    }\n  }\n\n  /** updated - internal LIT function to detect updates to the DOM tree, used to auto update the specification attribute\n   * @param {Object} changedProperties - returned inner DOM update object\n   **/\n  updated(changedProperties) {\n    super.updated(changedProperties);\n    if (changedProperties.has('content')) {\n      //this._linkList = this.content.split(',');\n      this._formatList();\n    }\n  }\n\n  /** expandList - when list view all item is clicked, open up full list\n   */\n  expandList() {\n    this.expanded = true;\n  }\n\n  /** collapseList - when list collapse item is clicked, return to trimmed list\n   */\n  collapseList() {\n    this.expanded = false;\n  }\n\n  /** _getVideoTitle - helper function to display a URL's name without\n   * @param {string} url - url text that needs to be trimmed for title display in the card object\n   */\n  _getSiteTitle(url) {\n    try {\n      const siteName = url.split('/').slice(-1);\n      const siteTitle = siteName[0].split('.')[0];\n      return siteTitle.replace(/_/g, ' ');\n    } catch (error) {\n      return url;\n    }\n  }\n\n  /**\n   * _handleLinkFeedback - when link element is click, send even to message element\n   * @param {event} event - link click event\n   */\n  _handleLinkFeedback(event) {\n    const targetElement = event?.target;\n    if (targetElement instanceof HTMLElement) {\n      if (targetElement.hasAttribute('data-index')) {\n        const targetIndex: any = targetElement.getAttribute('data-index');\n        if (\n          targetIndex !== null &&\n          targetIndex >= 0 &&\n          targetIndex < this._linkList.length\n        ) {\n          const targetLink = this._linkList[targetIndex];\n          const linkClickedEvent = new CustomEvent(\n            'on-link-list-item-selected',\n            {\n              detail: {\n                action: 'LinkList.ts: link list item was clicked',\n                selectedURL: targetLink.url,\n                selectedTitle: targetLink.title,\n                originalEvent: event,\n              },\n              bubbles: true,\n              composed: true,\n            }\n          );\n          this.dispatchEvent(linkClickedEvent);\n        }\n      }\n    }\n  }\n\n  /** format list text into html list object\n   * @param {string} inputText - text to be rendered in subelement\n   */\n  _formatList() {\n    if (this.content.indexOf('[') > -1) {\n      const linkArray = this.content.split(',');\n      const markdownLinkRegex = new RegExp('\\\\[(.*?)\\\\]\\\\((.*?)\\\\)');\n      this._linkList = linkArray.map((link) => {\n        const match = link.match(markdownLinkRegex);\n        if (match) {\n          return { title: match[1], url: match[2] };\n        }\n        return null;\n      });\n      this.trimmedList = this._linkList.slice(0, 4);\n    } else {\n      const splitList = this.content.split(',');\n      this._linkList = splitList.map((link) => ({\n        title: this._getSiteTitle(link),\n        url: link,\n      }));\n      this.trimmedList = this._linkList.slice(0, 4);\n    }\n  }\n\n  /**\n   * _renderLabel - render default or custom label\n   * @param {string} key - target\n   */\n  _renderLabel = (key) => {\n    let customValue;\n    const labels = this.customLabels || {};\n    if (labels) {\n      switch (key) {\n        case 'link-list-view-all-button':\n          customValue = labels[key] || 'View all';\n          break;\n        case 'link-list-collapse-button':\n          customValue = labels[key] || 'Collapse list';\n          break;\n        case 'link-list-reference-title':\n          customValue = labels[key] || 'References';\n          break;\n      }\n    }\n    return customValue || key;\n  };\n}\n","/**\n * @license\n *\n * Copyright IBM Corp. 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\n// @ts-ignore\nimport styles from './linkListElement.scss?inline';\n/**\n * Input component using search typeahead api\n */\nclass linkListElement extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * internal expanded value to show all links\n         */\n        this.expanded = false;\n        /**\n         * max items before cutoff\n         */\n        this.maxItems = 3;\n        /**\n         * hide arrows buttons (temp)\n         */\n        this.hideArrows = true;\n        /** enableReditection -  whether open black new page\n         */\n        this.disableRedirection = false;\n        /**\n         * full list of link strings\n         */\n        this._linkList = [];\n        /**\n         * compact list of strings taken from full list\n         */\n        this.trimmedList = [];\n        /**\n         * _renderLabel - render default or custom label\n         * @param {string} key - target\n         */\n        this._renderLabel = (key) => {\n            let customValue;\n            const labels = this.customLabels || {};\n            if (labels) {\n                switch (key) {\n                    case 'link-list-view-all-button':\n                        customValue = labels[key] || 'View all';\n                        break;\n                    case 'link-list-collapse-button':\n                        customValue = labels[key] || 'Collapse list';\n                        break;\n                    case 'link-list-reference-title':\n                        customValue = labels[key] || 'References';\n                        break;\n                }\n            }\n            return customValue || key;\n        };\n    }\n    /** detect when component is rendered to process visualization specification object\n     */\n    firstUpdated() {\n        if (this.content !== undefined) {\n            this._formatList();\n            this.requestUpdate();\n        }\n    }\n    /** updated - internal LIT function to detect updates to the DOM tree, used to auto update the specification attribute\n     * @param {Object} changedProperties - returned inner DOM update object\n     **/\n    updated(changedProperties) {\n        super.updated(changedProperties);\n        if (changedProperties.has('content')) {\n            //this._linkList = this.content.split(',');\n            this._formatList();\n        }\n    }\n    /** expandList - when list view all item is clicked, open up full list\n     */\n    expandList() {\n        this.expanded = true;\n    }\n    /** collapseList - when list collapse item is clicked, return to trimmed list\n     */\n    collapseList() {\n        this.expanded = false;\n    }\n    /** _getVideoTitle - helper function to display a URL's name without\n     * @param {string} url - url text that needs to be trimmed for title display in the card object\n     */\n    _getSiteTitle(url) {\n        try {\n            const siteName = url.split('/').slice(-1);\n            const siteTitle = siteName[0].split('.')[0];\n            return siteTitle.replace(/_/g, ' ');\n        }\n        catch (error) {\n            return url;\n        }\n    }\n    /**\n     * _handleLinkFeedback - when link element is click, send even to message element\n     * @param {event} event - link click event\n     */\n    _handleLinkFeedback(event) {\n        const targetElement = event === null || event === void 0 ? void 0 : event.target;\n        if (targetElement instanceof HTMLElement) {\n            if (targetElement.hasAttribute('data-index')) {\n                const targetIndex = targetElement.getAttribute('data-index');\n                if (targetIndex !== null &&\n                    targetIndex >= 0 &&\n                    targetIndex < this._linkList.length) {\n                    const targetLink = this._linkList[targetIndex];\n                    const linkClickedEvent = new CustomEvent('on-link-list-item-selected', {\n                        detail: {\n                            action: 'LinkList.ts: link list item was clicked',\n                            selectedURL: targetLink.url,\n                            selectedTitle: targetLink.title,\n                            originalEvent: event,\n                        },\n                        bubbles: true,\n                        composed: true,\n                    });\n                    this.dispatchEvent(linkClickedEvent);\n                }\n            }\n        }\n    }\n    /** format list text into html list object\n     * @param {string} inputText - text to be rendered in subelement\n     */\n    _formatList() {\n        if (this.content.indexOf('[') > -1) {\n            const linkArray = this.content.split(',');\n            const markdownLinkRegex = new RegExp('\\\\[(.*?)\\\\]\\\\((.*?)\\\\)');\n            this._linkList = linkArray.map((link) => {\n                const match = link.match(markdownLinkRegex);\n                if (match) {\n                    return { title: match[1], url: match[2] };\n                }\n                return null;\n            });\n            this.trimmedList = this._linkList.slice(0, 4);\n        }\n        else {\n            const splitList = this.content.split(',');\n            this._linkList = splitList.map((link) => ({\n                title: this._getSiteTitle(link),\n                url: link,\n            }));\n            this.trimmedList = this._linkList.slice(0, 4);\n        }\n    }\n}\nlinkListElement.styles = styles;\nexport default linkListElement;\n__decorate([\n    property({ type: String, attribute: 'content' })\n], linkListElement.prototype, \"content\", void 0);\n__decorate([\n    state()\n], linkListElement.prototype, \"expanded\", void 0);\n__decorate([\n    state()\n], linkListElement.prototype, \"maxItems\", void 0);\n__decorate([\n    state()\n], linkListElement.prototype, \"hideArrows\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'disable-redirection' })\n], linkListElement.prototype, \"disableRedirection\", void 0);\n__decorate([\n    state()\n], linkListElement.prototype, \"_linkList\", void 0);\n__decorate([\n    state()\n], linkListElement.prototype, \"trimmedList\", void 0);\n__decorate([\n    property({ type: Object, attribute: 'customLabels' })\n], linkListElement.prototype, \"customLabels\", void 0);\n"]}