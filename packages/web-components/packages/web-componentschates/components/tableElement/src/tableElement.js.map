{"version":3,"sources":["components/tableElement/src/tableElement.ts","components/tableElement/src/tableElement.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","LitElement","property","state","styles","tableElement","constructor","_invalid","_tableObject","headers","rows","isHovered","_renderAsDataTable","firstUpdated","hasAttribute","style","setProperty","maxHeight","content","_prepareTable","requestUpdate","updated","changedProperties","has","_handleMouseOut","_handleMouseOver","tableString","trim","table","split","shift","row","cells","type","String","attribute","reflect","prototype"],"mappings":"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","file":"tableElement.js","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\n\n// @ts-ignore\nimport styles from './tableElement.scss?inline';\n/**\n * Input component using search typeahead api\n */\nexport default class tableElement extends LitElement {\n  static styles = styles;\n  /**\n   * Array of subelements parsed from API reply\n   */\n  @property({ type: String, attribute: 'content', reflect: true })\n  content;\n\n  /**\n   * invalid - if spec fails to render or is missing, an error will be displayed\n   */\n  @state()\n  _invalid = false;\n\n  /**\n   * tableObject - table object, contains headers and rows\n   */\n  @state()\n  _tableObject = { headers: [], rows: [] };\n\n  /**\n   * Set max height for code piece\n   */\n  @property({ type: String, attribute: 'max-height' })\n  maxHeight;\n\n  /**\n   * is the component hovered upon\n   */\n  @state()\n  isHovered = false;\n\n  /**\n   * is the component hovered upon\n   */\n  @state()\n  _renderAsDataTable = false;\n\n  /** detect when component is rendered to process visualization specification object\n   */\n  firstUpdated() {\n    if (this.hasAttribute('max-height')) {\n      this.style.setProperty('--chat-table-height', this.maxHeight);\n    }\n    if (this.content !== null) {\n      this._tableObject = this._prepareTable();\n      this.requestUpdate();\n    } else {\n      this._invalid = true;\n      this.requestUpdate();\n    }\n  }\n\n  /** updated - internal LIT function to detect updates to the DOM tree, used to auto update the specification attribute\n   * @param {Object} changedProperties - returned inner DOM update object\n   **/\n  updated(changedProperties) {\n    super.updated(changedProperties);\n    if (changedProperties.has('content')) {\n      this._tableObject = this._prepareTable();\n    }\n  }\n\n  /**\n   * _handleMouseOut - see if component lost mouse content\n   */\n  _handleMouseOut() {\n    this.isHovered = false;\n  }\n\n  /**\n   * _handleMouseOut - see if component lost mouse content\n   */\n  _handleMouseOver() {\n    this.isHovered = true;\n  }\n\n  /**\n   * Prepare table object for rendering from content string\n   */\n  _prepareTable() {\n    const tableString = this.content.trim();\n    const table = { headers: <any>[], rows: <any>[] };\n    const rows = tableString.split('\\n');\n    const headers = rows.shift().split(',');\n    table.headers = headers;\n    for (const row of rows) {\n      const cells = row.split(',');\n      table.rows = [...table.rows, cells];\n    }\n    return table;\n  }\n}\n","/**\n * @license\n *\n * Copyright IBM Corp. 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\n// @ts-ignore\nimport styles from './tableElement.scss?inline';\n/**\n * Input component using search typeahead api\n */\nclass tableElement extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * invalid - if spec fails to render or is missing, an error will be displayed\n         */\n        this._invalid = false;\n        /**\n         * tableObject - table object, contains headers and rows\n         */\n        this._tableObject = { headers: [], rows: [] };\n        /**\n         * is the component hovered upon\n         */\n        this.isHovered = false;\n        /**\n         * is the component hovered upon\n         */\n        this._renderAsDataTable = false;\n    }\n    /** detect when component is rendered to process visualization specification object\n     */\n    firstUpdated() {\n        if (this.hasAttribute('max-height')) {\n            this.style.setProperty('--chat-table-height', this.maxHeight);\n        }\n        if (this.content !== null) {\n            this._tableObject = this._prepareTable();\n            this.requestUpdate();\n        }\n        else {\n            this._invalid = true;\n            this.requestUpdate();\n        }\n    }\n    /** updated - internal LIT function to detect updates to the DOM tree, used to auto update the specification attribute\n     * @param {Object} changedProperties - returned inner DOM update object\n     **/\n    updated(changedProperties) {\n        super.updated(changedProperties);\n        if (changedProperties.has('content')) {\n            this._tableObject = this._prepareTable();\n        }\n    }\n    /**\n     * _handleMouseOut - see if component lost mouse content\n     */\n    _handleMouseOut() {\n        this.isHovered = false;\n    }\n    /**\n     * _handleMouseOut - see if component lost mouse content\n     */\n    _handleMouseOver() {\n        this.isHovered = true;\n    }\n    /**\n     * Prepare table object for rendering from content string\n     */\n    _prepareTable() {\n        const tableString = this.content.trim();\n        const table = { headers: [], rows: [] };\n        const rows = tableString.split('\\n');\n        const headers = rows.shift().split(',');\n        table.headers = headers;\n        for (const row of rows) {\n            const cells = row.split(',');\n            table.rows = [...table.rows, cells];\n        }\n        return table;\n    }\n}\ntableElement.styles = styles;\nexport default tableElement;\n__decorate([\n    property({ type: String, attribute: 'content', reflect: true })\n], tableElement.prototype, \"content\", void 0);\n__decorate([\n    state()\n], tableElement.prototype, \"_invalid\", void 0);\n__decorate([\n    state()\n], tableElement.prototype, \"_tableObject\", void 0);\n__decorate([\n    property({ type: String, attribute: 'max-height' })\n], tableElement.prototype, \"maxHeight\", void 0);\n__decorate([\n    state()\n], tableElement.prototype, \"isHovered\", void 0);\n__decorate([\n    state()\n], tableElement.prototype, \"_renderAsDataTable\", void 0);\n"]}