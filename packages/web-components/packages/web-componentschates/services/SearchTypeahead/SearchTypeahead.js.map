{"version":3,"sources":["services/SearchTypeahead/SearchTypeahead.ts","services/SearchTypeahead/SearchTypeahead.js"],"names":["_host","import","meta","env","VITE_SEARCH_TYPEAHEAD_API","_endpoint","SearchTypeaheadAPI","getResults","query","urlQuery","encodeURIComponent","filter","item","join","url","fetch","headers","then","response","json"],"mappings":"AAAA;ACCA;AACA;AACA;AACA;AACA;AACA;AACA;ADEA;ACAA;AACA;AACA;ADEA,MAAMA,KAAK;AACT;AACCC,MAAM,CAACC,IAAI,CAACC,GAAG,IAAIF,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,yBAAyB,IAC7D,yBAAyB;AAC3B;ACAA;AACA;AACA;AACA;AACA;ADEA,MAAMC,SAAS,GAAG,GAAGL,KAAK,sBAAsB;AAEhD;ACDA;AACA;ADGA,MAAMM,kBAAkB,CAAA;EACtB;ACDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EDGE,aAAaC,UAAUA,CAACC,KAAa,EAAA;IACnC,MAAMC,QAAQ,GAAG,CAAC,eAAe,EAAE,SAASC,kBAAkB,CAACF,KAAK,CAAC,EAAE,CAAC,CACrEG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAC,CACtBC,IAAI,CAAC,GAAG,CAAC;IACZ,MAAMC,GAAG,GAAG,GAAGT,SAAS,IAAII,QAAQ,EAAE;IACtC,OAAO,MAAMM,KAAK,CAACD,GAAG,EAAE;MACtBE,OAAO,EAAE;QACP,cAAc,EAAE;MCDZ;IACJ,CDEH,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAA,CAAE,CAAC,CACnCF,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACA,QAAQ,CAAC;EAC1C;ACDF;ADGA,eAAeZ,kBAAkB","file":"SearchTypeahead.js","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @constant {string | string} Host for the API calls\n * @private\n */\nconst _host =\n  //@ts-ignore\n  (import.meta.env && import.meta.env.VITE_SEARCH_TYPEAHEAD_API) ||\n  'https://www-api.ibm.com';\n/**\n * Search endpoint\n *\n * @type {string}\n * @private\n */\nconst _endpoint = `${_host}/search/typeahead/v1`;\n\n/**\n * Search Typeahead API class\n */\nclass SearchTypeaheadAPI {\n  /**\n   * Gets search results\n   *\n   * @param {string} query Query string to pass to the service\n   * @returns {Promise<any>} Response data from ibm search\n   * @example\n   * import { SearchTypeaheadAPI } from '@carbon/ibmdotcom-services';\n   *\n   * async function getResults(query) {\n   *   const response = await SearchTypeaheadAPI.getResults(query);\n   *   return response;\n   * }\n   */\n  static async getResults(query: string) {\n    const urlQuery = [`lang=en&cc=us`, `query=${encodeURIComponent(query)}`]\n      .filter((item) => item)\n      .join('&');\n    const url = `${_endpoint}?${urlQuery}`;\n    return await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => response.response);\n  }\n}\nexport default SearchTypeaheadAPI;\n","/**\n * @license\n *\n * Copyright IBM Corp. 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * @constant {string | string} Host for the API calls\n * @private\n */\nconst _host = \n//@ts-ignore\n(import.meta.env && import.meta.env.VITE_SEARCH_TYPEAHEAD_API) ||\n    'https://www-api.ibm.com';\n/**\n * Search endpoint\n *\n * @type {string}\n * @private\n */\nconst _endpoint = `${_host}/search/typeahead/v1`;\n/**\n * Search Typeahead API class\n */\nclass SearchTypeaheadAPI {\n    /**\n     * Gets search results\n     *\n     * @param {string} query Query string to pass to the service\n     * @returns {Promise<any>} Response data from ibm search\n     * @example\n     * import { SearchTypeaheadAPI } from '@carbon/ibmdotcom-services';\n     *\n     * async function getResults(query) {\n     *   const response = await SearchTypeaheadAPI.getResults(query);\n     *   return response;\n     * }\n     */\n    static async getResults(query) {\n        const urlQuery = [`lang=en&cc=us`, `query=${encodeURIComponent(query)}`]\n            .filter((item) => item)\n            .join('&');\n        const url = `${_endpoint}?${urlQuery}`;\n        return await fetch(url, {\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((response) => response.response);\n    }\n}\nexport default SearchTypeaheadAPI;\n"]}