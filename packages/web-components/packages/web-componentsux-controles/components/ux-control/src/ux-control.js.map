{"version":3,"sources":["components/ux-control/src/ux-control.ts","components/ux-control/src/ux-control.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","LitElement","property","settings","stablePrefix","clabsPrefix","styles","UXControl","constructor","open","currentView","name","contextVariables","parameters","viewList","isEditModalOpen","_newName","_currentPrompt","_currentContextVariables","_currentResponse","_currentResponseView","_currentParameters","_showRename","_showAddContextVariable","_showAddParameter","_newContextVariable","_newParameter","_isNewPrompt","_onListModalClose","_onEditModalClose","_onEditModalCancel","_onEditButtonClick","prompt","response","responseView","_onNewPrompt","onDeleteButtonClick","dispatchEvent","CustomEvent","detail","message","intentView","_toggleRename","_toggleAddContextVariable","_toggleAddParameter","_handleNameInput","event","value","onSaveRename","newName","handleCloseTag","title","closedTag","tagType","ariaLabel","addContextVariable","newContextVariable","addParameter","newParameter","_handleContextVariableInput","_handleParameterInput","triggerSubmit","_a","form","shadowRoot","getElementById","Event","onSavePrompt","preventDefault","className","items","querySelectorAll","data","forEach","item","classList","contains","tagName","__label","_value","__labelText","__value","formData","onChangeView","newView","attribute","type","Array","prototype","Boolean","String"],"mappings":"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","file":"ux-control.js","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { settings } from '@carbon-labs/utilities/es/settings/index.js';\nconst { stablePrefix: clabsPrefix } = settings;\n\n// @ts-ignore\nimport styles from './ux-control.scss?inline';\n/**\n * Input component using search typeahead api\n */\nexport class UXControl extends LitElement {\n  static styles = styles;\n\n  /**\n   * Prompt samples data\n   */\n  @property({ attribute: 'prompt-samples', type: Array })\n  promptSamples;\n\n  /**\n   * Whether the prompt list modal is open or not\n   */\n  @property({ type: Boolean })\n  open = true;\n\n  /**\n   * Prompt samples data\n   */\n  @property({ attribute: 'current-view', type: Object })\n  currentView = {\n    name: '',\n    contextVariables: [],\n    parameters: [],\n  };\n\n  /**\n   * Prompt samples data\n   */\n  @property({ attribute: 'view-list', type: Array })\n  viewList = [];\n\n  /**\n   * Whether the prompt edit modal is open or not\n   */\n  @property({ type: Boolean })\n  isEditModalOpen = false;\n\n  /**\n   * New view name\n   */\n  @property({ type: String })\n  private _newName = '';\n\n  /**\n   * Current prompt\n   */\n  @property({ type: String })\n  // @ts-ignore: Used in template.ts\n  private _currentPrompt = '';\n\n  /**\n   * Current context variables\n   */\n  @property({ type: Object })\n  // @ts-ignore: Used in template.ts\n  private _currentContextVariables = {};\n\n  /**\n   * Current response\n   */\n  @property({ type: String })\n  // @ts-ignore: Used in template.ts\n  private _currentResponse = '';\n\n  /**\n   * Current response view\n   */\n  @property({ type: String })\n  // @ts-ignore: Used in template.ts\n  private _currentResponseView = '';\n\n  /**\n   * Current parameters\n   */\n  @property({ type: Object })\n  // @ts-ignore: Used in template.ts\n  private _currentParameters = {};\n\n  /**\n   * Current response view\n   */\n  @property({ type: Boolean })\n  private _showRename = false;\n\n  /**\n   * Show add context variable\n   */\n  @property({ type: Boolean })\n  private _showAddContextVariable = false;\n\n  /**\n   * Show add parameter\n   */\n  @property({ type: Boolean })\n  private _showAddParameter = false;\n\n  /**\n   * New context variable to add\n   */\n  @property({ type: String })\n  private _newContextVariable = '';\n\n  /**\n   * New parameter to add\n   */\n  @property({ type: String })\n  private _newParameter = '';\n\n  /**\n   * Whether to show new prompt as opposed to edit prompt\n   */\n  @property({ type: Boolean })\n  private _isNewPrompt = false;\n\n  /**\n   * Method for closing the Prompt List Modal\n   */\n  _onListModalClose() {\n    this.open = false;\n  }\n\n  /**\n   * Method for closing the Prompt Edit Modal\n   */\n  _onEditModalClose() {\n    this._currentPrompt = '';\n    this._currentContextVariables = {};\n    this._currentResponse = '';\n    this._currentResponseView = '';\n    this._currentParameters = {};\n    this.isEditModalOpen = false;\n    this._isNewPrompt = false;\n  }\n\n  /**\n   * Method for clicking the Cancel button on the Prompt Edit Modal\n   */\n  _onEditModalCancel() {\n    this._currentPrompt = '';\n    this._currentContextVariables = {};\n    this._currentResponse = '';\n    this._currentResponseView = '';\n    this._currentParameters = {};\n    this.isEditModalOpen = false;\n    this.open = true;\n    this._isNewPrompt = false;\n  }\n\n  /**\n   * Method for clicking a table row Edit button\n   * @param {string} prompt prompt\n   * @param {Object} contextVariables context variables\n   * @param {string} response response\n   * @param {string} responseView response view\n   * @param {Object} parameters parameters\n   */\n  _onEditButtonClick(\n    prompt,\n    contextVariables,\n    response,\n    responseView,\n    parameters\n  ) {\n    this.open = false;\n    this.isEditModalOpen = true;\n    this._currentPrompt = prompt;\n    this._currentContextVariables = contextVariables;\n    this._currentResponse = response;\n    this._currentResponseView = responseView;\n    this._currentParameters = parameters;\n  }\n\n  /**\n   * Method when Add new prompt is clicked\n   */\n  _onNewPrompt() {\n    this.open = false;\n    this.isEditModalOpen = true;\n    this._isNewPrompt = true;\n  }\n\n  /**\n   * Method for clicking a table row Delete button\n   * @param {string} prompt prompt\n   * @param {Object} contextVariables context variables\n   * @param {string} response response\n   * @param {string} responseView response view\n   * @param {Object} parameters parameters\n   */\n  onDeleteButtonClick(\n    prompt,\n    contextVariables,\n    response,\n    responseView,\n    parameters\n  ) {\n    this.dispatchEvent(\n      new CustomEvent('delete-prompt', {\n        detail: {\n          message: `Deleting prompt.`,\n          prompt: {\n            prompt: prompt,\n            contextVariables: contextVariables,\n            response: response,\n            intentView: responseView,\n            parameters: parameters,\n          },\n        },\n      })\n    );\n  }\n\n  /**\n   * Method for toggling view rename\n   */\n  _toggleRename() {\n    this._showRename = !this._showRename;\n  }\n\n  /**\n   * Method for toggling if add context variable is clicked\n   */\n  _toggleAddContextVariable() {\n    this._showAddContextVariable = !this._showAddContextVariable;\n  }\n\n  /**\n   * Method for toggling if add parameter is clicked\n   */\n  _toggleAddParameter() {\n    this._showAddParameter = !this._showAddParameter;\n  }\n\n  /**\n   * Event handler to handle new view name input field updates\n   * @param {event} event event\n   */\n  _handleNameInput(event) {\n    this._newName = event.target.value;\n  }\n\n  /**\n   * fire event when view rename is saved\n   *\n   */\n  onSaveRename() {\n    this.dispatchEvent(\n      new CustomEvent('save-rename', {\n        detail: {\n          message: `Rename saved: ${this._newName}`,\n          newName: this._newName,\n        },\n      })\n    );\n    this._toggleRename();\n  }\n\n  /**\n   * Handle when close button on tag is clicked\n   * @param {event} event event\n   */\n  handleCloseTag(event) {\n    this.dispatchEvent(\n      new CustomEvent('close-tag', {\n        detail: {\n          message: `Tag closed: ${event.target.title}`,\n          closedTag: event.target.title,\n          tagType: event.target.ariaLabel,\n        },\n      })\n    );\n  }\n\n  /**\n   * fire event when new context variable is added to the view\n   *\n   */\n  addContextVariable() {\n    this.dispatchEvent(\n      new CustomEvent('add-context-variable', {\n        detail: {\n          message: `Add context variable: ${this._newContextVariable}`,\n          newContextVariable: this._newContextVariable,\n        },\n      })\n    );\n    this._toggleAddContextVariable();\n  }\n\n  /**\n   * fire event when new parameter is added to the view\n   *\n   */\n  addParameter() {\n    this.dispatchEvent(\n      new CustomEvent('add-parameter', {\n        detail: {\n          message: `Add parameter: ${this._newParameter}`,\n          newParameter: this._newParameter,\n        },\n      })\n    );\n    this._toggleAddParameter();\n  }\n\n  /**\n   * Event handler to handle new context variable name\n   * @param {event} event event\n   */\n  _handleContextVariableInput(event) {\n    this._newContextVariable = event.target.value;\n  }\n\n  /**\n   * Event handler to handle new parameter name\n   * @param {event} event event\n   */\n  _handleParameterInput(event) {\n    this._newParameter = event.target.value;\n  }\n\n  /**\n   * fire event when save button when editing prompt is triggered\n   *\n   */\n  triggerSubmit() {\n    const form = this.shadowRoot?.getElementById(\n      `${clabsPrefix}--edit-prompt-form`\n    );\n    if (form) {\n      form.dispatchEvent(new Event('submit'));\n    }\n    this._onEditModalCancel();\n  }\n\n  /**\n   * Event handler when prompt edit is saved\n   * @param {event} event event\n   */\n  onSavePrompt(event) {\n    event.preventDefault();\n    const form = event.target;\n\n    if (form) {\n      const className = `.${clabsPrefix}--edit-form-item`;\n      const items = form.querySelectorAll(className);\n      const data = {};\n      items.forEach((item) => {\n        let key = '';\n\n        if (item.classList.contains(`${clabsPrefix}--edit-context-variable`)) {\n          key += '(context variable) ';\n        } else if (item.classList.contains(`${clabsPrefix}--edit-parameter`)) {\n          key += '(parameter) ';\n        }\n\n        if (item.tagName === 'CDS-TEXT-INPUT') {\n          key += item.__label;\n          data[key] = item._value;\n        } else if (item.tagName === 'CDS-SELECT') {\n          key += item.__labelText;\n          data[key] = item.__value;\n        } else {\n          key += item.__label;\n          data[key] = item._value;\n        }\n      });\n\n      if (this._isNewPrompt) {\n        this.dispatchEvent(\n          new CustomEvent('add-prompt', {\n            detail: { formData: data },\n          })\n        );\n      } else {\n        this.dispatchEvent(\n          new CustomEvent('save-prompt', {\n            detail: { formData: data },\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * Event handler to handle user changing current view\n   * @param {event} event event\n   */\n  onChangeView(event) {\n    this.dispatchEvent(\n      new CustomEvent('change-view', {\n        detail: { newView: event.target.value },\n      })\n    );\n  }\n}\n","/**\n * @license\n *\n * Copyright IBM Corp. 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { settings } from '@carbon-labs/utilities/es/settings/index.js';\nconst { stablePrefix: clabsPrefix } = settings;\n// @ts-ignore\nimport styles from './ux-control.scss?inline';\n/**\n * Input component using search typeahead api\n */\nexport class UXControl extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Whether the prompt list modal is open or not\n         */\n        this.open = true;\n        /**\n         * Prompt samples data\n         */\n        this.currentView = {\n            name: '',\n            contextVariables: [],\n            parameters: [],\n        };\n        /**\n         * Prompt samples data\n         */\n        this.viewList = [];\n        /**\n         * Whether the prompt edit modal is open or not\n         */\n        this.isEditModalOpen = false;\n        /**\n         * New view name\n         */\n        this._newName = '';\n        /**\n         * Current prompt\n         */\n        this._currentPrompt = '';\n        /**\n         * Current context variables\n         */\n        this._currentContextVariables = {};\n        /**\n         * Current response\n         */\n        this._currentResponse = '';\n        /**\n         * Current response view\n         */\n        this._currentResponseView = '';\n        /**\n         * Current parameters\n         */\n        this._currentParameters = {};\n        /**\n         * Current response view\n         */\n        this._showRename = false;\n        /**\n         * Show add context variable\n         */\n        this._showAddContextVariable = false;\n        /**\n         * Show add parameter\n         */\n        this._showAddParameter = false;\n        /**\n         * New context variable to add\n         */\n        this._newContextVariable = '';\n        /**\n         * New parameter to add\n         */\n        this._newParameter = '';\n        /**\n         * Whether to show new prompt as opposed to edit prompt\n         */\n        this._isNewPrompt = false;\n    }\n    /**\n     * Method for closing the Prompt List Modal\n     */\n    _onListModalClose() {\n        this.open = false;\n    }\n    /**\n     * Method for closing the Prompt Edit Modal\n     */\n    _onEditModalClose() {\n        this._currentPrompt = '';\n        this._currentContextVariables = {};\n        this._currentResponse = '';\n        this._currentResponseView = '';\n        this._currentParameters = {};\n        this.isEditModalOpen = false;\n        this._isNewPrompt = false;\n    }\n    /**\n     * Method for clicking the Cancel button on the Prompt Edit Modal\n     */\n    _onEditModalCancel() {\n        this._currentPrompt = '';\n        this._currentContextVariables = {};\n        this._currentResponse = '';\n        this._currentResponseView = '';\n        this._currentParameters = {};\n        this.isEditModalOpen = false;\n        this.open = true;\n        this._isNewPrompt = false;\n    }\n    /**\n     * Method for clicking a table row Edit button\n     * @param {string} prompt prompt\n     * @param {Object} contextVariables context variables\n     * @param {string} response response\n     * @param {string} responseView response view\n     * @param {Object} parameters parameters\n     */\n    _onEditButtonClick(prompt, contextVariables, response, responseView, parameters) {\n        this.open = false;\n        this.isEditModalOpen = true;\n        this._currentPrompt = prompt;\n        this._currentContextVariables = contextVariables;\n        this._currentResponse = response;\n        this._currentResponseView = responseView;\n        this._currentParameters = parameters;\n    }\n    /**\n     * Method when Add new prompt is clicked\n     */\n    _onNewPrompt() {\n        this.open = false;\n        this.isEditModalOpen = true;\n        this._isNewPrompt = true;\n    }\n    /**\n     * Method for clicking a table row Delete button\n     * @param {string} prompt prompt\n     * @param {Object} contextVariables context variables\n     * @param {string} response response\n     * @param {string} responseView response view\n     * @param {Object} parameters parameters\n     */\n    onDeleteButtonClick(prompt, contextVariables, response, responseView, parameters) {\n        this.dispatchEvent(new CustomEvent('delete-prompt', {\n            detail: {\n                message: `Deleting prompt.`,\n                prompt: {\n                    prompt: prompt,\n                    contextVariables: contextVariables,\n                    response: response,\n                    intentView: responseView,\n                    parameters: parameters,\n                },\n            },\n        }));\n    }\n    /**\n     * Method for toggling view rename\n     */\n    _toggleRename() {\n        this._showRename = !this._showRename;\n    }\n    /**\n     * Method for toggling if add context variable is clicked\n     */\n    _toggleAddContextVariable() {\n        this._showAddContextVariable = !this._showAddContextVariable;\n    }\n    /**\n     * Method for toggling if add parameter is clicked\n     */\n    _toggleAddParameter() {\n        this._showAddParameter = !this._showAddParameter;\n    }\n    /**\n     * Event handler to handle new view name input field updates\n     * @param {event} event event\n     */\n    _handleNameInput(event) {\n        this._newName = event.target.value;\n    }\n    /**\n     * fire event when view rename is saved\n     *\n     */\n    onSaveRename() {\n        this.dispatchEvent(new CustomEvent('save-rename', {\n            detail: {\n                message: `Rename saved: ${this._newName}`,\n                newName: this._newName,\n            },\n        }));\n        this._toggleRename();\n    }\n    /**\n     * Handle when close button on tag is clicked\n     * @param {event} event event\n     */\n    handleCloseTag(event) {\n        this.dispatchEvent(new CustomEvent('close-tag', {\n            detail: {\n                message: `Tag closed: ${event.target.title}`,\n                closedTag: event.target.title,\n                tagType: event.target.ariaLabel,\n            },\n        }));\n    }\n    /**\n     * fire event when new context variable is added to the view\n     *\n     */\n    addContextVariable() {\n        this.dispatchEvent(new CustomEvent('add-context-variable', {\n            detail: {\n                message: `Add context variable: ${this._newContextVariable}`,\n                newContextVariable: this._newContextVariable,\n            },\n        }));\n        this._toggleAddContextVariable();\n    }\n    /**\n     * fire event when new parameter is added to the view\n     *\n     */\n    addParameter() {\n        this.dispatchEvent(new CustomEvent('add-parameter', {\n            detail: {\n                message: `Add parameter: ${this._newParameter}`,\n                newParameter: this._newParameter,\n            },\n        }));\n        this._toggleAddParameter();\n    }\n    /**\n     * Event handler to handle new context variable name\n     * @param {event} event event\n     */\n    _handleContextVariableInput(event) {\n        this._newContextVariable = event.target.value;\n    }\n    /**\n     * Event handler to handle new parameter name\n     * @param {event} event event\n     */\n    _handleParameterInput(event) {\n        this._newParameter = event.target.value;\n    }\n    /**\n     * fire event when save button when editing prompt is triggered\n     *\n     */\n    triggerSubmit() {\n        var _a;\n        const form = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.getElementById(`${clabsPrefix}--edit-prompt-form`);\n        if (form) {\n            form.dispatchEvent(new Event('submit'));\n        }\n        this._onEditModalCancel();\n    }\n    /**\n     * Event handler when prompt edit is saved\n     * @param {event} event event\n     */\n    onSavePrompt(event) {\n        event.preventDefault();\n        const form = event.target;\n        if (form) {\n            const className = `.${clabsPrefix}--edit-form-item`;\n            const items = form.querySelectorAll(className);\n            const data = {};\n            items.forEach((item) => {\n                let key = '';\n                if (item.classList.contains(`${clabsPrefix}--edit-context-variable`)) {\n                    key += '(context variable) ';\n                }\n                else if (item.classList.contains(`${clabsPrefix}--edit-parameter`)) {\n                    key += '(parameter) ';\n                }\n                if (item.tagName === 'CDS-TEXT-INPUT') {\n                    key += item.__label;\n                    data[key] = item._value;\n                }\n                else if (item.tagName === 'CDS-SELECT') {\n                    key += item.__labelText;\n                    data[key] = item.__value;\n                }\n                else {\n                    key += item.__label;\n                    data[key] = item._value;\n                }\n            });\n            if (this._isNewPrompt) {\n                this.dispatchEvent(new CustomEvent('add-prompt', {\n                    detail: { formData: data },\n                }));\n            }\n            else {\n                this.dispatchEvent(new CustomEvent('save-prompt', {\n                    detail: { formData: data },\n                }));\n            }\n        }\n    }\n    /**\n     * Event handler to handle user changing current view\n     * @param {event} event event\n     */\n    onChangeView(event) {\n        this.dispatchEvent(new CustomEvent('change-view', {\n            detail: { newView: event.target.value },\n        }));\n    }\n}\nUXControl.styles = styles;\n__decorate([\n    property({ attribute: 'prompt-samples', type: Array })\n], UXControl.prototype, \"promptSamples\", void 0);\n__decorate([\n    property({ type: Boolean })\n], UXControl.prototype, \"open\", void 0);\n__decorate([\n    property({ attribute: 'current-view', type: Object })\n], UXControl.prototype, \"currentView\", void 0);\n__decorate([\n    property({ attribute: 'view-list', type: Array })\n], UXControl.prototype, \"viewList\", void 0);\n__decorate([\n    property({ type: Boolean })\n], UXControl.prototype, \"isEditModalOpen\", void 0);\n__decorate([\n    property({ type: String })\n], UXControl.prototype, \"_newName\", void 0);\n__decorate([\n    property({ type: String })\n    // @ts-ignore: Used in template.ts\n], UXControl.prototype, \"_currentPrompt\", void 0);\n__decorate([\n    property({ type: Object })\n    // @ts-ignore: Used in template.ts\n], UXControl.prototype, \"_currentContextVariables\", void 0);\n__decorate([\n    property({ type: String })\n    // @ts-ignore: Used in template.ts\n], UXControl.prototype, \"_currentResponse\", void 0);\n__decorate([\n    property({ type: String })\n    // @ts-ignore: Used in template.ts\n], UXControl.prototype, \"_currentResponseView\", void 0);\n__decorate([\n    property({ type: Object })\n    // @ts-ignore: Used in template.ts\n], UXControl.prototype, \"_currentParameters\", void 0);\n__decorate([\n    property({ type: Boolean })\n], UXControl.prototype, \"_showRename\", void 0);\n__decorate([\n    property({ type: Boolean })\n], UXControl.prototype, \"_showAddContextVariable\", void 0);\n__decorate([\n    property({ type: Boolean })\n], UXControl.prototype, \"_showAddParameter\", void 0);\n__decorate([\n    property({ type: String })\n], UXControl.prototype, \"_newContextVariable\", void 0);\n__decorate([\n    property({ type: String })\n], UXControl.prototype, \"_newParameter\", void 0);\n__decorate([\n    property({ type: Boolean })\n], UXControl.prototype, \"_isNewPrompt\", void 0);\n"]}