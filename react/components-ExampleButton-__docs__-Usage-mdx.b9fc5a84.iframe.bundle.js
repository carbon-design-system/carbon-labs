"use strict";(self.webpackChunk_carbon_labs_react=self.webpackChunk_carbon_labs_react||[]).push([[8790],{"./src/components/ExampleButton/__docs__/Usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("../../node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js");const accordion_anatomy_namespaceObject=__webpack_require__.p+"static/media/accordion-anatomy.f061f351.png",accordion_flush_namespaceObject=__webpack_require__.p+"static/media/accordion-flush.ae30701d.png",accordion_flush_spec_namespaceObject=__webpack_require__.p+"static/media/accordion-flush-spec.0f31be71.png",accordion_alignment_do_namespaceObject=__webpack_require__.p+"static/media/accordion-alignment-do.b0d859d0.png",accordion_alignment_do_2_namespaceObject=__webpack_require__.p+"static/media/accordion-alignment-do-2.e26b8480.png",accordion_placement_2m_namespaceObject=__webpack_require__.p+"static/media/accordion-placement-2m.ee4a60f0.png",accordion_placement_2_namespaceObject=__webpack_require__.p+"static/media/accordion-placement-2.341a3a3a.png",accordion_placement_1_namespaceObject=__webpack_require__.p+"static/media/accordion-placement-1.5dd858d6.png",accordion_state_1_namespaceObject=__webpack_require__.p+"static/media/accordion-state-1.224e22d2.png",accordion_state_2_namespaceObject=__webpack_require__.p+"static/media/accordion-state-2.78c0a5bc.png",accordion_state_3_namespaceObject=__webpack_require__.p+"static/media/accordion-state-3.f70e7b82.png",accordion_click_target_namespaceObject=__webpack_require__.p+"static/media/accordion-click-target.10add76c.png";function _createMdxContent(props){const _components={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,lib.R)(),...props.components},{AnchorLink,AnchorLinks,ArtDirection,Column,DoDont,DoDontRow,InlineNotification,Meta,PageDescription,Row,StorybookDemo}=_components;return AnchorLink||_missingMdxReference("AnchorLink",!0),AnchorLinks||_missingMdxReference("AnchorLinks",!0),ArtDirection||_missingMdxReference("ArtDirection",!0),Column||_missingMdxReference("Column",!0),DoDont||_missingMdxReference("DoDont",!0),DoDontRow||_missingMdxReference("DoDontRow",!0),InlineNotification||_missingMdxReference("InlineNotification",!0),Meta||_missingMdxReference("Meta",!0),PageDescription||_missingMdxReference("PageDescription",!0),Row||_missingMdxReference("Row",!0),StorybookDemo||_missingMdxReference("StorybookDemo",!0),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Meta,{title:"Example Component/ExampleButton/Docs/Usage"}),"\n",(0,jsx_runtime.jsx)(InlineNotification,{kind:"info",children:(0,jsx_runtime.jsxs)(_components.p,{children:["This example documentation is from the\n",(0,jsx_runtime.jsx)(_components.a,{href:"https://carbondesignsystem.com/components/accordion/usage",rel:"nofollow",children:"Accordion"}),"\ncomponent\n(",(0,jsx_runtime.jsx)(_components.a,{href:"https://github.com/carbon-design-system/carbon-website/blob/main/src/pages/components/accordion/usage.mdx",rel:"nofollow",children:"source"}),").\nDocumentation templates can be found\n",(0,jsx_runtime.jsx)(_components.a,{href:"https://carbondesignsystem.com/contributing/documentation",rel:"nofollow",children:"here"}),"."]})}),"\n",(0,jsx_runtime.jsx)(PageDescription,{children:(0,jsx_runtime.jsx)(_components.p,{children:"An accordion is a vertically stacked list of headers that reveal or hide\nassociated sections of content."})}),"\n",(0,jsx_runtime.jsxs)(AnchorLinks,{children:[(0,jsx_runtime.jsx)(AnchorLink,{children:"Live demo"}),(0,jsx_runtime.jsx)(AnchorLink,{children:"Overview"}),(0,jsx_runtime.jsx)(AnchorLink,{children:"Formatting"}),(0,jsx_runtime.jsx)(AnchorLink,{children:"Content"}),(0,jsx_runtime.jsx)(AnchorLink,{children:"Behaviors"}),(0,jsx_runtime.jsx)(AnchorLink,{children:"Related"}),(0,jsx_runtime.jsx)(AnchorLink,{children:"References"}),(0,jsx_runtime.jsx)(AnchorLink,{children:"Feedback"})]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"live-demo",children:"Live demo"}),"\n",(0,jsx_runtime.jsx)(StorybookDemo,{themeSelector:!0,url:"https://react.carbondesignsystem.com",variants:[{label:"Default",variant:"components-accordion--default"}]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"overview",children:"Overview"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The accordion component delivers large amounts of content in a small space\nthrough progressive disclosure. The header title gives the user a high level\noverview of the content allowing the user to decide which sections to read."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Accordions can make information processing and discovering more effective.\nHowever, it does hide content from users and it's important to account for a\nuser not noticing or reading all of the included content."}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"when-to-use",children:"When to use"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"To organize related information."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"To shorten pages and reduce scrolling when content is not crucial to read in\nfull."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"When space is at a premium and long content cannot be displayed all at once,\nlike on a mobile interface or in a side panel."}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"when-not-to-use",children:"When not to use"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:["When organizing large amounts of information that can be nested, consider\nusing ",(0,jsx_runtime.jsx)(_components.a,{href:"/components/tree-view/usage",children:"tree view"})," instead."]}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"If a user is likely to read all of the content, then don't use an accordion as\nit adds the burden of an extra click; instead use a full scrolling page with\nnormal headers."}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"formatting",children:"Formatting"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"anatomy",children:"Anatomy"}),"\n",(0,jsx_runtime.jsx)(Row,{children:(0,jsx_runtime.jsx)(Column,{colLg:8,children:(0,jsx_runtime.jsx)("img",{alt:"accordion anatomy",src:accordion_anatomy_namespaceObject})})}),"\n",(0,jsx_runtime.jsxs)(_components.ol,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Header"}),": contains the section title and is control for revealing the\npanel."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Icon"}),": indicates if the panel is open or closed."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Panel"}),": the section of content associated with an accordion header."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"alignment",children:"Alignment"}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"flush-alignment",children:"Flush alignment"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Use flush alignment when designing within smaller spaces on a page such as side\npanels or sidebars to achieve better text alignment with other content. Flush\nalignment is also used to help avoid converging rule lines between components\nthat are close to each other on a page."}),"\n",(0,jsx_runtime.jsx)(Row,{children:(0,jsx_runtime.jsx)(Column,{colLg:8,children:(0,jsx_runtime.jsx)("img",{alt:"accordion flush alignment",src:accordion_flush_namespaceObject})})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Flush alignment places the row title and chevron icons with 0px padding, keeping\nthem flush to the rule dividers. For hover and focus interactive states, the\nleft and right padding receives an additional 16px padding."}),"\n",(0,jsx_runtime.jsx)(Row,{children:(0,jsx_runtime.jsx)(Column,{colLg:8,children:(0,jsx_runtime.jsx)("img",{alt:"accordion flush alignment spec",src:accordion_flush_spec_namespaceObject})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"icon-alignment",children:"Icon alignment"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["By default the chevron icon is placed on the ",(0,jsx_runtime.jsx)(_components.code,{children:"end"})," side of the header. This\nallows for the title on the ",(0,jsx_runtime.jsx)(_components.code,{children:"start"})," side to align with other type elements in\nthe layout, which is the preferred alignment scenario."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["However, in some rare scenarios, the accordion may be modified to place the icon\nin ",(0,jsx_runtime.jsx)(_components.code,{children:"start"})," front of the title to function more like a tree. Most instances\nshould use the default ",(0,jsx_runtime.jsx)(_components.code,{children:"end"})," alignment, especially for any pure content or\ndocumentation purposes. Icon placement in accordions should be consistent\nthroughout your page and should not alternate."]}),"\n",(0,jsx_runtime.jsxs)(DoDontRow,{children:[(0,jsx_runtime.jsx)(DoDont,{type:"do",colMd:4,colLg:4,caption:"In most cases, use the default end icon alignment to keep accordion text aligned with other content on the page.",children:(0,jsx_runtime.jsx)("img",{alt:"Do use the default end icon alignment to keep accordion text aligned with other content on the page.",src:accordion_alignment_do_namespaceObject})}),(0,jsx_runtime.jsx)(DoDont,{type:"do",colMd:4,colLg:4,caption:"In rare cases, you can place icons on the start side for tree like functionality.",children:(0,jsx_runtime.jsx)("img",{alt:"Do place icons on the start side for tree like functionality.",src:accordion_alignment_do_2_namespaceObject})})]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"placement",children:"Placement"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Accordions can be placed with main page content or placed inside of a container\nsuch as a side panel or tile."}),"\n",(0,jsx_runtime.jsx)(Row,{children:(0,jsx_runtime.jsx)(Column,{colLg:12,colMd:12,colSm:4,children:(0,jsx_runtime.jsxs)(ArtDirection,{children:[(0,jsx_runtime.jsx)("img",{alt:"accordion placement",src:accordion_placement_2m_namespaceObject}),(0,jsx_runtime.jsx)("img",{alt:"accordion placement",src:accordion_placement_2_namespaceObject}),(0,jsx_runtime.jsx)("img",{alt:"accordion placement",src:accordion_placement_2_namespaceObject})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"grid-placement",children:"Grid placement"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["When placing an accordion on the 2x Grid with its default alignment, the\nindented title and content align to the grid columns, and the top and bottom\nborders hang into the gutter. However, the accordion can be modified to have a\n",(0,jsx_runtime.jsx)(_components.a,{href:"/components/accordion/usage#alignment",children:"flush alignment"})," where the titles and\ncontent are instead flush aligned with the top and bottom borders having 0px\npadding."]}),"\n",(0,jsx_runtime.jsx)(Row,{children:(0,jsx_runtime.jsx)(Column,{colLg:8,children:(0,jsx_runtime.jsx)("img",{alt:"accordion grid placement",src:accordion_placement_1_namespaceObject})})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"content",children:"Content"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"main-elements",children:"Main elements"}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"title",children:"Title"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"The title should be as brief as possible while still being clear and\ndescriptive."}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:["Each title should be wrapped in a\n",(0,jsx_runtime.jsx)(_components.a,{href:"https://www.w3.org/TR/wai-aria-practices-1.1/#wai-aria-roles-states-and-properties",rel:"nofollow",children:"role heading"}),"\n(h1-h6) that is appropriate for the information architecture of the page."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"body-copy",children:"Body copy"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"Content inside of a section may be split into paragraphs and include\nsub-headers if needed."}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"scrolling-content",children:"Scrolling content"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"When the accordion content is longer than the viewport the whole accordion\nshould vertically scroll. Content should not scroll inside of an individual\npanel. Content should never scroll horizontally in an accordion."}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"further-guidance",children:"Further guidance"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["For further content guidance, see Carbon's\n",(0,jsx_runtime.jsx)(_components.a,{href:"%5Bhttps://www.carbondesignsystem.com/guidelines/content/general%5D(https://www.carbondesignsystem.com/guidelines/content/general)",children:"content guidelines"}),"."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"behaviors",children:"Behaviors"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"states",children:"States"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The accordion component has two main states: ",(0,jsx_runtime.jsx)(_components.strong,{children:"collapsed"})," and ",(0,jsx_runtime.jsx)(_components.strong,{children:"expanded"}),". The\nchevron icon at the end of the accordion indicates which state the accordion is\nin. The chevron points down to indicate collapsed and up to indicate expanded."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Accordions begin by default in the collapsed state with all content panels\nclosed. Starting in a collapsed state gives the user a high level overview of\nthe available information."}),"\n",(0,jsx_runtime.jsx)(Row,{children:(0,jsx_runtime.jsx)(Column,{colLg:8,children:(0,jsx_runtime.jsx)("img",{alt:"accordion states",src:accordion_state_1_namespaceObject})})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"A user can then independently expand each section of the accordion allowing for\nmultiple sections to be open at once."}),"\n",(0,jsx_runtime.jsx)(Row,{children:(0,jsx_runtime.jsx)(Column,{colLg:8,children:(0,jsx_runtime.jsx)("img",{alt:"multiple sections expanded",src:accordion_state_2_namespaceObject})})}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["In addition to the collapsed and expanded states, accordions also have\ninteractive states for focus, hover, and disabled. See the\n",(0,jsx_runtime.jsx)(_components.a,{href:"/components/accordion/style",children:"style tab"})," for more details."]}),"\n",(0,jsx_runtime.jsx)(Row,{children:(0,jsx_runtime.jsx)(Column,{colLg:8,children:(0,jsx_runtime.jsx)("img",{alt:"accordion interactives states",src:accordion_state_3_namespaceObject})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"interactions",children:"Interactions"}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"mouse",children:"Mouse"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Users can trigger a state change by clicking on the chevron or clicking anywhere\nin the header area."}),"\n",(0,jsx_runtime.jsx)(Row,{children:(0,jsx_runtime.jsx)(Column,{colLg:8,children:(0,jsx_runtime.jsx)("img",{alt:"accordion click targets",src:accordion_click_target_namespaceObject})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"keyboard",children:"Keyboard"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Users can navigate between accordion headers by pressing ",(0,jsx_runtime.jsx)(_components.code,{children:"Tab"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"Shift-Tab"}),".\nUsers can trigger a state change by pressing ",(0,jsx_runtime.jsx)(_components.code,{children:"Enter"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"Space"})," while the header\narea has focus. For additional keyboard interactions, see the\n",(0,jsx_runtime.jsx)(_components.a,{href:"/components/accordion/accessibility#keyboard-interactions",children:"accessibility tab"}),"."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"related",children:"Related"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The following components are additional ways to organize content. Consider the\ntype and length of content you are working with when choosing a content\ncontainer. Longer form content may benefit from tabs or a content switcher while\nvery short content might do better in a structured list."}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"/components/content-switcher/usage",children:"Content switchers"})," allow users to toggle\nbetween two or more content sections within the same space on the screen."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"/components/progress-indicator/usage",children:"Progress indicators"})," guide users\nthrough any linear, multistep task by showing the user their completed,\ncurrent, and future steps."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"/components/structured-list/usage",children:"Structured lists"})," group content that is\nsimilar or related, such as terms and definitions."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"/components/tabs/usage",children:"Tabs"})," organize related content by allowing the user\nto navigate between groups of information that appear within the same context."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"/components/tree-view/usage",children:"Tree view"})," is a hierarchical structure that\nprovides nested levels of navigation."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"references",children:"References"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:["Hoa Loranger,\n",(0,jsx_runtime.jsx)(_components.a,{href:"https://www.nngroup.com/articles/accordions-complex-content/",rel:"nofollow",children:"Accordions Are Not Always the Answer for Complex Content on Desktops"}),"\n(Nielsen Norman Group, 2014)"]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"feedback",children:"Feedback"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Help us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n",(0,jsx_runtime.jsx)(_components.a,{href:"https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md",rel:"nofollow",children:"GitHub"}),"."]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}function _missingMdxReference(id,component){throw new Error("Expected "+(component?"component":"object")+" `"+id+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);