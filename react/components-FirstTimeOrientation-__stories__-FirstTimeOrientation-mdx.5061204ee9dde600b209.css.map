{"version":3,"file":"components-FirstTimeOrientation-__stories__-FirstTimeOrientation-mdx.5061204ee9dde600b209.css","mappings":"AASA;AEsDA","sources":["webpack://@carbon-labs/react/./src/components/FirstTimeOrientation/__stories__/storybook.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/themes/scss/generated/_tokens.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/_layout.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/utilities/_custom-property.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/utilities/_keyframes.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/components/tag/_tag.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/type/scss/_styles.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/components/tag/_mixins.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/components/tag/_tokens.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/node_modules/@carbon/layout/scss/generated/_spacing.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/utilities/_layout.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/theme/_theme.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/utilities/_skeleton.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/utilities/_high-contrast-mode.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/utilities/_visually-hidden.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/ibm-products/scss/components/Carousel/_carousel.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/utilities/_focus-outline.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/ibm-products/scss/components/InterstitialScreen/_interstitial-screen.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/node_modules/@carbon/grid/scss/_breakpoint.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/node_modules/@carbon/grid/scss/_flex-grid.scss","webpack://@carbon-labs/react/./src/components/FirstTimeOrientation/components/styles/_firstTimeOrientation.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/type/node_modules/@carbon/grid/scss/_breakpoint.scss"],"sourcesContent":["/**\n * Copyright IBM Corp. 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@use '@carbon/styles/scss/theme' as *;\n\n.storyBody {\n  background-color: $background;\n  min-block-size: 600px;\n}\n\n.c4p--interstitial-screen {\n  inline-size: 100%;\n}\n","// Code generated by @carbon/themes. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use 'sass:map';\n@use '../config';\n@use '../theme';\n\n/// Internal helper for generating CSS Custom Properties\n@function _get($token) {\n  @if config.$use-fallback-value == false {\n    @return var(--#{config.$prefix}-#{$token});\n  } @else {\n    @return var(--#{config.$prefix}-#{$token}, #{theme.get($token)});\n  }\n}\n\n/// The CSS Custom Property for the `background` token\n$background: _get('background') !default;\n\n/// The CSS Custom Property for the `background-active` token\n$background-active: _get('background-active') !default;\n\n/// The CSS Custom Property for the `background-selected` token\n$background-selected: _get('background-selected') !default;\n\n/// The CSS Custom Property for the `background-selected-hover` token\n$background-selected-hover: _get('background-selected-hover') !default;\n\n/// The CSS Custom Property for the `background-hover` token\n$background-hover: _get('background-hover') !default;\n\n/// The CSS Custom Property for the `background-brand` token\n$background-brand: _get('background-brand') !default;\n\n/// The CSS Custom Property for the `background-inverse` token\n$background-inverse: _get('background-inverse') !default;\n\n/// The CSS Custom Property for the `background-inverse-hover` token\n$background-inverse-hover: _get('background-inverse-hover') !default;\n\n/// The CSS Custom Property for the `layer-01` token\n$layer-01: _get('layer-01') !default;\n\n/// The CSS Custom Property for the `layer-active-01` token\n$layer-active-01: _get('layer-active-01') !default;\n\n/// The CSS Custom Property for the `layer-background-01` token\n$layer-background-01: _get('layer-background-01') !default;\n\n/// The CSS Custom Property for the `layer-hover-01` token\n$layer-hover-01: _get('layer-hover-01') !default;\n\n/// The CSS Custom Property for the `layer-selected-01` token\n$layer-selected-01: _get('layer-selected-01') !default;\n\n/// The CSS Custom Property for the `layer-selected-hover-01` token\n$layer-selected-hover-01: _get('layer-selected-hover-01') !default;\n\n/// The CSS Custom Property for the `layer-02` token\n$layer-02: _get('layer-02') !default;\n\n/// The CSS Custom Property for the `layer-active-02` token\n$layer-active-02: _get('layer-active-02') !default;\n\n/// The CSS Custom Property for the `layer-background-02` token\n$layer-background-02: _get('layer-background-02') !default;\n\n/// The CSS Custom Property for the `layer-hover-02` token\n$layer-hover-02: _get('layer-hover-02') !default;\n\n/// The CSS Custom Property for the `layer-selected-02` token\n$layer-selected-02: _get('layer-selected-02') !default;\n\n/// The CSS Custom Property for the `layer-selected-hover-02` token\n$layer-selected-hover-02: _get('layer-selected-hover-02') !default;\n\n/// The CSS Custom Property for the `layer-03` token\n$layer-03: _get('layer-03') !default;\n\n/// The CSS Custom Property for the `layer-active-03` token\n$layer-active-03: _get('layer-active-03') !default;\n\n/// The CSS Custom Property for the `layer-background-03` token\n$layer-background-03: _get('layer-background-03') !default;\n\n/// The CSS Custom Property for the `layer-hover-03` token\n$layer-hover-03: _get('layer-hover-03') !default;\n\n/// The CSS Custom Property for the `layer-selected-03` token\n$layer-selected-03: _get('layer-selected-03') !default;\n\n/// The CSS Custom Property for the `layer-selected-hover-03` token\n$layer-selected-hover-03: _get('layer-selected-hover-03') !default;\n\n/// The CSS Custom Property for the `layer-selected-inverse` token\n$layer-selected-inverse: _get('layer-selected-inverse') !default;\n\n/// The CSS Custom Property for the `layer-selected-disabled` token\n$layer-selected-disabled: _get('layer-selected-disabled') !default;\n\n/// The CSS Custom Property for the `layer-accent-01` token\n$layer-accent-01: _get('layer-accent-01') !default;\n\n/// The CSS Custom Property for the `layer-accent-active-01` token\n$layer-accent-active-01: _get('layer-accent-active-01') !default;\n\n/// The CSS Custom Property for the `layer-accent-hover-01` token\n$layer-accent-hover-01: _get('layer-accent-hover-01') !default;\n\n/// The CSS Custom Property for the `layer-accent-02` token\n$layer-accent-02: _get('layer-accent-02') !default;\n\n/// The CSS Custom Property for the `layer-accent-active-02` token\n$layer-accent-active-02: _get('layer-accent-active-02') !default;\n\n/// The CSS Custom Property for the `layer-accent-hover-02` token\n$layer-accent-hover-02: _get('layer-accent-hover-02') !default;\n\n/// The CSS Custom Property for the `layer-accent-03` token\n$layer-accent-03: _get('layer-accent-03') !default;\n\n/// The CSS Custom Property for the `layer-accent-active-03` token\n$layer-accent-active-03: _get('layer-accent-active-03') !default;\n\n/// The CSS Custom Property for the `layer-accent-hover-03` token\n$layer-accent-hover-03: _get('layer-accent-hover-03') !default;\n\n/// The CSS Custom Property for the `field-01` token\n$field-01: _get('field-01') !default;\n\n/// The CSS Custom Property for the `field-hover-01` token\n$field-hover-01: _get('field-hover-01') !default;\n\n/// The CSS Custom Property for the `field-02` token\n$field-02: _get('field-02') !default;\n\n/// The CSS Custom Property for the `field-hover-02` token\n$field-hover-02: _get('field-hover-02') !default;\n\n/// The CSS Custom Property for the `field-03` token\n$field-03: _get('field-03') !default;\n\n/// The CSS Custom Property for the `field-hover-03` token\n$field-hover-03: _get('field-hover-03') !default;\n\n/// The CSS Custom Property for the `interactive` token\n$interactive: _get('interactive') !default;\n\n/// The CSS Custom Property for the `border-subtle-00` token\n$border-subtle-00: _get('border-subtle-00') !default;\n\n/// The CSS Custom Property for the `border-subtle-01` token\n$border-subtle-01: _get('border-subtle-01') !default;\n\n/// The CSS Custom Property for the `border-subtle-selected-01` token\n$border-subtle-selected-01: _get('border-subtle-selected-01') !default;\n\n/// The CSS Custom Property for the `border-subtle-02` token\n$border-subtle-02: _get('border-subtle-02') !default;\n\n/// The CSS Custom Property for the `border-subtle-selected-02` token\n$border-subtle-selected-02: _get('border-subtle-selected-02') !default;\n\n/// The CSS Custom Property for the `border-subtle-03` token\n$border-subtle-03: _get('border-subtle-03') !default;\n\n/// The CSS Custom Property for the `border-subtle-selected-03` token\n$border-subtle-selected-03: _get('border-subtle-selected-03') !default;\n\n/// The CSS Custom Property for the `border-strong-01` token\n$border-strong-01: _get('border-strong-01') !default;\n\n/// The CSS Custom Property for the `border-strong-02` token\n$border-strong-02: _get('border-strong-02') !default;\n\n/// The CSS Custom Property for the `border-strong-03` token\n$border-strong-03: _get('border-strong-03') !default;\n\n/// The CSS Custom Property for the `border-tile-01` token\n$border-tile-01: _get('border-tile-01') !default;\n\n/// The CSS Custom Property for the `border-tile-02` token\n$border-tile-02: _get('border-tile-02') !default;\n\n/// The CSS Custom Property for the `border-tile-03` token\n$border-tile-03: _get('border-tile-03') !default;\n\n/// The CSS Custom Property for the `border-inverse` token\n$border-inverse: _get('border-inverse') !default;\n\n/// The CSS Custom Property for the `border-interactive` token\n$border-interactive: _get('border-interactive') !default;\n\n/// The CSS Custom Property for the `border-disabled` token\n$border-disabled: _get('border-disabled') !default;\n\n/// The CSS Custom Property for the `text-primary` token\n$text-primary: _get('text-primary') !default;\n\n/// The CSS Custom Property for the `text-secondary` token\n$text-secondary: _get('text-secondary') !default;\n\n/// The CSS Custom Property for the `text-placeholder` token\n$text-placeholder: _get('text-placeholder') !default;\n\n/// The CSS Custom Property for the `text-helper` token\n$text-helper: _get('text-helper') !default;\n\n/// The CSS Custom Property for the `text-error` token\n$text-error: _get('text-error') !default;\n\n/// The CSS Custom Property for the `text-inverse` token\n$text-inverse: _get('text-inverse') !default;\n\n/// The CSS Custom Property for the `text-on-color` token\n$text-on-color: _get('text-on-color') !default;\n\n/// The CSS Custom Property for the `text-on-color-disabled` token\n$text-on-color-disabled: _get('text-on-color-disabled') !default;\n\n/// The CSS Custom Property for the `text-disabled` token\n$text-disabled: _get('text-disabled') !default;\n\n/// The CSS Custom Property for the `link-primary` token\n$link-primary: _get('link-primary') !default;\n\n/// The CSS Custom Property for the `link-primary-hover` token\n$link-primary-hover: _get('link-primary-hover') !default;\n\n/// The CSS Custom Property for the `link-secondary` token\n$link-secondary: _get('link-secondary') !default;\n\n/// The CSS Custom Property for the `link-inverse-visited` token\n$link-inverse-visited: _get('link-inverse-visited') !default;\n\n/// The CSS Custom Property for the `link-visited` token\n$link-visited: _get('link-visited') !default;\n\n/// The CSS Custom Property for the `link-inverse` token\n$link-inverse: _get('link-inverse') !default;\n\n/// The CSS Custom Property for the `link-inverse-active` token\n$link-inverse-active: _get('link-inverse-active') !default;\n\n/// The CSS Custom Property for the `link-inverse-hover` token\n$link-inverse-hover: _get('link-inverse-hover') !default;\n\n/// The CSS Custom Property for the `icon-primary` token\n$icon-primary: _get('icon-primary') !default;\n\n/// The CSS Custom Property for the `icon-secondary` token\n$icon-secondary: _get('icon-secondary') !default;\n\n/// The CSS Custom Property for the `icon-inverse` token\n$icon-inverse: _get('icon-inverse') !default;\n\n/// The CSS Custom Property for the `icon-on-color` token\n$icon-on-color: _get('icon-on-color') !default;\n\n/// The CSS Custom Property for the `icon-on-color-disabled` token\n$icon-on-color-disabled: _get('icon-on-color-disabled') !default;\n\n/// The CSS Custom Property for the `icon-disabled` token\n$icon-disabled: _get('icon-disabled') !default;\n\n/// The CSS Custom Property for the `icon-interactive` token\n$icon-interactive: _get('icon-interactive') !default;\n\n/// The CSS Custom Property for the `support-error` token\n$support-error: _get('support-error') !default;\n\n/// The CSS Custom Property for the `support-success` token\n$support-success: _get('support-success') !default;\n\n/// The CSS Custom Property for the `support-warning` token\n$support-warning: _get('support-warning') !default;\n\n/// The CSS Custom Property for the `support-info` token\n$support-info: _get('support-info') !default;\n\n/// The CSS Custom Property for the `support-error-inverse` token\n$support-error-inverse: _get('support-error-inverse') !default;\n\n/// The CSS Custom Property for the `support-success-inverse` token\n$support-success-inverse: _get('support-success-inverse') !default;\n\n/// The CSS Custom Property for the `support-warning-inverse` token\n$support-warning-inverse: _get('support-warning-inverse') !default;\n\n/// The CSS Custom Property for the `support-info-inverse` token\n$support-info-inverse: _get('support-info-inverse') !default;\n\n/// The CSS Custom Property for the `support-caution-major` token\n$support-caution-major: _get('support-caution-major') !default;\n\n/// The CSS Custom Property for the `support-caution-minor` token\n$support-caution-minor: _get('support-caution-minor') !default;\n\n/// The CSS Custom Property for the `support-caution-undefined` token\n$support-caution-undefined: _get('support-caution-undefined') !default;\n\n/// The CSS Custom Property for the `ai-popover-background` token\n$ai-popover-background: _get('ai-popover-background') !default;\n\n/// The CSS Custom Property for the `ai-popover-shadow-outer-01` token\n$ai-popover-shadow-outer-01: _get('ai-popover-shadow-outer-01') !default;\n\n/// The CSS Custom Property for the `ai-popover-shadow-outer-02` token\n$ai-popover-shadow-outer-02: _get('ai-popover-shadow-outer-02') !default;\n\n/// The CSS Custom Property for the `ai-inner-shadow` token\n$ai-inner-shadow: _get('ai-inner-shadow') !default;\n\n/// The CSS Custom Property for the `ai-aura-start-sm` token\n$ai-aura-start-sm: _get('ai-aura-start-sm') !default;\n\n/// The CSS Custom Property for the `ai-aura-start` token\n$ai-aura-start: _get('ai-aura-start') !default;\n\n/// The CSS Custom Property for the `ai-aura-end` token\n$ai-aura-end: _get('ai-aura-end') !default;\n\n/// The CSS Custom Property for the `ai-aura-hover-background` token\n$ai-aura-hover-background: _get('ai-aura-hover-background') !default;\n\n/// The CSS Custom Property for the `ai-aura-hover-start` token\n$ai-aura-hover-start: _get('ai-aura-hover-start') !default;\n\n/// The CSS Custom Property for the `ai-aura-hover-end` token\n$ai-aura-hover-end: _get('ai-aura-hover-end') !default;\n\n/// The CSS Custom Property for the `ai-border-strong` token\n$ai-border-strong: _get('ai-border-strong') !default;\n\n/// The CSS Custom Property for the `ai-border-start` token\n$ai-border-start: _get('ai-border-start') !default;\n\n/// The CSS Custom Property for the `ai-border-end` token\n$ai-border-end: _get('ai-border-end') !default;\n\n/// The CSS Custom Property for the `ai-drop-shadow` token\n$ai-drop-shadow: _get('ai-drop-shadow') !default;\n\n/// The CSS Custom Property for the `ai-skeleton-background` token\n$ai-skeleton-background: _get('ai-skeleton-background') !default;\n\n/// The CSS Custom Property for the `ai-skeleton-element-background` token\n$ai-skeleton-element-background: _get(\n  'ai-skeleton-element-background'\n) !default;\n\n/// The CSS Custom Property for the `ai-overlay` token\n$ai-overlay: _get('ai-overlay') !default;\n\n/// The CSS Custom Property for the `ai-popover-caret-center` token\n$ai-popover-caret-center: _get('ai-popover-caret-center') !default;\n\n/// The CSS Custom Property for the `ai-popover-caret-bottom` token\n$ai-popover-caret-bottom: _get('ai-popover-caret-bottom') !default;\n\n/// The CSS Custom Property for the `ai-popover-caret-bottom-background` token\n$ai-popover-caret-bottom-background: _get(\n  'ai-popover-caret-bottom-background'\n) !default;\n\n/// The CSS Custom Property for the `ai-popover-caret-bottom-background-actions` token\n$ai-popover-caret-bottom-background-actions: _get(\n  'ai-popover-caret-bottom-background-actions'\n) !default;\n\n/// The CSS Custom Property for the `chat-prompt-background` token\n$chat-prompt-background: _get('chat-prompt-background') !default;\n\n/// The CSS Custom Property for the `chat-prompt-border-start` token\n$chat-prompt-border-start: _get('chat-prompt-border-start') !default;\n\n/// The CSS Custom Property for the `chat-prompt-border-end` token\n$chat-prompt-border-end: _get('chat-prompt-border-end') !default;\n\n/// The CSS Custom Property for the `chat-bubble-user` token\n$chat-bubble-user: _get('chat-bubble-user') !default;\n\n/// The CSS Custom Property for the `chat-bubble-agent` token\n$chat-bubble-agent: _get('chat-bubble-agent') !default;\n\n/// The CSS Custom Property for the `chat-bubble-border` token\n$chat-bubble-border: _get('chat-bubble-border') !default;\n\n/// The CSS Custom Property for the `chat-avatar-bot` token\n$chat-avatar-bot: _get('chat-avatar-bot') !default;\n\n/// The CSS Custom Property for the `chat-avatar-agent` token\n$chat-avatar-agent: _get('chat-avatar-agent') !default;\n\n/// The CSS Custom Property for the `chat-avatar-user` token\n$chat-avatar-user: _get('chat-avatar-user') !default;\n\n/// The CSS Custom Property for the `chat-shell-background` token\n$chat-shell-background: _get('chat-shell-background') !default;\n\n/// The CSS Custom Property for the `chat-header-background` token\n$chat-header-background: _get('chat-header-background') !default;\n\n/// The CSS Custom Property for the `chat-button` token\n$chat-button: _get('chat-button') !default;\n\n/// The CSS Custom Property for the `chat-button-hover` token\n$chat-button-hover: _get('chat-button-hover') !default;\n\n/// The CSS Custom Property for the `chat-button-text-hover` token\n$chat-button-text-hover: _get('chat-button-text-hover') !default;\n\n/// The CSS Custom Property for the `chat-button-active` token\n$chat-button-active: _get('chat-button-active') !default;\n\n/// The CSS Custom Property for the `chat-button-selected` token\n$chat-button-selected: _get('chat-button-selected') !default;\n\n/// The CSS Custom Property for the `chat-button-text-selected` token\n$chat-button-text-selected: _get('chat-button-text-selected') !default;\n\n/// The CSS Custom Property for the `highlight` token\n$highlight: _get('highlight') !default;\n\n/// The CSS Custom Property for the `overlay` token\n$overlay: _get('overlay') !default;\n\n/// The CSS Custom Property for the `toggle-off` token\n$toggle-off: _get('toggle-off') !default;\n\n/// The CSS Custom Property for the `shadow` token\n$shadow: _get('shadow') !default;\n\n/// The CSS Custom Property for the `focus` token\n$focus: _get('focus') !default;\n\n/// The CSS Custom Property for the `focus-inset` token\n$focus-inset: _get('focus-inset') !default;\n\n/// The CSS Custom Property for the `focus-inverse` token\n$focus-inverse: _get('focus-inverse') !default;\n\n/// The CSS Custom Property for the `skeleton-background` token\n$skeleton-background: _get('skeleton-background') !default;\n\n/// The CSS Custom Property for the `skeleton-element` token\n$skeleton-element: _get('skeleton-element') !default;\n","//\n// Copyright IBM Corp. 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use 'sass:map';\n@use 'sass:list';\n\n@use './config' as *;\n@use './utilities/custom-property';\n@use './utilities/convert';\n@use './spacing' as *;\n\n$layout-tokens: (\n  size: (\n    height: (\n      xs: convert.to-rem(24px),\n      sm: convert.to-rem(32px),\n      md: convert.to-rem(40px),\n      lg: convert.to-rem(48px),\n      xl: convert.to-rem(64px),\n      2xl: convert.to-rem(80px),\n    ),\n  ),\n  density: (\n    padding-inline: (\n      condensed: $spacing-03,\n      normal: $spacing-05,\n    ),\n  ),\n);\n\n@mixin emit-layout-tokens {\n  @each $group, $properties in $layout-tokens {\n    @each $property, $steps in $properties {\n      @each $step, $value in $steps {\n        @include custom-property.declaration(\n          'layout-#{$group}-#{$property}-#{$step}',\n          $value\n        );\n      }\n\n      // CSS max() doesn't accept '0' as a value without a unit\n      // stylelint-disable length-zero-no-unit\n      @include custom-property.declaration(\n        'layout-#{$group}-#{$property}-min',\n        0px\n      );\n      // stylelint-enable length-zero-no-unit\n\n      @include custom-property.declaration(\n        'layout-#{$group}-#{$property}-max',\n        999999999px\n      );\n    }\n  }\n}\n\n@each $group, $properties in $layout-tokens {\n  @each $property, $steps in $properties {\n    @each $step, $value in $steps {\n      .#{$prefix}--layout--#{$group}-#{$step} {\n        @include custom-property.declaration(\n          'layout-#{$group}-#{$property}-context',\n          custom-property.get-var(\n            'layout-#{$group}-#{$property}-#{$step}',\n            $value\n          )\n        );\n        @include custom-property.declaration(\n          'layout-#{$group}-#{$property}',\n          custom-property.get-var('layout-#{$group}-#{$property}-context')\n        );\n      }\n\n      .#{$prefix}--layout-constraint--#{$group}__default-#{$step} {\n        @include custom-property.declaration(\n          'layout-#{$group}-#{$property}',\n          custom-property.get-var(\n            'layout-#{$group}-#{$property}-context',\n            custom-property.get-var(\n              'layout-#{$group}-#{$property}-#{$step}',\n              $value\n            )\n          )\n        );\n      }\n\n      @each $constraint in ('min', 'max') {\n        .#{$prefix}--layout-constraint--#{$group}__#{$constraint}-#{$step} {\n          @include custom-property.declaration(\n            'layout-#{$group}-#{$property}-#{$constraint}',\n            custom-property.get-var(\n              'layout-#{$group}-#{$property}-#{$step}',\n              $value\n            )\n          );\n        }\n      }\n    }\n  }\n}\n\n:root {\n  @include emit-layout-tokens();\n}\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use '../config';\n\n// Some CSS Custom Property terminology\n// @see https://www.w3.org/TR/css-variables-1/\n//\n// <custom-property-name>:\n//   Any valid identifer that starts with two dashes (--)\n//\n// A declaration:\n//   CSS Custom Properties can be used as declarations in a CSS selector. They\n//   take on the form of:\n//\n//   <custom-property-name>: <declaration-value>;\n//\n// The var() notation:\n//   You can use a CSS Custom Property as a substitute for a value of another\n//   property using the var() function. This function has the following syntax:\n//\n//   var( <custom-property-name> [, <declarative-value> ]? )\n//\n//   This function takes in an optional fallback value if the CSS Custom\n//   Property has not been previously defined\n\n/// Get the <custom-property-name> for a given string\n/// @param {String} $name\n/// @returns {String}\n@function get-name($name) {\n  @return --#{config.$prefix}-#{$name};\n}\n\n/// Get the var() representation for a given token\n/// @param {String} $name\n/// @param {Any} $fallback\n/// @returns var()\n@function get-var($name, $fallback: false) {\n  @if $fallback {\n    @return var(--#{config.$prefix}-#{$name}, #{$fallback});\n  }\n  @return var(--#{config.$prefix}-#{$name});\n}\n\n/// Emit a declaration which sets the value of a CSS Custom Property using the\n/// $name as the <custom-property-name> and the $value as the\n/// <declaration-value>\n/// @param {String} $name\n/// @param {any} $value\n@mixin declaration($name, $value) {\n  #{get-name($name)}: #{$value};\n}\n","//\n// Copyright IBM Corp. 2021\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n@use '../config' as *;\n\n@mixin content-visible {\n  opacity: 1;\n  visibility: inherit;\n}\n\n@mixin content-hidden {\n  opacity: 0;\n  visibility: hidden;\n}\n\n@keyframes #{$prefix}--hide-feedback {\n  0% {\n    @include content-visible;\n  }\n\n  100% {\n    @include content-hidden;\n  }\n}\n\n@keyframes #{$prefix}--show-feedback {\n  0% {\n    @include content-hidden;\n  }\n\n  100% {\n    @include content-visible;\n  }\n}\n\n@keyframes #{$prefix}--skeleton {\n  0% {\n    opacity: 0.3;\n    transform: scaleX(0);\n    transform-origin: left;\n  }\n\n  20% {\n    opacity: 1;\n    transform: scaleX(1);\n    transform-origin: left;\n  }\n\n  28% {\n    transform: scaleX(1);\n    transform-origin: right;\n  }\n\n  51% {\n    transform: scaleX(0);\n    transform-origin: right;\n  }\n\n  58% {\n    transform: scaleX(0);\n    transform-origin: right;\n  }\n\n  82% {\n    transform: scaleX(1);\n    transform-origin: right;\n  }\n\n  83% {\n    transform: scaleX(1);\n    transform-origin: left;\n  }\n\n  96% {\n    transform: scaleX(0);\n    transform-origin: left;\n  }\n\n  100% {\n    opacity: 0.3;\n    transform: scaleX(0);\n    transform-origin: left;\n  }\n}\n","//\n// Copyright IBM Corp. 2016, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use '../../theme' as *;\n@use '../../utilities/button-reset';\n@use '../../type' as *;\n@use '../../motion' as *;\n@use '../../config' as *;\n@use '../../utilities/component-tokens' as *;\n@use '../../utilities/convert';\n@use '../../utilities/high-contrast-mode' as *;\n@use '../../utilities/layout';\n@use '../../spacing' as *;\n@use './tokens' as *;\n@use './mixins' as *;\n@use '../../utilities/skeleton' as *;\n\n/// Tag styles\n/// @access public\n/// @group tag\n@mixin tag {\n  .#{$prefix}--tag {\n    @include layout.redefine-tokens(\n      (\n        size: (\n          height: (\n            xs: convert.to-rem(18px),\n            sm: convert.to-rem(18px),\n            md: convert.to-rem(24px),\n            lg: convert.to-rem(32px),\n          ),\n        ),\n      )\n    );\n\n    @include layout.use('size', $default: 'md', $min: 'sm', $max: 'lg');\n    @include type-style('label-01');\n    @include tag-theme($tag-background-gray, $tag-color-gray, $tag-hover-gray);\n\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: convert.to-rem(16px);\n    margin: $spacing-02;\n    cursor: default;\n    // restricts size of contained elements\n    max-inline-size: convert.to-rem(208px);\n    min-block-size: layout.size('height');\n    // ensures tag stays pill shaped;\n    min-inline-size: convert.to-rem(32px);\n    padding-inline: $spacing-03;\n    vertical-align: middle;\n    word-break: break-word;\n\n    &.#{$prefix}--tag--lg {\n      padding-inline-start: $spacing-04;\n    }\n\n    &:has(.#{$prefix}--tag__custom-icon) {\n      padding-inline-start: $spacing-02;\n    }\n\n    &.#{$prefix}--tag--lg:not(.#{$prefix}--tag--filter) {\n      padding-inline: $spacing-04;\n    }\n\n    &.#{$prefix}--tag--lg:has(.#{$prefix}--tag__custom-icon) {\n      padding-inline-start: $spacing-03;\n    }\n\n    &:not(.#{$prefix}--tag--selectable) {\n      border: 0;\n    }\n\n    &:not(:first-child) {\n      margin-inline-start: 0;\n    }\n  }\n\n  .#{$prefix}--tag--operational > span,\n  .#{$prefix}--tag--selectable > span,\n  .#{$prefix}--tag__label {\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .#{$prefix}--tag--interactive:focus {\n    outline: 2px solid $focus;\n    outline-offset: 1px;\n  }\n\n  // tags used for filtering\n  .#{$prefix}--tag--filter {\n    padding-block: 0;\n    padding-inline-end: 0;\n\n    &:hover {\n      outline: none;\n    }\n  }\n\n  .#{$prefix}--tag--selectable {\n    border: 1px solid $border-inverse;\n    background-color: $layer;\n    color: $text-primary;\n    cursor: pointer;\n\n    &:hover {\n      background-color: $layer-hover;\n      outline: none;\n    }\n\n    &:focus {\n      outline: 2px solid $focus;\n      outline-offset: 1px;\n    }\n  }\n\n  .#{$prefix}--tag--selectable-selected {\n    background-color: $layer-selected-inverse;\n    color: $text-inverse;\n\n    &:hover {\n      background-color: $layer-selected-inverse;\n    }\n  }\n\n  .#{$prefix}--tag--operational {\n    border: 1px solid $tag-border-gray;\n    background-color: $tag-background-gray;\n    color: $tag-color-gray;\n    cursor: pointer;\n\n    &:hover {\n      background-color: $tag-hover-gray;\n      outline: none;\n    }\n\n    &:focus {\n      outline: 2px solid $focus;\n      outline-offset: 1px;\n    }\n  }\n\n  .#{$prefix}--tag--red {\n    @include tag-theme(\n      $tag-background-red,\n      $tag-color-red,\n      $tag-hover-red,\n      $tag-border-red\n    );\n  }\n\n  .#{$prefix}--tag--magenta {\n    @include tag-theme(\n      $tag-background-magenta,\n      $tag-color-magenta,\n      $tag-hover-magenta,\n      $tag-border-magenta\n    );\n  }\n\n  .#{$prefix}--tag--purple {\n    @include tag-theme(\n      $tag-background-purple,\n      $tag-color-purple,\n      $tag-hover-purple,\n      $tag-border-purple\n    );\n  }\n\n  .#{$prefix}--tag--blue {\n    @include tag-theme(\n      $tag-background-blue,\n      $tag-color-blue,\n      $tag-hover-blue,\n      $tag-border-blue\n    );\n  }\n\n  .#{$prefix}--tag--cyan {\n    @include tag-theme(\n      $tag-background-cyan,\n      $tag-color-cyan,\n      $tag-hover-cyan,\n      $tag-border-cyan\n    );\n  }\n\n  .#{$prefix}--tag--teal {\n    @include tag-theme(\n      $tag-background-teal,\n      $tag-color-teal,\n      $tag-hover-teal,\n      $tag-border-teal\n    );\n  }\n\n  .#{$prefix}--tag--green {\n    @include tag-theme(\n      $tag-background-green,\n      $tag-color-green,\n      $tag-hover-green,\n      $tag-border-green\n    );\n  }\n\n  .#{$prefix}--tag--gray {\n    @include tag-theme(\n      $tag-background-gray,\n      $tag-color-gray,\n      $tag-hover-gray,\n      $tag-border-gray\n    );\n  }\n\n  .#{$prefix}--tag--cool-gray {\n    @include tag-theme(\n      $tag-background-cool-gray,\n      $tag-color-cool-gray,\n      $tag-hover-cool-gray,\n      $tag-border-cool-gray\n    );\n  }\n\n  .#{$prefix}--tag--warm-gray {\n    @include tag-theme(\n      $tag-background-warm-gray,\n      $tag-color-warm-gray,\n      $tag-hover-warm-gray,\n      $tag-border-warm-gray\n    );\n  }\n\n  .#{$prefix}--tag--high-contrast:not(.#{$prefix}--tag--operational) {\n    @include tag-theme(\n      $background-inverse,\n      $text-inverse,\n      $background-inverse-hover\n    );\n  }\n\n  .#{$prefix}--multi-select--readonly\n    .#{$prefix}--tag--high-contrast:not(.#{$prefix}--tag--operational)\n    .#{$prefix}--tag__close-icon {\n    &:hover {\n      background-color: transparent;\n    }\n  }\n\n  .#{$prefix}--tag--outline:not(.#{$prefix}--tag--operational):not(span):not(\n      [disabled]\n    ) {\n    @include tag-theme($background, $text-primary, $layer-hover);\n\n    outline: 1px solid $background-inverse;\n    outline-offset: -1px;\n  }\n\n  .#{$prefix}--tag--disabled:not(.#{$prefix}--tag--operational),\n  .#{$prefix}--tag--filter.#{$prefix}--tag--disabled,\n  .#{$prefix}--tag--interactive.#{$prefix}--tag--disabled {\n    @include tag-theme($layer, $text-disabled);\n\n    box-shadow: none;\n    outline: none;\n\n    &:hover {\n      cursor: not-allowed;\n    }\n\n    .#{$prefix}--tag__label {\n      background-color: $layer;\n      color: $text-disabled;\n    }\n  }\n\n  .#{$prefix}--tag--selectable.#{$prefix}--tag--disabled,\n  .#{$prefix}--tag--operational.#{$prefix}--tag--disabled {\n    border: 1px solid $border-disabled;\n    background-color: $layer;\n    color: $text-disabled;\n\n    &:hover {\n      background-color: $layer;\n      cursor: not-allowed;\n    }\n  }\n\n  .#{$prefix}--tag--interactive {\n    transition: background-color $duration-fast-01 motion(entrance, productive);\n  }\n\n  .#{$prefix}--tag__close-icon {\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    justify-content: center;\n    padding: 0;\n    border: 0;\n    border-radius: 50%;\n    margin: 0 0 0 convert.to-rem(2px);\n    background-color: transparent;\n    block-size: layout.size('height');\n    color: currentColor;\n    cursor: pointer;\n    inline-size: layout.size('height');\n    transition:\n      background-color $duration-fast-01 motion(standard, productive),\n      box-shadow $duration-fast-01 motion(standard, productive);\n\n    svg {\n      fill: currentColor;\n    }\n  }\n\n  .#{$prefix}--tag__custom-icon {\n    flex-shrink: 0;\n    padding: 0;\n    border: 0;\n    background-color: transparent;\n    block-size: convert.to-rem(16px);\n    color: currentColor;\n    inline-size: convert.to-rem(16px);\n    margin-inline-end: $spacing-02;\n    outline: none;\n\n    svg {\n      fill: currentColor;\n    }\n  }\n\n  .#{$prefix}--tag--disabled .#{$prefix}--tag__close-icon {\n    cursor: not-allowed;\n  }\n\n  .#{$prefix}--tag__close-icon:focus {\n    z-index: 99999;\n    border-radius: 50%;\n    box-shadow: inset 0 0 0 1px $focus;\n    outline: none;\n  }\n\n  .#{$prefix}--tag--high-contrast .#{$prefix}--tag__close-icon:focus {\n    box-shadow: inset 0 0 0 1px $focus-inverse;\n  }\n\n  .#{$prefix}--tag--filter.#{$prefix}--tag--disabled\n    .#{$prefix}--tag__close-icon:hover {\n    background-color: transparent;\n  }\n\n  .#{$prefix}--tag--filter.#{$prefix}--tag--disabled svg {\n    fill: $icon-disabled;\n  }\n\n  .#{$prefix}--tag--sm.#{$prefix}--tag--filter {\n    padding-inline-end: 0;\n  }\n\n  .#{$prefix}--tag--sm .#{$prefix}--tag__close-icon {\n    margin-inline-start: convert.to-rem(5px);\n  }\n\n  // Skeleton state\n  .#{$prefix}--tag.#{$prefix}--skeleton {\n    @include skeleton;\n\n    @include tag-theme(\n      $bg-color: $skeleton-background,\n      $text-color: $text-primary\n    );\n\n    overflow: hidden;\n    inline-size: convert.to-rem(60px);\n\n    // Safari specific bug (#7672)\n    @media not all and (min-resolution >= 0.001dpcm) {\n      @supports (-webkit-appearance: none) and (stroke-color: transparent) {\n        transform: translateZ(0);\n      }\n    }\n  }\n\n  // AILabel styles\n  .#{$prefix}--tag .#{$prefix}--ai-label .#{$prefix}--ai-label__button--inline,\n  .#{$prefix}--tag .#{$prefix}--slug .#{$prefix}--slug__button--inline {\n    color: currentColor;\n    margin-inline-start: convert.to-rem(1px);\n  }\n\n  .#{$prefix}--tag\n    .#{$prefix}--ai-label\n    .#{$prefix}--ai-label__button--inline\n    .#{$prefix}--ai-label__text::before,\n  .#{$prefix}--tag\n    .#{$prefix}--slug\n    .#{$prefix}--slug__button--inline\n    .#{$prefix}--slug__text::before {\n    background-color: currentColor;\n  }\n\n  .#{$prefix}--tag\n    .#{$prefix}--ai-label\n    .#{$prefix}--ai-label__button--inline:hover,\n  .#{$prefix}--tag .#{$prefix}--slug .#{$prefix}--slug__button--inline:hover {\n    border-color: currentColor;\n  }\n\n  .#{$prefix}--tag--filter .#{$prefix}--tag__decorator > *,\n  .#{$prefix}--tag--filter .#{$prefix}--ai-label,\n  .#{$prefix}--tag--filter .#{$prefix}--slug {\n    min-inline-size: convert.to-rem(32.14px);\n  }\n\n  // Decorator styles\n  .#{$prefix}--tag\n    .#{$prefix}--tag__decorator:not(:has(.#{$prefix}--ai-label)) {\n    block-size: 1rem;\n    text-align: center;\n  }\n\n  // Windows HCM fix\n\n  .#{$prefix}--tag {\n    @include high-contrast-mode('outline');\n  }\n\n  .#{$prefix}--tag__close-icon:focus {\n    @include high-contrast-mode('focus');\n  }\n\n  .#{$prefix}--tag-label-tooltip {\n    max-inline-size: -webkit-fill-available;\n  }\n\n  .#{$prefix}--tag__custom-icon + .#{$prefix}--tag-label-tooltip {\n    max-inline-size: convert.to-rem(176px);\n  }\n\n  .#{$prefix}--tag--filter\n    .#{$prefix}--tag__custom-icon\n    + .#{$prefix}--tag-label-tooltip {\n    max-inline-size: convert.to-rem(158px);\n  }\n\n  .#{$prefix}--interactive--tag-children {\n    display: inline-flex;\n    max-inline-size: convert.to-rem(200px);\n    place-items: center;\n  }\n\n  .#{$prefix}--tag--filter\n    .#{$prefix}--tag__custom-icon\n    + span\n    > .#{$prefix}--interactive--tag-children {\n    max-inline-size: convert.to-rem(184px);\n  }\n\n  .#{$prefix}--tag .#{$prefix}--definition-term {\n    -webkit-border-after: none;\n    border-block-end: none;\n    cursor: default;\n    max-inline-size: convert.to-rem(192px);\n  }\n\n  .#{$prefix}--tag\n    .#{$prefix}--tag__custom-icon\n    + span\n    > .#{$prefix}--definition-term {\n    max-inline-size: convert.to-rem(176px);\n  }\n\n  .#{$prefix}--tag > .#{$prefix}--popover-container {\n    display: flex;\n  }\n\n  .#{$prefix}--toggletip-button:has(\n      .#{$prefix}--tag--operational.#{$prefix}--tag--disabled\n    ) {\n    pointer-events: none;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n// stylelint-disable number-max-precision\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@carbon/grid/scss/config' as gridconfig;\n@use '@carbon/grid/scss/breakpoint' as grid;\n@use 'prefix' as *;\n@use 'font-family';\n@use 'scale';\n\n/// @type Map\n/// @access public\n/// @deprecated\n/// @group @carbon/type\n$caption-01: (\n  font-size: scale.type-scale(1),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @deprecated\n/// @group @carbon/type\n$caption-02: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: scale.type-scale(1),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-02: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$legal-01: (\n  font-size: scale.type-scale(1),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$legal-02: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @deprecated\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: scale.type-scale(1),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @deprecated\n/// @group @carbon/type\n$helper-text-02: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-compact-01: $body-short-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.42857,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-01: $body-long-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: scale.type-scale(3),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-compact-02: $body-short-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: scale.type-scale(3),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-02: $body-long-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: font-family.font-family('mono'),\n  font-size: scale.type-scale(1),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: font-family.font-family('mono'),\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.42857,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.42857,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-compact-01: $productive-heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: scale.type-scale(3),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: (\n  font-size: scale.type-scale(3),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-compact-02: $productive-heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: scale.type-scale(5),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-03: $productive-heading-03 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: scale.type-scale(7),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-04: $productive-heading-04 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: scale.type-scale(8),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-05: $productive-heading-05 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-06: $productive-heading-06 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: scale.type-scale(12),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-07: $productive-heading-07 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: scale.type-scale(5),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: scale.type-scale(5),\n      line-height: 1.4,\n    ),\n    max: (\n      font-size: scale.type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-heading-03: $expressive-heading-03 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: scale.type-scale(7),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: scale.type-scale(8),\n      line-height: 1.25,\n      font-weight: font-family.font-weight('regular'),\n    ),\n    max: (\n      font-size: scale.type-scale(8),\n      font-weight: font-family.font-weight('regular'),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-heading-04: $expressive-heading-04 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: scale.type-scale(8),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(9),\n      font-weight: font-family.font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: scale.type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: scale.type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: scale.type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-heading-05: $expressive-heading-05 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: scale.type-scale(8),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: scale.type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: scale.type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: scale.type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-heading-06: $expressive-heading-06 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: scale.type-scale(6),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: scale.type-scale(7),\n      line-height: 1.28572,\n    ),\n    max: (\n      font-size: scale.type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-paragraph-01: $expressive-paragraph-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-family: font-family.font-family('serif'),\n  font-size: scale.type-scale(5),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(5),\n    ),\n    lg: (\n      font-size: scale.type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: scale.type-scale(7),\n      line-height: 1.28572,\n    ),\n    max: (\n      font-size: scale.type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-quotation-01: $quotation-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-family: font-family.font-family('serif'),\n  font-size: scale.type-scale(8),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: scale.type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: scale.type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: scale.type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-quotation-02: $quotation-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(10),\n    ),\n    lg: (\n      font-size: scale.type-scale(12),\n    ),\n    xlg: (\n      font-size: scale.type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: scale.type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-display-01: $display-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(10),\n    ),\n    lg: (\n      font-size: scale.type-scale(12),\n    ),\n    xlg: (\n      font-size: scale.type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: scale.type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-display-02: $display-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(12),\n      line-height: 1.18,\n    ),\n    lg: (\n      font-size: scale.type-scale(13),\n      line-height: 1.16,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: scale.type-scale(15),\n      line-height: 1.13,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: scale.type-scale(16),\n      line-height: 1.11,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-display-03: $display-03 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: scale.type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: scale.type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: scale.type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-display-04: $display-04 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  caption-02: $caption-02,\n  label-01: $label-01,\n  label-02: $label-02,\n  helper-text-01: $helper-text-01,\n  helper-text-02: $helper-text-02,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n  // V11 Tokens\n  legal-01: $legal-01,\n  legal-02: $legal-02,\n  body-compact-01: $body-compact-01,\n  body-compact-02: $body-compact-02,\n  heading-compact-01: $heading-compact-01,\n  heading-compact-02: $heading-compact-02,\n  body-01: $body-01,\n  body-02: $body-02,\n  heading-03: $heading-03,\n  heading-04: $heading-04,\n  heading-05: $heading-05,\n  heading-06: $heading-06,\n  heading-07: $heading-07,\n  fluid-heading-03: $fluid-heading-03,\n  fluid-heading-04: $fluid-heading-04,\n  fluid-heading-05: $fluid-heading-05,\n  fluid-heading-06: $fluid-heading-06,\n  fluid-paragraph-01: $fluid-paragraph-01,\n  fluid-quotation-01: $fluid-quotation-01,\n  fluid-quotation-02: $fluid-quotation-02,\n  fluid-display-01: $fluid-display-01,\n  fluid-display-02: $fluid-display-02,\n  fluid-display-03: $fluid-display-03,\n  fluid-display-04: $fluid-display-04,\n) !default;\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return math.div($value, $value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: gridconfig.$grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map.remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map.get($type-styles, breakpoints) {\n    @include grid.breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: gridconfig.$grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map.get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map.get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map.remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map.get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map.get($type-styles, font-size);\n  $min-font-size: map.get($type-styles, font-size);\n  @if map.has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map.get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map.get($breakpoint, width);\n  $min-vw: map.get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: grid.breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map.has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: grid.breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map.get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map.get(\n      map.get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map.get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: gridconfig.$grid-breakpoints\n) {\n  @if not map.has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map.get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map.has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @include custom-properties($name, $token);\n  }\n}\n","//\n// Copyright IBM Corp. 2016, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n@use '../../config' as *;\n\n/// @access private\n/// @group tag\n@mixin tag-theme(\n  $bg-color,\n  $text-color,\n  $filter-hover-color: $bg-color,\n  $border-color: $bg-color\n) {\n  background-color: $bg-color;\n  color: $text-color;\n\n  &.#{$prefix}--tag--operational {\n    border: 1px solid $border-color;\n\n    &:hover {\n      background-color: $filter-hover-color;\n    }\n  }\n\n  .#{$prefix}--tag__close-icon {\n    &:hover {\n      background-color: $filter-hover-color;\n    }\n  }\n\n  .#{$prefix}--definition-term {\n    .#{$prefix}--tag__label {\n      color: $text-color;\n    }\n  }\n}\n","//\n// Copyright IBM Corp. 2020\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use 'sass:color';\n@use 'sass:map';\n@use '../../config';\n@use '../../colors';\n@use '../../themes';\n@use '../../theme' as *;\n@use '../../utilities/component-tokens';\n@use '@carbon/themes/scss/component-tokens' as tag;\n\n// red\n$tag-background-red: (\n  fallback: map.get(tag.$tag-background-red, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-background-red, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-background-red, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-background-red, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-background-red, g-100),\n    ),\n  ),\n) !default;\n\n$tag-color-red: (\n  fallback: map.get(tag.$tag-color-red, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-color-red, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-color-red, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-color-red, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-color-red, g-100),\n    ),\n  ),\n) !default;\n\n$tag-hover-red: (\n  fallback: map.get(tag.$tag-hover-red, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-hover-red, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-hover-red, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-hover-red, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-hover-red, g-100),\n    ),\n  ),\n) !default;\n\n// magenta\n$tag-background-magenta: (\n  fallback: map.get(tag.$tag-background-magenta, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-background-magenta, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-background-magenta, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-background-magenta, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-background-magenta, g-100),\n    ),\n  ),\n) !default;\n\n$tag-color-magenta: (\n  fallback: map.get(tag.$tag-color-magenta, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-color-magenta, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-color-magenta, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-color-magenta, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-color-magenta, g-100),\n    ),\n  ),\n) !default;\n\n$tag-hover-magenta: (\n  fallback: map.get(tag.$tag-hover-magenta, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-hover-magenta, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-hover-magenta, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-hover-magenta, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-hover-magenta, g-100),\n    ),\n  ),\n) !default;\n\n// purple\n$tag-background-purple: (\n  fallback: map.get(tag.$tag-background-purple, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-background-purple, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-background-purple, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-background-purple, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-background-purple, g-100),\n    ),\n  ),\n) !default;\n\n$tag-color-purple: (\n  fallback: map.get(tag.$tag-color-purple, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-color-purple, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-color-purple, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-color-purple, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-color-purple, g-100),\n    ),\n  ),\n) !default;\n\n$tag-hover-purple: (\n  fallback: map.get(tag.$tag-hover-purple, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-hover-purple, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-hover-purple, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-hover-purple, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-hover-purple, g-100),\n    ),\n  ),\n) !default;\n\n// blue\n$tag-background-blue: (\n  fallback: map.get(tag.$tag-background-blue, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-background-blue, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-background-blue, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-background-blue, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-background-blue, g-100),\n    ),\n  ),\n) !default;\n\n$tag-color-blue: (\n  fallback: map.get(tag.$tag-color-blue, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-color-blue, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-color-blue, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-color-blue, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-color-blue, g-100),\n    ),\n  ),\n) !default;\n\n$tag-hover-blue: (\n  fallback: map.get(tag.$tag-hover-blue, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-hover-blue, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-hover-blue, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-hover-blue, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-hover-blue, g-100),\n    ),\n  ),\n) !default;\n\n// cyan\n$tag-background-cyan: (\n  fallback: map.get(tag.$tag-background-cyan, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-background-cyan, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-background-cyan, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-background-cyan, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-background-cyan, g-100),\n    ),\n  ),\n) !default;\n\n$tag-color-cyan: (\n  fallback: map.get(tag.$tag-color-cyan, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-color-cyan, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-color-cyan, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-color-cyan, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-color-cyan, g-100),\n    ),\n  ),\n) !default;\n\n$tag-hover-cyan: (\n  fallback: map.get(tag.$tag-hover-cyan, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-hover-cyan, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-hover-cyan, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-hover-cyan, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-hover-cyan, g-100),\n    ),\n  ),\n) !default;\n\n// teal\n$tag-background-teal: (\n  fallback: map.get(tag.$tag-background-teal, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-background-teal, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-background-teal, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-background-teal, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-background-teal, g-100),\n    ),\n  ),\n) !default;\n\n$tag-color-teal: (\n  fallback: map.get(tag.$tag-color-teal, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-color-teal, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-color-teal, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-color-teal, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-color-teal, g-100),\n    ),\n  ),\n) !default;\n\n$tag-hover-teal: (\n  fallback: map.get(tag.$tag-hover-teal, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-hover-teal, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-hover-teal, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-hover-teal, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-hover-teal, g-100),\n    ),\n  ),\n) !default;\n\n// green\n$tag-background-green: (\n  fallback: map.get(tag.$tag-background-green, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-background-green, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-background-green, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-background-green, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-background-green, g-100),\n    ),\n  ),\n) !default;\n\n$tag-color-green: (\n  fallback: map.get(tag.$tag-color-green, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-color-green, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-color-green, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-color-green, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-color-green, g-100),\n    ),\n  ),\n) !default;\n\n$tag-hover-green: (\n  fallback: map.get(tag.$tag-hover-green, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-hover-green, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-hover-green, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-hover-green, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-hover-green, g-100),\n    ),\n  ),\n) !default;\n\n// gray\n$tag-background-gray: (\n  fallback: map.get(tag.$tag-background-gray, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-background-gray, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-background-gray, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-background-gray, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-background-gray, g-100),\n    ),\n  ),\n) !default;\n\n$tag-color-gray: (\n  fallback: map.get(tag.$tag-color-gray, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-color-gray, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-color-gray, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-color-gray, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-color-gray, g-100),\n    ),\n  ),\n) !default;\n\n$tag-hover-gray: (\n  fallback: map.get(tag.$tag-hover-gray, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-hover-gray, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-hover-gray, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-hover-gray, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-hover-gray, g-100),\n    ),\n  ),\n) !default;\n\n// cool-gray\n$tag-background-cool-gray: (\n  fallback: map.get(tag.$tag-background-cool-gray, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-background-cool-gray, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-background-cool-gray, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-background-cool-gray, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-background-cool-gray, g-100),\n    ),\n  ),\n) !default;\n\n$tag-color-cool-gray: (\n  fallback: map.get(tag.$tag-color-cool-gray, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-color-cool-gray, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-color-cool-gray, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-color-cool-gray, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-color-cool-gray, g-100),\n    ),\n  ),\n) !default;\n\n$tag-hover-cool-gray: (\n  fallback: map.get(tag.$tag-hover-cool-gray, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-hover-cool-gray, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-hover-cool-gray, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-hover-cool-gray, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-hover-cool-gray, g-100),\n    ),\n  ),\n) !default;\n\n$tag-border-gray: (\n  fallback: map.get(tag.$tag-border-gray, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-border-gray, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-border-gray, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-border-gray, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-border-gray, g-100),\n    ),\n  ),\n) !default;\n\n$tag-border-red: (\n  fallback: map.get(tag.$tag-border-red, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-border-red, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-border-red, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-border-red, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-border-red, g-100),\n    ),\n  ),\n) !default;\n\n$tag-border-blue: (\n  fallback: map.get(tag.$tag-border-blue, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-border-blue, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-border-blue, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-border-blue, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-border-blue, g-100),\n    ),\n  ),\n) !default;\n\n$tag-border-cyan: (\n  fallback: map.get(tag.$tag-border-cyan, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-border-cyan, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-border-cyan, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-border-cyan, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-border-cyan, g-100),\n    ),\n  ),\n) !default;\n\n$tag-border-teal: (\n  fallback: map.get(tag.$tag-border-teal, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-border-teal, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-border-teal, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-border-teal, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-border-teal, g-100),\n    ),\n  ),\n) !default;\n\n$tag-border-green: (\n  fallback: map.get(tag.$tag-border-green, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-border-green, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-border-green, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-border-green, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-border-green, g-100),\n    ),\n  ),\n) !default;\n\n$tag-border-magenta: (\n  fallback: map.get(tag.$tag-border-magenta, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-border-magenta, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-border-magenta, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-border-magenta, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-border-magenta, g-100),\n    ),\n  ),\n) !default;\n\n$tag-border-purple: (\n  fallback: map.get(tag.$tag-border-purple, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-border-purple, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-border-purple, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-border-purple, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-border-purple, g-100),\n    ),\n  ),\n) !default;\n\n$tag-border-cool-gray: (\n  fallback: map.get(tag.$tag-border-cool-gray, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-border-cool-gray, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-border-cool-gray, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-border-cool-gray, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-border-cool-gray, g-100),\n    ),\n  ),\n) !default;\n\n$tag-border-warm-gray: (\n  fallback: map.get(tag.$tag-border-warm-gray, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-border-warm-gray, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-border-warm-gray, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-border-warm-gray, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-border-warm-gray, g-100),\n    ),\n  ),\n) !default;\n\n// warm-gray\n$tag-background-warm-gray: (\n  fallback: map.get(tag.$tag-background-warm-gray, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-background-warm-gray, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-background-warm-gray, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-background-warm-gray, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-background-warm-gray, g-100),\n    ),\n  ),\n) !default;\n\n$tag-color-warm-gray: (\n  fallback: map.get(tag.$tag-color-warm-gray, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-color-warm-gray, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-color-warm-gray, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-color-warm-gray, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-color-warm-gray, g-100),\n    ),\n  ),\n) !default;\n\n$tag-hover-warm-gray: (\n  fallback: map.get(tag.$tag-hover-warm-gray, white-theme),\n  values: (\n    (\n      theme: themes.$white,\n      value: map.get(tag.$tag-hover-warm-gray, white-theme),\n    ),\n    (\n      theme: themes.$g10,\n      value: map.get(tag.$tag-hover-warm-gray, g-10),\n    ),\n    (\n      theme: themes.$g90,\n      value: map.get(tag.$tag-hover-warm-gray, g-90),\n    ),\n    (\n      theme: themes.$g100,\n      value: map.get(tag.$tag-hover-warm-gray, g-100),\n    ),\n  ),\n) !default;\n\n$tag-tokens: (\n  tag-background-red: $tag-background-red,\n  tag-color-red: $tag-color-red,\n  tag-hover-red: $tag-hover-red,\n  tag-background-magenta: $tag-background-magenta,\n  tag-color-magenta: $tag-color-magenta,\n  tag-hover-magenta: $tag-hover-magenta,\n  tag-background-purple: $tag-background-purple,\n  tag-color-purple: $tag-color-purple,\n  tag-hover-purple: $tag-hover-purple,\n  tag-background-blue: $tag-background-blue,\n  tag-color-blue: $tag-color-blue,\n  tag-hover-blue: $tag-hover-blue,\n  tag-background-cyan: $tag-background-cyan,\n  tag-color-cyan: $tag-color-cyan,\n  tag-hover-cyan: $tag-hover-cyan,\n  tag-background-teal: $tag-background-teal,\n  tag-color-teal: $tag-color-teal,\n  tag-hover-teal: $tag-hover-teal,\n  tag-background-green: $tag-background-green,\n  tag-color-green: $tag-color-green,\n  tag-hover-green: $tag-hover-green,\n  tag-background-gray: $tag-background-gray,\n  tag-color-gray: $tag-color-gray,\n  tag-hover-gray: $tag-hover-gray,\n  tag-border-red: $tag-border-red,\n  tag-border-blue: $tag-border-blue,\n  tag-border-cyan: $tag-border-cyan,\n  tag-border-teal: $tag-border-teal,\n  tag-border-green: $tag-border-green,\n  tag-border-magenta: $tag-border-magenta,\n  tag-border-purple: $tag-border-purple,\n  tag-border-gray: $tag-border-gray,\n  tag-border-cool-gray: $tag-border-cool-gray,\n  tag-border-warm-gray: $tag-border-warm-gray,\n  tag-background-cool-gray: $tag-background-cool-gray,\n  tag-color-cool-gray: $tag-color-cool-gray,\n  tag-hover-cool-gray: $tag-hover-cool-gray,\n  tag-background-warm-gray: $tag-background-warm-gray,\n  tag-color-warm-gray: $tag-color-warm-gray,\n  tag-hover-warm-gray: $tag-hover-warm-gray,\n);\n\n$tag-background-red: component-tokens.get-var(\n  $tag-background-red,\n  'tag-background-red'\n);\n\n$tag-color-red: component-tokens.get-var($tag-color-red, 'tag-color-red');\n\n$tag-hover-red: component-tokens.get-var($tag-hover-red, 'tag-hover-red');\n\n$tag-background-magenta: component-tokens.get-var(\n  $tag-background-magenta,\n  'tag-background-magenta'\n);\n\n$tag-color-magenta: component-tokens.get-var(\n  $tag-color-magenta,\n  'tag-color-magenta'\n);\n\n$tag-hover-magenta: component-tokens.get-var(\n  $tag-hover-magenta,\n  'tag-hover-magenta'\n);\n\n$tag-background-purple: component-tokens.get-var(\n  $tag-background-purple,\n  'tag-background-purple'\n);\n\n$tag-color-purple: component-tokens.get-var(\n  $tag-color-purple,\n  'tag-color-purple'\n);\n\n$tag-hover-purple: component-tokens.get-var(\n  $tag-hover-purple,\n  'tag-hover-purple'\n);\n\n$tag-background-blue: component-tokens.get-var(\n  $tag-background-blue,\n  'tag-background-blue'\n);\n\n$tag-color-blue: component-tokens.get-var($tag-color-blue, 'tag-color-blue');\n\n$tag-hover-blue: component-tokens.get-var($tag-hover-blue, 'tag-hover-blue');\n\n$tag-background-cyan: component-tokens.get-var(\n  $tag-background-cyan,\n  'tag-background-cyan'\n);\n\n$tag-color-cyan: component-tokens.get-var($tag-color-cyan, 'tag-color-cyan');\n\n$tag-hover-cyan: component-tokens.get-var($tag-hover-cyan, 'tag-hover-cyan');\n\n$tag-background-teal: component-tokens.get-var(\n  $tag-background-teal,\n  'tag-background-teal'\n);\n\n$tag-color-teal: component-tokens.get-var($tag-color-teal, 'tag-color-teal');\n\n$tag-hover-teal: component-tokens.get-var($tag-hover-teal, 'tag-hover-teal');\n\n$tag-background-green: component-tokens.get-var(\n  $tag-background-green,\n  'tag-background-green'\n);\n\n$tag-color-green: component-tokens.get-var($tag-color-green, 'tag-color-green');\n\n$tag-hover-green: component-tokens.get-var($tag-hover-green, 'tag-hover-green');\n\n$tag-background-gray: component-tokens.get-var(\n  $tag-background-gray,\n  'tag-background-gray'\n);\n\n$tag-color-gray: component-tokens.get-var($tag-color-gray, 'tag-color-gray');\n\n$tag-hover-gray: component-tokens.get-var($tag-hover-gray, 'tag-hover-gray');\n\n$tag-border-red: component-tokens.get-var($tag-border-red, 'tag-border-red');\n\n$tag-border-blue: component-tokens.get-var($tag-border-blue, 'tag-border-blue');\n\n$tag-border-cyan: component-tokens.get-var($tag-border-cyan, 'tag-border-cyan');\n\n$tag-border-teal: component-tokens.get-var($tag-border-teal, 'tag-border-teal');\n\n$tag-border-green: component-tokens.get-var(\n  $tag-border-green,\n  'tag-border-green'\n);\n\n$tag-border-magenta: component-tokens.get-var(\n  $tag-border-magenta,\n  'tag-border-magenta'\n);\n\n$tag-border-purple: component-tokens.get-var(\n  $tag-border-purple,\n  'tag-border-purple'\n);\n\n$tag-border-gray: component-tokens.get-var($tag-border-gray, 'tag-border-gray');\n\n$tag-border-cool-gray: component-tokens.get-var(\n  $tag-border-cool-gray,\n  'tag-border-cool-gray'\n);\n\n$tag-border-warm-gray: component-tokens.get-var(\n  $tag-border-warm-gray,\n  'tag-border-warm-gray'\n);\n\n$tag-background-cool-gray: component-tokens.get-var(\n  $tag-background-cool-gray,\n  'tag-background-cool-gray'\n);\n\n$tag-color-cool-gray: component-tokens.get-var(\n  $tag-color-cool-gray,\n  'tag-color-cool-gray'\n);\n\n$tag-hover-cool-gray: component-tokens.get-var(\n  $tag-hover-cool-gray,\n  'tag-hover-cool-gray'\n);\n\n$tag-background-warm-gray: component-tokens.get-var(\n  $tag-background-warm-gray,\n  'tag-background-warm-gray'\n);\n\n$tag-color-warm-gray: component-tokens.get-var(\n  $tag-color-warm-gray,\n  'tag-color-warm-gray'\n);\n\n$tag-hover-warm-gray: component-tokens.get-var(\n  $tag-hover-warm-gray,\n  'tag-hover-warm-gray'\n);\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-12: 6rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-13: 10rem !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/layout\n$spacing: (\n  spacing-01: $spacing-01,\n  spacing-02: $spacing-02,\n  spacing-03: $spacing-03,\n  spacing-04: $spacing-04,\n  spacing-05: $spacing-05,\n  spacing-06: $spacing-06,\n  spacing-07: $spacing-07,\n  spacing-08: $spacing-08,\n  spacing-09: $spacing-09,\n  spacing-10: $spacing-10,\n  spacing-11: $spacing-11,\n  spacing-12: $spacing-12,\n  spacing-13: $spacing-13,\n);\n","//\n// Copyright IBM Corp. 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use 'sass:map';\n\n@use '../config';\n@use '../layout' as *;\n@use './custom-property';\n\n/// Enables the use of contextual layout tokens within a component. This mixin should be\n/// included on the outermost selector of the component.\n/// @param {String} $group - The layout group to use for this component\n/// @param {String} $default - The default step if the component is not within a layout\n/// @param {String} $min - The minimum step supported by this component (optional)\n/// @param {String} $max - The maximum step supported by this component (optional)\n/// @example @include use('size', $default: 'md', $min: 'sm', $max: 'lg')\n/// @group utilities\n/// @access public\n@mixin use($group, $default, $min: null, $max: null) {\n  $properties: map.get($layout-tokens, $group);\n\n  @each $property, $steps in $properties {\n    $minValue: custom-property.get-var('layout-#{$group}-#{$property}-min');\n    @if $min {\n      $minValue: max(\n        $minValue,\n        custom-property.get-var('layout-#{$group}-#{$property}-#{$min}')\n      );\n    }\n\n    $maxValue: custom-property.get-var('layout-#{$group}-#{$property}-max');\n    @if $max {\n      $maxValue: min(\n        $maxValue,\n        custom-property.get-var('layout-#{$group}-#{$property}-#{$max}')\n      );\n    }\n\n    $value: clamp(\n      $minValue,\n      custom-property.get-var(\n        'layout-#{$group}-#{$property}',\n        custom-property.get-var('layout-#{$group}-#{$property}-#{$default}')\n      ),\n      $maxValue\n    );\n\n    @include custom-property.declaration(\n      'layout-#{$group}-#{$property}-local',\n      $value\n    );\n  }\n}\n\n/// Allows to redefine any token values of the layout module in case a component is using\n/// non-standard values and should still participate in the layout context\n/// @param {Map} $overrides - The map of overrides. Must follow ( group: ( property: ( step: value ) ) )\n/// @example @include redefine-tokens(( size: ( height: ( sm: 1.125rem, md: 1.5rem ) ) ))\n/// @group utilities\n/// @access public\n@mixin redefine-tokens($overrides) {\n  @each $group, $properties in $overrides {\n    @each $property, $steps in $properties {\n      @each $step, $value in $steps {\n        @include custom-property.declaration(\n          'layout-#{$group}-#{$property}-#{$step}',\n          $value\n        );\n\n        &.#{config.$prefix}--layout--#{$group}-#{$step},\n        .#{config.$prefix}--layout--#{$group}-#{$step} :where(&) {\n          $token: custom-property.get-var(\n            'layout-#{$group}-#{$property}-#{$step}'\n          );\n          @include custom-property.declaration(\n            'layout-#{$group}-#{$property}',\n            $token\n          );\n        }\n      }\n    }\n  }\n}\n\n/// Internal base function for retrieving a property from a layout group.\n/// @param {String} $group - The group name as defined in the $layout-tokens\n/// @param {String} $property - The property name\n/// @example @include -group('size', $property)\n/// @group utilities\n/// @access private\n@function -group($group, $property) {\n  @return custom-property.get-var('layout-#{$group}-#{$property}-local');\n}\n\n/// Retrieves the current value for a property token in the layout size.\n/// @param {String} $property - The property name\n/// @example height: size('height');\n/// @group utilities\n/// @access public\n@function size($property) {\n  @return -group('size', $property);\n}\n\n/// Retrieves the current value for a property token in the layout density.\n/// @param {String} $property - The property name\n/// @example padding-inline: density('padding-inline');\n/// @group utilities\n/// @access public\n@function density($property) {\n  @return -group('density', $property);\n}\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use '../config' as *;\n@use '@carbon/themes/scss/config' with (\n  $prefix: $prefix\n);\n@use '../compat/themes' as compat;\n@use '../themes';\n\n@forward '@carbon/themes/scss/theme' with (\n  $fallback: themes.$white !default,\n  $theme: compat.$white !default\n);\n@forward '@carbon/themes/scss/tokens';\n\n@use '@carbon/themes/scss/tokens';\n@use '@carbon/themes/scss/theme';\n@use '../utilities/custom-property';\n\n// Layer sets\n$layer: custom-property.get-var('layer');\n$layer-active: custom-property.get-var('layer-active');\n$layer-background: custom-property.get-var('layer-background');\n$layer-hover: custom-property.get-var('layer-hover');\n$layer-selected: custom-property.get-var('layer-selected');\n$layer-selected-hover: custom-property.get-var('layer-selected-hover');\n$layer-accent: custom-property.get-var('layer-accent');\n$layer-accent-hover: custom-property.get-var('layer-accent-hover');\n$layer-accent-active: custom-property.get-var('layer-accent-active');\n\n$field: custom-property.get-var('field');\n$field-hover: custom-property.get-var('field-hover');\n\n$border-subtle: custom-property.get-var('border-subtle');\n$border-subtle-selected: custom-property.get-var('border-subtle-selected');\n$border-strong: custom-property.get-var('border-strong');\n$border-tile: custom-property.get-var('border-tile');\n","//\n// Copyright IBM Corp. 2021\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use 'keyframes';\n@use '../theme' as *;\n@use '../config' as *;\n\n/// Skeleton loading animation\n/// @access public\n/// @example @include skeleton;\n/// @group utilities\n@mixin skeleton {\n  position: relative;\n  padding: 0;\n  border: none;\n  background: $skeleton-background;\n  box-shadow: none;\n  pointer-events: none;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border: none;\n    cursor: default;\n    outline: none;\n  }\n\n  &::before {\n    position: absolute;\n    animation: 3000ms ease-in-out #{$prefix}--skeleton infinite;\n    background: $skeleton-element;\n    block-size: 100%;\n    content: '';\n    inline-size: 100%;\n    inset-inline-start: 0;\n    will-change: transform-origin, transform, opacity;\n\n    @media (prefers-reduced-motion: reduce) {\n      animation: none;\n    }\n  }\n}\n\n/// Circular Skeleton loading animation\n/// @access public\n/// @example @include circular-skeleton;\n/// @group utilities\n@mixin circular-skeleton {\n  position: relative;\n  overflow: hidden;\n  border-radius: 50%;\n  background: $skeleton-background;\n\n  &::before {\n    position: absolute;\n    animation: 3000ms ease-in-out #{$prefix}--skeleton infinite;\n    background: $skeleton-element;\n    block-size: 100%;\n    content: '';\n    inline-size: 200%;\n    will-change: transform-origin, transform, opacity;\n\n    @media (prefers-reduced-motion: reduce) {\n      animation: none;\n    }\n  }\n}\n","//\n// Copyright IBM Corp. 2021\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// High Contrast Mode mixin for Windows and macOS\n/// @access public\n/// @example @include high-contrast-mode;\n/// @group utilities\n/// Set HCM styles at the end of each file to ensure they are not overwritten\n@mixin high-contrast-mode($type: '') {\n  @media screen and (-ms-high-contrast: active), (forced-colors: active) {\n    @if ($type == 'focus') {\n      color: Highlight;\n      outline: 1px solid Highlight;\n    }\n\n    @if ($type == 'outline') {\n      outline: 1px solid transparent;\n    }\n\n    @if ($type == 'disabled') {\n      color: GrayText;\n      fill: GrayText;\n    }\n\n    @content;\n  }\n}\n","//\n// Copyright IBM Corp. 2021\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use '../config' as *;\n\n/// Include styles for screen reader/assistive text\n/// @access public\n/// @group utilities\n@mixin visually-hidden {\n  position: absolute;\n  overflow: hidden;\n  padding: 0;\n  border: 0;\n  margin: -1px;\n  block-size: 1px;\n  clip: rect(0, 0, 0, 0);\n  inline-size: 1px;\n  visibility: inherit;\n  white-space: nowrap;\n}\n\n.#{$prefix}--assistive-text,\n.#{$prefix}--visually-hidden {\n  position: absolute;\n  overflow: hidden;\n  padding: 0;\n  border: 0;\n  margin: -1px;\n  block-size: 1px;\n  clip: rect(0, 0, 0, 0);\n  inline-size: 1px;\n  visibility: inherit;\n  white-space: nowrap;\n}\n","//\n// Copyright IBM Corp. 2023, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n// Standard imports.\n@use '@carbon/layout/scss/convert' as *;\n@use '@carbon/styles/scss/colors' as *;\n@use '@carbon/styles/scss/motion' as *;\n@use '@carbon/styles/scss/spacing' as *;\n@use '@carbon/styles/scss/theme' as *;\n@use '@carbon/styles/scss/themes';\n@use '@carbon/styles/scss/type' as *;\n@use '@carbon/styles/scss/utilities';\n@use '../../global/styles/project-settings' as c4p-settings;\n\n// The block part of our conventional BEM class names (blockClass__E--M).\n$block-class: #{c4p-settings.$pkg-prefix}--carousel;\n\n.#{$block-class} {\n  position: relative;\n\n  /* stylelint-disable-next-line max-nesting-depth */\n  &:focus {\n    outline: none;\n  }\n}\n.#{$block-class}__elements-container {\n  overflow: hidden;\n}\n.#{$block-class}__elements-container--scrolled,\n.#{$block-class}__elements-container--scroll-max {\n  position: absolute;\n  z-index: 1;\n  inline-size: $spacing-07;\n  inset-block: 0;\n  pointer-events: none;\n}\n\n.#{$block-class}__elements-container--scrolled {\n  inset-inline-start: 0;\n}\n\n.#{$block-class}__elements-container--scroll-max {\n  inset-inline-end: 0;\n}\n\n.#{$block-class}__elements {\n  display: flex;\n  overflow: scroll;\n  -ms-overflow-style: none;\n  scroll-behavior: smooth;\n  scroll-snap-type: x mandatory;\n  scrollbar-width: none;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n\n  &:focus {\n    @include utilities.focus-outline('outline');\n  }\n\n  /* stylelint-disable-next-line max-nesting-depth */\n  @media (prefers-reduced-motion) {\n    scroll-behavior: auto;\n  }\n}\n\n.#{$block-class}__elements::-webkit-scrollbar {\n  display: none;\n}\n","//\n// Copyright IBM Corp. 2021\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use '../theme';\n\n/// Adds outline styles depending on specific type\n/// @access public\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\n/// @example @include focus-outline('outline');\n/// @group utilities\n@mixin focus-outline($type: 'border') {\n  @if ($type == 'border') {\n    outline: 1px solid theme.$focus;\n\n    @media screen and (prefers-contrast) {\n      outline-style: dotted;\n    }\n  }\n\n  @if ($type == 'blurred') {\n    box-shadow: 0 0 0 3px theme.$focus;\n    outline: 1px solid transparent;\n  }\n\n  @if ($type == 'outline') {\n    outline: 2px solid theme.$focus;\n    outline-offset: -2px;\n\n    @media screen and (prefers-contrast) {\n      outline-style: dotted;\n    }\n  }\n\n  @if ($type == 'outline-compat') {\n    box-sizing: border-box;\n    border: 2px solid theme.$focus;\n\n    @media screen and (prefers-contrast) {\n      border-style: dotted;\n    }\n  }\n\n  @if ($type == 'invalid') {\n    outline: 2px solid theme.$support-error;\n    outline-offset: -2px;\n\n    @media screen and (prefers-contrast) {\n      outline-style: dotted;\n    }\n  }\n\n  @if ($type == 'reset') {\n    outline: 2px solid transparent;\n    outline-offset: -2px;\n  }\n}\n","//\n// Copyright IBM Corp. 2024, 2024\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/* stylelint-disable max-nesting-depth */\n/* stylelint-disable declaration-no-important */\n\n// Standard imports.\n@use '../../global/styles/project-settings' as c4p-settings;\n@use '../../global/styles/mixins';\n@use '@carbon/styles/scss/theme' as *;\n@use '@carbon/styles/scss/spacing' as *;\n@use '@carbon/styles/scss/breakpoint' as *;\n@use '@carbon/styles/scss/colors' as *;\n@use '@carbon/styles/scss/type';\n\n// InterstitialScreen uses the following Carbon for IBM Products components:\n@use '../Carousel/carousel';\n\n// The block part of our conventional BEM class names (blockClass__E--M).\n$block-class: #{c4p-settings.$pkg-prefix}--interstitial-screen;\n$carousel: #{c4p-settings.$pkg-prefix}--carousel;\n$carousel-item: #{c4p-settings.$pkg-prefix}--carousel__item;\n$one-grid-column: calc(100% / 16);\n\n.#{$block-class} {\n  $block: &;\n\n  &--body {\n    overflow: hidden auto;\n    flex-grow: 1;\n    padding: 0;\n    margin: 0;\n    background-color: $background;\n  }\n\n  &--progress {\n    margin-block-end: $spacing-04;\n  }\n\n  &__carousel {\n    block-size: 100%;\n    .#{$carousel-item} {\n      flex: 0 0 100% !important;\n      scroll-snap-align: start;\n    }\n  }\n\n  &--internal-body {\n    padding: 0 !important;\n    margin: 0 !important;\n  }\n\n  // HEADER\n  &--internal-header {\n    position: relative;\n    background-color: $background;\n    margin-block-end: 0 !important;\n    min-block-size: $spacing-09;\n    padding-block-start: $spacing-06;\n    padding-inline-start: $spacing-07 !important;\n\n    &:empty {\n      min-block-size: 0;\n    }\n\n    .#{$block-class}--titleContainer {\n      margin-block-end: $spacing-05;\n\n      h1 {\n        @include type.type-style('productive-heading-04');\n\n        margin-block-end: $spacing-03;\n\n        &:empty {\n          padding: 0;\n        }\n      }\n\n      h2 {\n        @include type.type-style('productive-heading-03');\n\n        &:empty {\n          padding: 0;\n        }\n      }\n    }\n\n    &--has-title {\n      background: $layer-01;\n      border-block-end: 1px solid $border-subtle-01;\n\n      #{$block}--progress {\n        margin-block-start: 0;\n      }\n    }\n  }\n\n  // FOOTER\n  &--footer {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    background: $background;\n    border-block-start: 1px solid $border-subtle-01;\n    inline-size: 100%;\n\n    #{$block}--prev-btn,\n    #{$block}--next-btn,\n    #{$block}--start-btn {\n      inline-size: calc($one-grid-column * 3);\n      min-inline-size: 12.5rem;\n      padding-block-end: $spacing-07;\n    }\n\n    #{$block}--skip-btn {\n      flex-grow: 1 !important;\n      max-inline-size: none;\n      padding-inline-start: $spacing-07 !important;\n    }\n    .#{c4p-settings.$carbon-prefix}--inline-loading {\n      position: absolute;\n      inline-size: $spacing-07;\n      inset-block-start: 0;\n      inset-inline-end: 0;\n    }\n  }\n\n  &--footer-controls {\n    display: flex;\n    flex-direction: row;\n    // flex: 1;\n    margin-inline-start: auto;\n  }\n\n  // FULL SCREEN (settings exclusive of \"MODAL\")\n  &--full-screen {\n    position: fixed;\n    inset-block-start: 0;\n    inset-inline: 0;\n    #{$block}--container {\n      display: flex;\n      flex-direction: column;\n      padding: 0;\n      margin: 0;\n      block-size: 100vh;\n      max-inline-size: 100vw;\n    }\n\n    #{$block}--footer {\n      #{$block}--skip-btn {\n        padding-inline-start: $spacing-08 !important;\n        @include breakpoint-down(xlg) {\n          padding-inline-start: $spacing-07 !important;\n        }\n      }\n    }\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@carbon/layout/scss/convert';\n@use 'config' as *;\n\n/// Provide a map and index, and get back the relevant key value\n/// @access public\n/// @param {Map} $map - Map\n/// @param {Integer} $index - Key chain\n/// @return {String} Desired value\n/// @group @carbon/layout\n@function -key-by-index($map, $index) {\n  $keys: map.keys($map);\n  @return list.nth($keys, $index);\n}\n\n/// Get the value of the next breakpoint, or null for the last breakpoint\n/// @param {String} $name - The name of the breakpoint\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @param {List} $breakpoint-names [map-keys($breakpoints)] - A list of names from the `$breakpoints` map\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function breakpoint-next(\n  $name,\n  $breakpoints: $grid-breakpoints,\n  $breakpoint-names: map.keys($breakpoints)\n) {\n  $n: list.index($breakpoint-names, $name);\n  @if $n != null and $n < list.length($breakpoint-names) {\n    @return list.nth($breakpoint-names, $n + 1);\n  }\n  @return null;\n}\n\n/// Get the value of the previous breakpoint, or null for the first breakpoint\n/// @param {String} $name - The name of the breakpoint\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @param {List} $breakpoint-names [map-keys($breakpoints)] - A list of names from the `$breakpoints` map\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function breakpoint-prev(\n  $name,\n  $breakpoints: $grid-breakpoints,\n  $breakpoint-names: map.keys($breakpoints)\n) {\n  $n: list.index($breakpoint-names, $name);\n  @if $n != null and $n > 1 {\n    @return list.nth($breakpoint-names, $n - 1);\n  }\n  @return null;\n}\n\n/// Check to see if the given breakpoint name\n/// @param {String} $name - The name of the breakpoint\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @return {Bool}\n/// @access public\n/// @group @carbon/layout\n@function is-smallest-breakpoint($name, $breakpoints: $grid-breakpoints) {\n  @return list.index(map.keys($breakpoints), $name) == 1;\n}\n\n/// Returns the largest breakpoint name\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function largest-breakpoint-name($breakpoints: $grid-breakpoints) {\n  $total-breakpoints: list.length($breakpoints);\n  @return -key-by-index($breakpoints, $total-breakpoints);\n}\n\n/// Get the infix for a given breakpoint in a list of breakpoints. Useful for generating the size part in a selector, for example: `.prefix--col-sm-2`.\n/// @param {String} $name - The name of the breakpoint\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function breakpoint-infix($name) {\n  @return '-#{$name}';\n}\n\n/// Generate a media query from the width of the given breakpoint to infinity\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  @if meta.type-of($name) == 'number' {\n    @media (min-width: $name) {\n      @content;\n    }\n  } @else if map.has-key($breakpoints, $name) {\n    $breakpoint: map.get($breakpoints, $name);\n    $width: map.get($breakpoint, width);\n    @if is-smallest-breakpoint($name, $breakpoints) {\n      @content;\n    } @else {\n      @media (min-width: $width) {\n        @content;\n      }\n    }\n  } @else {\n    @error 'Unable to find a breakpoint with name `#{$name}`. Expected one of: (#{map.keys($breakpoints)})';\n  }\n}\n\n/// Generate a media query for the maximum width of the given styles\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  @if meta.type-of($name) == 'number' {\n    @media (max-width: $name) {\n      @content;\n    }\n  } @else if map.has-key($breakpoints, $name) {\n    // We borrow this logic from bootstrap for specifying the value of the\n    // max-width. The maximum width is calculated by finding the breakpoint and\n    // subtracting .02 from its value. This value is used instead of .01 to\n    // avoid rounding issues in Safari\n    // https://github.com/twbs/bootstrap/blob/c5b1919deaf5393fcca9e9b9d7ce9c338160d99d/scss/mixins/_breakpoints.scss#L34-L46\n    $breakpoint: map.get($breakpoints, $name);\n    $width: map.get($breakpoint, width) - 0.02;\n    @media (max-width: $width) {\n      @content;\n    }\n  } @else {\n    @error 'Unable to find a breakpoint with name `#{$name}`. Expected one of: (#{map.keys($breakpoints)})';\n  }\n}\n\n/// Generate a media query for the range between the lower and upper breakpoints\n/// @param {String | Number} $lower\n/// @param {String | Number} $upper\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $is-number-lower: meta.type-of($lower) == 'number';\n  $is-number-upper: meta.type-of($upper) == 'number';\n  $min: if($is-number-lower, $lower, map.get($breakpoints, $lower));\n  $max: if($is-number-upper, $upper, map.get($breakpoints, $upper));\n\n  @if $min and $max {\n    $min-width: if(not $is-number-lower and $min, map.get($min, width), $min);\n    $max-width: if(not $is-number-upper and $max, map.get($max, width), $max);\n    @media (min-width: $min-width) and (max-width: $max-width) {\n      @content;\n    }\n  } @else if $min != null and $max == null {\n    @include breakpoint-up($lower) {\n      @content;\n    }\n  } @else if $min == null and $max != null {\n    @include breakpoint-down($upper) {\n      @content;\n    }\n  } @else {\n    @error 'Unable to find a breakpoint to satisfy: (#{$lower},#{$upper}). Expected both to be one of (#{map.keys($breakpoints)}).';\n  }\n}\n\n/// Generate media query for the largest breakpoint\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin largest-breakpoint($breakpoints: $grid-breakpoints) {\n  @include breakpoint(largest-breakpoint-name()) {\n    @content;\n  }\n}\n\n/// Generate a media query for a given breakpoint\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin breakpoint($name, $breakpoints: $grid-breakpoints) {\n  @include breakpoint-up($name, $breakpoints) {\n    @content;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n// Helpers for defining columns, rows, and containers are heavily inspired by,\n// and often derived from, bootstrap:\n// https://github.com/twbs/bootstrap/blob/v4-dev/scss/mixins/_grid.scss\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:math';\n@use 'sass:map';\n\n@use 'config' as *;\n@use 'breakpoint' as *;\n\n// -----------------------------------------------------------------------------\n// Columns\n// -----------------------------------------------------------------------------\n\n/// Used to initialize the default properties for a column class, most notably\n/// for setting width and default gutters when a column's breakpoint has not been\n/// hit yet.\n/// @param {Number} $gutter [$grid-gutter] - The gutter for the grid system\n/// @param {Number} $collapsed-gutter [$grid-gutter-condensed] - The condensed mode gutter\n/// @access private\n/// @group @carbon/grid\n@mixin -make-col-ready(\n  $gutter: $grid-gutter,\n  $condensed-gutter: $grid-gutter-condensed\n) {\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\n  // always setting `width: 100%;`. This works because we use `flex` values\n  // later on to override this initial width.\n  inline-size: 100%;\n  padding-inline: $gutter * 0.5;\n\n  // For our condensed use-case, our gutters collapse to 2px solid, 1px on each\n  // side.\n  .#{$prefix}--row--condensed &,\n  .#{$prefix}--grid--condensed & {\n    padding-inline: $condensed-gutter * 0.5;\n  }\n\n  // For our narrow use-case, our container hangs 16px into the gutter\n  .#{$prefix}--row--narrow &,\n  .#{$prefix}--grid--narrow & {\n    padding-inline: 0 $gutter * 0.5;\n  }\n}\n\n/// Define the width of the column for a given span and column count.\n/// A width of 0 will hide the column entirely.\n/// @param {Number} $span - The number of columns covered\n/// @param {Number} $columns - The total number of columns available\n/// @access private\n/// @group @carbon/grid\n@mixin -make-col($span, $columns) {\n  @if $span == 0 {\n    display: none;\n  } @else {\n    // Explicitly include `display: block` to override\n    display: block;\n    // Add a `max-width` to ensure content within each column does not blow out\n    // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari\n    // do not appear to require this.\n    flex: 0 0 math.percentage(math.div($span, $columns));\n    max-inline-size: math.percentage(math.div($span, $columns));\n  }\n}\n\n/// Create a column offset for a given span and column count.\n/// @param {Number} $span - The number of columns the offset should cover\n/// @param {Number} $columns - The total number of columns available\n/// @access private\n/// @group @carbon/grid\n@mixin -make-col-offset($span, $columns) {\n  $offset: 0;\n  $offset: math.div($span, $columns);\n  @if $offset == 0 {\n    margin-inline-start: 0;\n  } @else {\n    margin-inline-start: math.percentage($offset);\n  }\n}\n\n/// Output the CSS required for all the columns in a given grid system.\n/// @param {Map} $breakpoints [$grid-breakpoints] - The breakpoints in the grid system\n/// @param {Number} $gutter [$grid-gutter] - The gutter for the grid system\n/// @access private\n/// @group @carbon/grid\n@mixin -make-grid-columns(\n  $breakpoints: $grid-breakpoints,\n  $gutter: $grid-gutter\n) {\n  .#{$prefix}--col {\n    @include -make-col-ready($gutter);\n  }\n\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint);\n    $columns: map.get(map.get($breakpoints, $breakpoint), columns);\n\n    // Allow columns to stretch full width below their breakpoints\n    @for $i from 0 through $columns {\n      .#{$prefix}--col#{$infix}-#{$i} {\n        @include -make-col-ready($gutter);\n      }\n    }\n\n    .#{$prefix}--col#{$infix},\n    .#{$prefix}--col#{$infix}--auto {\n      @include -make-col-ready($gutter);\n    }\n\n    @include breakpoint($breakpoint, $breakpoints) {\n      // Provide basic `.col-{bp}` classes for equal-width flexbox columns\n      .#{$prefix}--col,\n      .#{$prefix}--col#{$infix} {\n        flex-basis: 0;\n        flex-grow: 1;\n        max-inline-size: 100%;\n      }\n\n      .#{$prefix}--col--auto,\n      .#{$prefix}--col#{$infix}--auto {\n        flex: 1 0 0%;\n        inline-size: auto;\n        // Reset earlier grid tiers\n        max-inline-size: 100%;\n      }\n\n      @for $i from 0 through $columns {\n        .#{$prefix}--col#{$infix}-#{$i} {\n          @include -make-col($i, $columns);\n        }\n      }\n\n      @for $i from 0 through ($columns - 1) {\n        @if not($infix == '') {\n          .#{$prefix}--offset#{$infix}-#{$i} {\n            @include -make-col-offset($i, $columns);\n          }\n        }\n      }\n    }\n  }\n}\n\n// -----------------------------------------------------------------------------\n// Rows\n// -----------------------------------------------------------------------------\n\n/// Define the properties for a selector assigned to a row in the grid system.\n/// @param {Number} $gutter [$grid-gutter] - The gutter in the grid system\n/// @access private\n/// @group @carbon/grid\n@mixin -make-row($gutter: $grid-gutter) {\n  display: flex;\n  flex-wrap: wrap;\n  margin-inline: -1 * $gutter * 0.5;\n}\n\n// -----------------------------------------------------------------------------\n// No gutter\n// -----------------------------------------------------------------------------\n\n/// Add `no-gutter` and `no-gutter--{start,end}` classes to the output CSS. These\n/// classes are useful for dropping the gutter in fluid situations.\n/// @access private\n/// @group @carbon/grid\n@mixin -no-gutter {\n  .#{$prefix}--no-gutter,\n  .#{$prefix}--row.#{$prefix}--no-gutter [class*='#{$prefix}--col'] {\n    padding-inline: 0;\n  }\n\n  .#{$prefix}--no-gutter--start,\n  .#{$prefix}--row.#{$prefix}--no-gutter--start [class*='#{$prefix}--col'] {\n    padding-inline-start: 0;\n  }\n\n  .#{$prefix}--no-gutter--end,\n  .#{$prefix}--row.#{$prefix}--no-gutter--end [class*='#{$prefix}--col'] {\n    padding-inline-end: 0;\n  }\n}\n\n// -----------------------------------------------------------------------------\n// Hang\n// -----------------------------------------------------------------------------\n\n/// Add `hang--start` and `hang--end` classes for a given gutter. These classes are\n/// used alongside `no-gutter--start` and `no-gutter--end` to \"hang\" type.\n/// @param {Number} $gutter [$grid-gutter] - The gutter in the grid system\n/// @access private\n/// @group @carbon/grid\n@mixin -hang($gutter: $grid-gutter) {\n  .#{$prefix}--hang--start {\n    padding-inline-start: $gutter * 0.5;\n  }\n\n  .#{$prefix}--hang--end {\n    padding-inline-end: $gutter * 0.5;\n  }\n}\n\n// -----------------------------------------------------------------------------\n// Grid\n// -----------------------------------------------------------------------------\n\n/// Create the container for a grid. Will cause full-bleed for the grid unless\n/// max-width properties are added with `make-container-max-widths`\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @access private\n/// @group @carbon/grid\n@mixin -make-container($breakpoints: $grid-breakpoints) {\n  margin-inline: auto;\n\n  @include -set-largest-breakpoint($breakpoints);\n\n  @each $name, $value in $breakpoints {\n    $prev-breakpoint: map.get($breakpoints, breakpoint-prev($name));\n    $margin: map.get($value, margin);\n\n    @if $prev-breakpoint {\n      $prev-margin: map.get($prev-breakpoint, margin);\n      @if $prev-margin != $margin {\n        @include breakpoint($name) {\n          padding-inline: #{($grid-gutter * 0.5) + $margin};\n        }\n      }\n    } @else {\n      @include breakpoint($name) {\n        padding-inline: #{($grid-gutter * 0.5) + $margin};\n      }\n    }\n  }\n}\n\n/// Get the last breakpoint width and set max-width to its value\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @access private\n/// @group @carbon/grid\n@mixin -set-largest-breakpoint($breakpoints: $grid-breakpoints) {\n  $largest-breakpoint: -last-map-item($breakpoints);\n\n  max-inline-size: map.get($largest-breakpoint, 'width');\n}\n\n/// Add in the max-widths for each breakpoint to the container\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @access private\n/// @group @carbon/grid\n@mixin -make-container-max-widths($breakpoints: $grid-breakpoints) {\n  @each $name, $value in $breakpoints {\n    @include breakpoint($name) {\n      max-inline-size: map.get($value, width);\n    }\n  }\n}\n\n/// Pass in a map, and get the last one in the list back\n/// @access public\n/// @param {Map} $map - Map\n/// @return {*} Desired value\n/// @group @carbon/layout\n@function -last-map-item($map) {\n  $total-length: list.length($map);\n  @return map.get($map, -key-by-index($map, $total-length));\n}\n\n/// Provide a map and index, and get back the relevant key value\n/// @access public\n/// @param {Map} $map - Map\n/// @param {Integer} $index - Key chain\n/// @return {String} Desired value\n/// @group @carbon/layout\n@function -key-by-index($map, $index) {\n  $keys: map.keys($map);\n  @return list.nth($keys, $index);\n}\n\n/// Generate the CSS for a grid for the given breakpoints and gutters\n/// @param {Map} $breakpoints [$grid-breakpoints] - The default breakpoints\n/// @param {Number} $grid-gutter [$grid-gutter] - The default gutters\n/// @param {Number} $condensed-gutter [$grid-gutter-condensed] - The condensed mode gutter\n/// @access public\n/// @group @carbon/grid\n@mixin flex-grid(\n  $breakpoints: $grid-breakpoints,\n  $grid-gutter: $grid-gutter,\n  $condensed-gutter: $grid-gutter-condensed\n) {\n  .#{$prefix}--grid {\n    @include -make-container($breakpoints);\n  }\n\n  @include largest-breakpoint($breakpoints) {\n    .#{$prefix}--grid--full-width {\n      max-inline-size: 100%;\n    }\n  }\n\n  .#{$prefix}--row {\n    @include -make-row();\n  }\n\n  .#{$prefix}--row-padding [class*='#{$prefix}--col'],\n  .#{$prefix}--col-padding {\n    padding-block: $grid-gutter * 0.5;\n  }\n\n  .#{$prefix}--grid--condensed [class*='#{$prefix}--col'] {\n    padding-block: $condensed-gutter * 0.5;\n  }\n\n  @include -make-grid-columns($breakpoints, $grid-gutter);\n  @include -no-gutter();\n  @include -hang($grid-gutter);\n}\n","/**\n * @license\n *\n * Copyright IBM Corp. 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@use '@carbon/styles/scss/theme' as *;\n@use '@carbon/styles/scss/spacing' as *;\n@use '@carbon/styles/scss/type' as *;\n@use '@carbon/type/scss/font-family' as *;\n@use '@carbon/styles/scss/components/tag' as *;\n@use '@carbon/ibm-products/scss/components/InterstitialScreen';\n@use '@carbon/react/scss/grid/flexbox';\n\n$prefix: 'clabs' !default;\n\n.#{$prefix}__wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  block-size: 100vh;\n}\n.#{$prefix}__flexContainer {\n  block-size: 100%;\n  padding-inline-end: 0;\n}\n.#{$prefix}__interstitialTextContainer {\n  margin-block-end: $spacing-09;\n\n  h3 {\n    @include type-style('fluid-heading-05', true);\n\n    span.blue-text {\n      color: $interactive;\n    }\n\n    p {\n      @include type-style('body-02');\n    }\n\n    margin-block-end: $spacing-05;\n  }\n  &.#{$prefix}__firstTimeOrientation {\n    h3 {\n      @include type-style('heading-04', true);\n    }\n\n    h4 {\n      @include type-style('heading-02', true);\n\n      margin-block-end: $spacing-03;\n    }\n  }\n}\n.#{$prefix}__contentColumn {\n  position: relative;\n  box-sizing: border-box;\n  padding-block-start: $spacing-10;\n}\n\nimg.#{$prefix}__interstitialImage {\n  inline-size: 100%;\n}\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@carbon/layout/scss/convert';\n@use 'config' as *;\n\n/// Provide a map and index, and get back the relevant key value\n/// @access public\n/// @param {Map} $map - Map\n/// @param {Integer} $index - Key chain\n/// @return {String} Desired value\n/// @group @carbon/layout\n@function -key-by-index($map, $index) {\n  $keys: map.keys($map);\n  @return list.nth($keys, $index);\n}\n\n/// Get the value of the next breakpoint, or null for the last breakpoint\n/// @param {String} $name - The name of the breakpoint\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @param {List} $breakpoint-names [map-keys($breakpoints)] - A list of names from the `$breakpoints` map\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function breakpoint-next(\n  $name,\n  $breakpoints: $grid-breakpoints,\n  $breakpoint-names: map.keys($breakpoints)\n) {\n  $n: list.index($breakpoint-names, $name);\n  @if $n != null and $n < list.length($breakpoint-names) {\n    @return list.nth($breakpoint-names, $n + 1);\n  }\n  @return null;\n}\n\n/// Get the value of the previous breakpoint, or null for the first breakpoint\n/// @param {String} $name - The name of the breakpoint\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @param {List} $breakpoint-names [map-keys($breakpoints)] - A list of names from the `$breakpoints` map\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function breakpoint-prev(\n  $name,\n  $breakpoints: $grid-breakpoints,\n  $breakpoint-names: map.keys($breakpoints)\n) {\n  $n: list.index($breakpoint-names, $name);\n  @if $n != null and $n > 1 {\n    @return list.nth($breakpoint-names, $n - 1);\n  }\n  @return null;\n}\n\n/// Check to see if the given breakpoint name\n/// @param {String} $name - The name of the breakpoint\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @return {Bool}\n/// @access public\n/// @group @carbon/layout\n@function is-smallest-breakpoint($name, $breakpoints: $grid-breakpoints) {\n  @return list.index(map.keys($breakpoints), $name) == 1;\n}\n\n/// Returns the largest breakpoint name\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function largest-breakpoint-name($breakpoints: $grid-breakpoints) {\n  $total-breakpoints: list.length($breakpoints);\n  @return -key-by-index($breakpoints, $total-breakpoints);\n}\n\n/// Get the infix for a given breakpoint in a list of breakpoints. Useful for generating the size part in a selector, for example: `.prefix--col-sm-2`.\n/// @param {String} $name - The name of the breakpoint\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function breakpoint-infix($name) {\n  @return '-#{$name}';\n}\n\n/// Generate a media query from the width of the given breakpoint to infinity\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  @if meta.type-of($name) == 'number' {\n    @media (min-width: $name) {\n      @content;\n    }\n  } @else if map.has-key($breakpoints, $name) {\n    $breakpoint: map.get($breakpoints, $name);\n    $width: map.get($breakpoint, width);\n    @if is-smallest-breakpoint($name, $breakpoints) {\n      @content;\n    } @else {\n      @media (min-width: $width) {\n        @content;\n      }\n    }\n  } @else {\n    @error 'Unable to find a breakpoint with name `#{$name}`. Expected one of: (#{map.keys($breakpoints)})';\n  }\n}\n\n/// Generate a media query for the maximum width of the given styles\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  @if meta.type-of($name) == 'number' {\n    @media (max-width: $name) {\n      @content;\n    }\n  } @else if map.has-key($breakpoints, $name) {\n    // We borrow this logic from bootstrap for specifying the value of the\n    // max-width. The maximum width is calculated by finding the breakpoint and\n    // subtracting .02 from its value. This value is used instead of .01 to\n    // avoid rounding issues in Safari\n    // https://github.com/twbs/bootstrap/blob/c5b1919deaf5393fcca9e9b9d7ce9c338160d99d/scss/mixins/_breakpoints.scss#L34-L46\n    $breakpoint: map.get($breakpoints, $name);\n    $width: map.get($breakpoint, width) - 0.02;\n    @media (max-width: $width) {\n      @content;\n    }\n  } @else {\n    @error 'Unable to find a breakpoint with name `#{$name}`. Expected one of: (#{map.keys($breakpoints)})';\n  }\n}\n\n/// Generate a media query for the range between the lower and upper breakpoints\n/// @param {String | Number} $lower\n/// @param {String | Number} $upper\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $is-number-lower: meta.type-of($lower) == 'number';\n  $is-number-upper: meta.type-of($upper) == 'number';\n  $min: if($is-number-lower, $lower, map.get($breakpoints, $lower));\n  $max: if($is-number-upper, $upper, map.get($breakpoints, $upper));\n\n  @if $min and $max {\n    $min-width: if(not $is-number-lower and $min, map.get($min, width), $min);\n    $max-width: if(not $is-number-upper and $max, map.get($max, width), $max);\n    @media (min-width: $min-width) and (max-width: $max-width) {\n      @content;\n    }\n  } @else if $min != null and $max == null {\n    @include breakpoint-up($lower) {\n      @content;\n    }\n  } @else if $min == null and $max != null {\n    @include breakpoint-down($upper) {\n      @content;\n    }\n  } @else {\n    @error 'Unable to find a breakpoint to satisfy: (#{$lower},#{$upper}). Expected both to be one of (#{map.keys($breakpoints)}).';\n  }\n}\n\n/// Generate media query for the largest breakpoint\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin largest-breakpoint($breakpoints: $grid-breakpoints) {\n  @include breakpoint(largest-breakpoint-name()) {\n    @content;\n  }\n}\n\n/// Generate a media query for a given breakpoint\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin breakpoint($name, $breakpoints: $grid-breakpoints) {\n  @include breakpoint-up($name, $breakpoints) {\n    @content;\n  }\n}\n"],"names":[],"sourceRoot":""}