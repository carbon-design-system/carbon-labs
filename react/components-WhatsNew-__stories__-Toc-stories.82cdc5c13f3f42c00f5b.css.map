{"version":3,"file":"components-WhatsNew-__stories__-Toc-stories.82cdc5c13f3f42c00f5b.css","mappings":"AAkBA","sources":["webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/utilities/_keyframes.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/_layout.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/utilities/_custom-property.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/utilities/_visually-hidden.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/ibm-products/scss/components/ActionSet/_action-set.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/node_modules/@carbon/themes/scss/generated/_tokens.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/node_modules/@carbon/type/scss/_styles.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/node_modules/@carbon/layout/scss/generated/_spacing.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/ibm-products/scss/components/Tearsheet/_tearsheet.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/node_modules/@carbon/grid/scss/_breakpoint.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/theme/_theme.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/utilities/_ai-gradient.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/_zone.scss","webpack://@carbon-labs/react/./src/components/WhatsNew/components/styles/_bubble.scss","webpack://@carbon-labs/react/./src/components/WhatsNew/components/styles/_toc.scss","webpack://@carbon-labs/react/./src/components/WhatsNew/components/styles/_view-stack.scss","webpack://@carbon-labs/react/./src/components/WhatsNew/components/whats-new.scss","webpack://@carbon-labs/react/./src/components/WhatsNew/__stories__/storybook.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/node_modules/@carbon/themes/scss/_theme.scss","webpack://@carbon-labs/react/../../node_modules/@carbon/styles/scss/_theme.scss"],"sourcesContent":["//\n// Copyright IBM Corp. 2021\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n@use '../config' as *;\n\n@mixin content-visible {\n  opacity: 1;\n  visibility: inherit;\n}\n\n@mixin content-hidden {\n  opacity: 0;\n  visibility: hidden;\n}\n\n@keyframes #{$prefix}--hide-feedback {\n  0% {\n    @include content-visible;\n  }\n\n  100% {\n    @include content-hidden;\n  }\n}\n\n@keyframes #{$prefix}--show-feedback {\n  0% {\n    @include content-hidden;\n  }\n\n  100% {\n    @include content-visible;\n  }\n}\n\n@keyframes #{$prefix}--skeleton {\n  0% {\n    opacity: 0.3;\n    transform: scaleX(0);\n    transform-origin: left;\n  }\n\n  20% {\n    opacity: 1;\n    transform: scaleX(1);\n    transform-origin: left;\n  }\n\n  28% {\n    transform: scaleX(1);\n    transform-origin: right;\n  }\n\n  51% {\n    transform: scaleX(0);\n    transform-origin: right;\n  }\n\n  58% {\n    transform: scaleX(0);\n    transform-origin: right;\n  }\n\n  82% {\n    transform: scaleX(1);\n    transform-origin: right;\n  }\n\n  83% {\n    transform: scaleX(1);\n    transform-origin: left;\n  }\n\n  96% {\n    transform: scaleX(0);\n    transform-origin: left;\n  }\n\n  100% {\n    opacity: 0.3;\n    transform: scaleX(0);\n    transform-origin: left;\n  }\n}\n","//\n// Copyright IBM Corp. 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use 'sass:map';\n@use 'sass:list';\n\n@use './config' as *;\n@use './utilities/custom-property';\n@use './utilities/convert';\n@use './spacing' as *;\n\n$layout-tokens: (\n  size: (\n    height: (\n      xs: convert.to-rem(24px),\n      sm: convert.to-rem(32px),\n      md: convert.to-rem(40px),\n      lg: convert.to-rem(48px),\n      xl: convert.to-rem(64px),\n      2xl: convert.to-rem(80px),\n    ),\n  ),\n  density: (\n    padding-inline: (\n      condensed: $spacing-03,\n      normal: $spacing-05,\n    ),\n  ),\n);\n\n@mixin emit-layout-tokens {\n  @each $group, $properties in $layout-tokens {\n    @each $property, $steps in $properties {\n      @each $step, $value in $steps {\n        @include custom-property.declaration(\n          'layout-#{$group}-#{$property}-#{$step}',\n          $value\n        );\n      }\n\n      // CSS max() doesn't accept '0' as a value without a unit\n      // stylelint-disable length-zero-no-unit\n      @include custom-property.declaration(\n        'layout-#{$group}-#{$property}-min',\n        0px\n      );\n      // stylelint-enable length-zero-no-unit\n\n      @include custom-property.declaration(\n        'layout-#{$group}-#{$property}-max',\n        999999999px\n      );\n    }\n  }\n}\n\n@each $group, $properties in $layout-tokens {\n  @each $property, $steps in $properties {\n    @each $step, $value in $steps {\n      .#{$prefix}--layout--#{$group}-#{$step} {\n        @include custom-property.declaration(\n          'layout-#{$group}-#{$property}-context',\n          custom-property.get-var(\n            'layout-#{$group}-#{$property}-#{$step}',\n            $value\n          )\n        );\n        @include custom-property.declaration(\n          'layout-#{$group}-#{$property}',\n          custom-property.get-var('layout-#{$group}-#{$property}-context')\n        );\n      }\n\n      .#{$prefix}--layout-constraint--#{$group}__default-#{$step} {\n        @include custom-property.declaration(\n          'layout-#{$group}-#{$property}',\n          custom-property.get-var(\n            'layout-#{$group}-#{$property}-context',\n            custom-property.get-var(\n              'layout-#{$group}-#{$property}-#{$step}',\n              $value\n            )\n          )\n        );\n      }\n\n      @each $constraint in ('min', 'max') {\n        .#{$prefix}--layout-constraint--#{$group}__#{$constraint}-#{$step} {\n          @include custom-property.declaration(\n            'layout-#{$group}-#{$property}-#{$constraint}',\n            custom-property.get-var(\n              'layout-#{$group}-#{$property}-#{$step}',\n              $value\n            )\n          );\n        }\n      }\n    }\n  }\n}\n\n:root {\n  @include emit-layout-tokens();\n}\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use '../config';\n\n// Some CSS Custom Property terminology\n// @see https://www.w3.org/TR/css-variables-1/\n//\n// <custom-property-name>:\n//   Any valid identifer that starts with two dashes (--)\n//\n// A declaration:\n//   CSS Custom Properties can be used as declarations in a CSS selector. They\n//   take on the form of:\n//\n//   <custom-property-name>: <declaration-value>;\n//\n// The var() notation:\n//   You can use a CSS Custom Property as a substitute for a value of another\n//   property using the var() function. This function has the following syntax:\n//\n//   var( <custom-property-name> [, <declarative-value> ]? )\n//\n//   This function takes in an optional fallback value if the CSS Custom\n//   Property has not been previously defined\n\n/// Get the <custom-property-name> for a given string\n/// @param {String} $name\n/// @returns {String}\n@function get-name($name) {\n  @return --#{config.$prefix}-#{$name};\n}\n\n/// Get the var() representation for a given token\n/// @param {String} $name\n/// @param {Any} $fallback\n/// @returns var()\n@function get-var($name, $fallback: false) {\n  @if $fallback {\n    @return var(--#{config.$prefix}-#{$name}, #{$fallback});\n  }\n  @return var(--#{config.$prefix}-#{$name});\n}\n\n/// Emit a declaration which sets the value of a CSS Custom Property using the\n/// $name as the <custom-property-name> and the $value as the\n/// <declaration-value>\n/// @param {String} $name\n/// @param {any} $value\n@mixin declaration($name, $value) {\n  #{get-name($name)}: #{$value};\n}\n","//\n// Copyright IBM Corp. 2021\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use '../config' as *;\n\n/// Include styles for screen reader/assistive text\n/// @access public\n/// @group utilities\n@mixin visually-hidden {\n  position: absolute;\n  overflow: hidden;\n  padding: 0;\n  border: 0;\n  margin: -1px;\n  block-size: 1px;\n  clip: rect(0, 0, 0, 0);\n  inline-size: 1px;\n  visibility: inherit;\n  white-space: nowrap;\n}\n\n.#{$prefix}--assistive-text,\n.#{$prefix}--visually-hidden {\n  position: absolute;\n  overflow: hidden;\n  padding: 0;\n  border: 0;\n  margin: -1px;\n  block-size: 1px;\n  clip: rect(0, 0, 0, 0);\n  inline-size: 1px;\n  visibility: inherit;\n  white-space: nowrap;\n}\n","//\n// Copyright IBM Corp. 2021, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use '@carbon/layout/scss/convert' as *;\n\n@use '@carbon/styles/scss/theme' as *;\n@use '@carbon/styles/scss/type';\n@use '@carbon/styles/scss/spacing' as *;\n\n@use '../../global/styles/project-settings' as c4p-settings;\n\n// The block part of our conventional BEM class names (blockClass__E--M).\n$action-set-block-class: #{c4p-settings.$pkg-prefix}--action-set;\n\n.#{$action-set-block-class} {\n  align-items: stretch;\n  justify-content: flex-end;\n  background-color: $layer-01;\n}\n\n.#{$action-set-block-class} .#{$action-set-block-class}__action-button {\n  @include type.type-style('body-short-01');\n\n  align-items: center;\n  margin: 0;\n\n  &.#{$action-set-block-class}__action-button--expressive {\n    block-size: $spacing-10;\n    padding-block: $spacing-05 $spacing-07;\n  }\n}\n\n.#{$action-set-block-class}.#{c4p-settings.$carbon-prefix}--btn-set\n  .#{$action-set-block-class}__action-button.#{c4p-settings.$carbon-prefix}--btn.#{c4p-settings.$carbon-prefix}--btn--expressive,\n.#{$action-set-block-class}.#{c4p-settings.$carbon-prefix}--btn-set\n  .#{$action-set-block-class}__action-button.#{c4p-settings.$carbon-prefix}--btn {\n  max-inline-size: none;\n}\n\n.#{$action-set-block-class}:not(.#{$action-set-block-class}--stacking)\n  .#{$action-set-block-class}__action-button--ghost {\n  padding-inline-start: $spacing-07;\n}\n\n// For row-single in medium,\n// or for ghosts in row-single,\n// buttons are 100% width\n.#{$action-set-block-class}.#{$action-set-block-class}--row-single.#{$action-set-block-class}--md\n  .#{$action-set-block-class}__action-button,\n.#{$action-set-block-class}.#{$action-set-block-class}--row-single\n  .#{$action-set-block-class}__action-button--ghost {\n  flex: 0 0 100%;\n}\n\n// For ghosts in row-double,\n// buttons are 75% width and expand to use any remaining space\n.#{$action-set-block-class}.#{$action-set-block-class}--row-double\n  .#{$action-set-block-class}__action-button--ghost {\n  flex: 1 1 75%;\n}\n\n// For row-single in large (non-ghost),\n// or row-double in medium or large,\n// buttons are 50% width\n.#{$action-set-block-class}.#{$action-set-block-class}--row-single.#{$action-set-block-class}--lg\n  .#{$action-set-block-class}__action-button:not(\n    .#{$action-set-block-class}__action-button--ghost\n  ),\n.#{$action-set-block-class}.#{$action-set-block-class}--row-double.#{$action-set-block-class}--md\n  .#{$action-set-block-class}__action-button,\n.#{$action-set-block-class}.#{$action-set-block-class}--row-double.#{$action-set-block-class}--lg\n  .#{$action-set-block-class}__action-button,\n.#{$action-set-block-class}.#{$action-set-block-class}--row-triple\n  .#{$action-set-block-class}__action-button--ghost {\n  flex: 0 1 50%;\n}\n\n// For ghosts in row-triple,\n// buttons are 50% width and expand to use any remaining space\n.#{$action-set-block-class}.#{$action-set-block-class}--row-triple\n  .#{$action-set-block-class}__action-button--ghost {\n  flex: 1 1 50%;\n}\n\n// For row-triple in large (non-ghost),\n// or any non-ghosts in extra large or 2xl,\n// or row-quadruple (non-ghost),\n// buttons are 25% width with a 2xl of 232px\n.#{$action-set-block-class}.#{c4p-settings.$carbon-prefix}--btn-set.#{$action-set-block-class}--row-triple.#{$action-set-block-class}--lg\n  .#{$action-set-block-class}__action-button:not(\n    .#{$action-set-block-class}__action-button--ghost\n  ),\n.#{$action-set-block-class}.#{c4p-settings.$carbon-prefix}--btn-set.#{$action-set-block-class}--xl\n  .#{$action-set-block-class}__action-button:not(\n    .#{$action-set-block-class}__action-button--ghost\n  ),\n.#{$action-set-block-class}.#{c4p-settings.$carbon-prefix}--btn-set.#{$action-set-block-class}--2xl\n  .#{$action-set-block-class}__action-button:not(\n    .#{$action-set-block-class}__action-button--ghost\n  ),\n.#{$action-set-block-class}.#{c4p-settings.$carbon-prefix}--btn-set.#{$action-set-block-class}--row-quadruple\n  .#{$action-set-block-class}__action-button:not(\n    .#{$action-set-block-class}__action-button--ghost\n  ) {\n  flex: 0 1 25%;\n  /* stylelint-disable-next-line function-no-unknown -- to-rem carbon replacement for rem */\n  max-inline-size: to-rem(232px);\n}\n\n.#{$action-set-block-class}.#{c4p-settings.$carbon-prefix}--btn-set.#{$action-set-block-class}--row-quadruple\n  .#{$action-set-block-class}__action-button--ghost {\n  flex: 1 1 25%;\n}\n\n.#{$action-set-block-class}\n  .#{$action-set-block-class}__action-button\n  .#{c4p-settings.$carbon-prefix}--inline-loading {\n  position: absolute;\n  inline-size: $spacing-07;\n  inset-block-start: 0;\n  inset-inline-end: 0;\n}\n","// Code generated by @carbon/themes. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use 'sass:map';\n@use '../config';\n@use '../theme';\n\n/// Internal helper for generating CSS Custom Properties\n@function _get($token) {\n  @if config.$use-fallback-value == false {\n    @return var(--#{config.$prefix}-#{$token});\n  } @else {\n    @return var(--#{config.$prefix}-#{$token}, #{theme.get($token)});\n  }\n}\n\n/// The CSS Custom Property for the `background` token\n$background: _get('background') !default;\n\n/// The CSS Custom Property for the `background-active` token\n$background-active: _get('background-active') !default;\n\n/// The CSS Custom Property for the `background-selected` token\n$background-selected: _get('background-selected') !default;\n\n/// The CSS Custom Property for the `background-selected-hover` token\n$background-selected-hover: _get('background-selected-hover') !default;\n\n/// The CSS Custom Property for the `background-hover` token\n$background-hover: _get('background-hover') !default;\n\n/// The CSS Custom Property for the `background-brand` token\n$background-brand: _get('background-brand') !default;\n\n/// The CSS Custom Property for the `background-inverse` token\n$background-inverse: _get('background-inverse') !default;\n\n/// The CSS Custom Property for the `background-inverse-hover` token\n$background-inverse-hover: _get('background-inverse-hover') !default;\n\n/// The CSS Custom Property for the `layer-01` token\n$layer-01: _get('layer-01') !default;\n\n/// The CSS Custom Property for the `layer-active-01` token\n$layer-active-01: _get('layer-active-01') !default;\n\n/// The CSS Custom Property for the `layer-background-01` token\n$layer-background-01: _get('layer-background-01') !default;\n\n/// The CSS Custom Property for the `layer-hover-01` token\n$layer-hover-01: _get('layer-hover-01') !default;\n\n/// The CSS Custom Property for the `layer-selected-01` token\n$layer-selected-01: _get('layer-selected-01') !default;\n\n/// The CSS Custom Property for the `layer-selected-hover-01` token\n$layer-selected-hover-01: _get('layer-selected-hover-01') !default;\n\n/// The CSS Custom Property for the `layer-02` token\n$layer-02: _get('layer-02') !default;\n\n/// The CSS Custom Property for the `layer-active-02` token\n$layer-active-02: _get('layer-active-02') !default;\n\n/// The CSS Custom Property for the `layer-background-02` token\n$layer-background-02: _get('layer-background-02') !default;\n\n/// The CSS Custom Property for the `layer-hover-02` token\n$layer-hover-02: _get('layer-hover-02') !default;\n\n/// The CSS Custom Property for the `layer-selected-02` token\n$layer-selected-02: _get('layer-selected-02') !default;\n\n/// The CSS Custom Property for the `layer-selected-hover-02` token\n$layer-selected-hover-02: _get('layer-selected-hover-02') !default;\n\n/// The CSS Custom Property for the `layer-03` token\n$layer-03: _get('layer-03') !default;\n\n/// The CSS Custom Property for the `layer-active-03` token\n$layer-active-03: _get('layer-active-03') !default;\n\n/// The CSS Custom Property for the `layer-background-03` token\n$layer-background-03: _get('layer-background-03') !default;\n\n/// The CSS Custom Property for the `layer-hover-03` token\n$layer-hover-03: _get('layer-hover-03') !default;\n\n/// The CSS Custom Property for the `layer-selected-03` token\n$layer-selected-03: _get('layer-selected-03') !default;\n\n/// The CSS Custom Property for the `layer-selected-hover-03` token\n$layer-selected-hover-03: _get('layer-selected-hover-03') !default;\n\n/// The CSS Custom Property for the `layer-selected-inverse` token\n$layer-selected-inverse: _get('layer-selected-inverse') !default;\n\n/// The CSS Custom Property for the `layer-selected-disabled` token\n$layer-selected-disabled: _get('layer-selected-disabled') !default;\n\n/// The CSS Custom Property for the `layer-accent-01` token\n$layer-accent-01: _get('layer-accent-01') !default;\n\n/// The CSS Custom Property for the `layer-accent-active-01` token\n$layer-accent-active-01: _get('layer-accent-active-01') !default;\n\n/// The CSS Custom Property for the `layer-accent-hover-01` token\n$layer-accent-hover-01: _get('layer-accent-hover-01') !default;\n\n/// The CSS Custom Property for the `layer-accent-02` token\n$layer-accent-02: _get('layer-accent-02') !default;\n\n/// The CSS Custom Property for the `layer-accent-active-02` token\n$layer-accent-active-02: _get('layer-accent-active-02') !default;\n\n/// The CSS Custom Property for the `layer-accent-hover-02` token\n$layer-accent-hover-02: _get('layer-accent-hover-02') !default;\n\n/// The CSS Custom Property for the `layer-accent-03` token\n$layer-accent-03: _get('layer-accent-03') !default;\n\n/// The CSS Custom Property for the `layer-accent-active-03` token\n$layer-accent-active-03: _get('layer-accent-active-03') !default;\n\n/// The CSS Custom Property for the `layer-accent-hover-03` token\n$layer-accent-hover-03: _get('layer-accent-hover-03') !default;\n\n/// The CSS Custom Property for the `field-01` token\n$field-01: _get('field-01') !default;\n\n/// The CSS Custom Property for the `field-hover-01` token\n$field-hover-01: _get('field-hover-01') !default;\n\n/// The CSS Custom Property for the `field-02` token\n$field-02: _get('field-02') !default;\n\n/// The CSS Custom Property for the `field-hover-02` token\n$field-hover-02: _get('field-hover-02') !default;\n\n/// The CSS Custom Property for the `field-03` token\n$field-03: _get('field-03') !default;\n\n/// The CSS Custom Property for the `field-hover-03` token\n$field-hover-03: _get('field-hover-03') !default;\n\n/// The CSS Custom Property for the `interactive` token\n$interactive: _get('interactive') !default;\n\n/// The CSS Custom Property for the `border-subtle-00` token\n$border-subtle-00: _get('border-subtle-00') !default;\n\n/// The CSS Custom Property for the `border-subtle-01` token\n$border-subtle-01: _get('border-subtle-01') !default;\n\n/// The CSS Custom Property for the `border-subtle-selected-01` token\n$border-subtle-selected-01: _get('border-subtle-selected-01') !default;\n\n/// The CSS Custom Property for the `border-subtle-02` token\n$border-subtle-02: _get('border-subtle-02') !default;\n\n/// The CSS Custom Property for the `border-subtle-selected-02` token\n$border-subtle-selected-02: _get('border-subtle-selected-02') !default;\n\n/// The CSS Custom Property for the `border-subtle-03` token\n$border-subtle-03: _get('border-subtle-03') !default;\n\n/// The CSS Custom Property for the `border-subtle-selected-03` token\n$border-subtle-selected-03: _get('border-subtle-selected-03') !default;\n\n/// The CSS Custom Property for the `border-strong-01` token\n$border-strong-01: _get('border-strong-01') !default;\n\n/// The CSS Custom Property for the `border-strong-02` token\n$border-strong-02: _get('border-strong-02') !default;\n\n/// The CSS Custom Property for the `border-strong-03` token\n$border-strong-03: _get('border-strong-03') !default;\n\n/// The CSS Custom Property for the `border-tile-01` token\n$border-tile-01: _get('border-tile-01') !default;\n\n/// The CSS Custom Property for the `border-tile-02` token\n$border-tile-02: _get('border-tile-02') !default;\n\n/// The CSS Custom Property for the `border-tile-03` token\n$border-tile-03: _get('border-tile-03') !default;\n\n/// The CSS Custom Property for the `border-inverse` token\n$border-inverse: _get('border-inverse') !default;\n\n/// The CSS Custom Property for the `border-interactive` token\n$border-interactive: _get('border-interactive') !default;\n\n/// The CSS Custom Property for the `border-disabled` token\n$border-disabled: _get('border-disabled') !default;\n\n/// The CSS Custom Property for the `text-primary` token\n$text-primary: _get('text-primary') !default;\n\n/// The CSS Custom Property for the `text-secondary` token\n$text-secondary: _get('text-secondary') !default;\n\n/// The CSS Custom Property for the `text-placeholder` token\n$text-placeholder: _get('text-placeholder') !default;\n\n/// The CSS Custom Property for the `text-helper` token\n$text-helper: _get('text-helper') !default;\n\n/// The CSS Custom Property for the `text-error` token\n$text-error: _get('text-error') !default;\n\n/// The CSS Custom Property for the `text-inverse` token\n$text-inverse: _get('text-inverse') !default;\n\n/// The CSS Custom Property for the `text-on-color` token\n$text-on-color: _get('text-on-color') !default;\n\n/// The CSS Custom Property for the `text-on-color-disabled` token\n$text-on-color-disabled: _get('text-on-color-disabled') !default;\n\n/// The CSS Custom Property for the `text-disabled` token\n$text-disabled: _get('text-disabled') !default;\n\n/// The CSS Custom Property for the `link-primary` token\n$link-primary: _get('link-primary') !default;\n\n/// The CSS Custom Property for the `link-primary-hover` token\n$link-primary-hover: _get('link-primary-hover') !default;\n\n/// The CSS Custom Property for the `link-secondary` token\n$link-secondary: _get('link-secondary') !default;\n\n/// The CSS Custom Property for the `link-inverse-visited` token\n$link-inverse-visited: _get('link-inverse-visited') !default;\n\n/// The CSS Custom Property for the `link-visited` token\n$link-visited: _get('link-visited') !default;\n\n/// The CSS Custom Property for the `link-inverse` token\n$link-inverse: _get('link-inverse') !default;\n\n/// The CSS Custom Property for the `link-inverse-active` token\n$link-inverse-active: _get('link-inverse-active') !default;\n\n/// The CSS Custom Property for the `link-inverse-hover` token\n$link-inverse-hover: _get('link-inverse-hover') !default;\n\n/// The CSS Custom Property for the `icon-primary` token\n$icon-primary: _get('icon-primary') !default;\n\n/// The CSS Custom Property for the `icon-secondary` token\n$icon-secondary: _get('icon-secondary') !default;\n\n/// The CSS Custom Property for the `icon-inverse` token\n$icon-inverse: _get('icon-inverse') !default;\n\n/// The CSS Custom Property for the `icon-on-color` token\n$icon-on-color: _get('icon-on-color') !default;\n\n/// The CSS Custom Property for the `icon-on-color-disabled` token\n$icon-on-color-disabled: _get('icon-on-color-disabled') !default;\n\n/// The CSS Custom Property for the `icon-disabled` token\n$icon-disabled: _get('icon-disabled') !default;\n\n/// The CSS Custom Property for the `icon-interactive` token\n$icon-interactive: _get('icon-interactive') !default;\n\n/// The CSS Custom Property for the `support-error` token\n$support-error: _get('support-error') !default;\n\n/// The CSS Custom Property for the `support-success` token\n$support-success: _get('support-success') !default;\n\n/// The CSS Custom Property for the `support-warning` token\n$support-warning: _get('support-warning') !default;\n\n/// The CSS Custom Property for the `support-info` token\n$support-info: _get('support-info') !default;\n\n/// The CSS Custom Property for the `support-error-inverse` token\n$support-error-inverse: _get('support-error-inverse') !default;\n\n/// The CSS Custom Property for the `support-success-inverse` token\n$support-success-inverse: _get('support-success-inverse') !default;\n\n/// The CSS Custom Property for the `support-warning-inverse` token\n$support-warning-inverse: _get('support-warning-inverse') !default;\n\n/// The CSS Custom Property for the `support-info-inverse` token\n$support-info-inverse: _get('support-info-inverse') !default;\n\n/// The CSS Custom Property for the `support-caution-major` token\n$support-caution-major: _get('support-caution-major') !default;\n\n/// The CSS Custom Property for the `support-caution-minor` token\n$support-caution-minor: _get('support-caution-minor') !default;\n\n/// The CSS Custom Property for the `support-caution-undefined` token\n$support-caution-undefined: _get('support-caution-undefined') !default;\n\n/// The CSS Custom Property for the `ai-popover-background` token\n$ai-popover-background: _get('ai-popover-background') !default;\n\n/// The CSS Custom Property for the `ai-popover-shadow-outer-01` token\n$ai-popover-shadow-outer-01: _get('ai-popover-shadow-outer-01') !default;\n\n/// The CSS Custom Property for the `ai-popover-shadow-outer-02` token\n$ai-popover-shadow-outer-02: _get('ai-popover-shadow-outer-02') !default;\n\n/// The CSS Custom Property for the `ai-inner-shadow` token\n$ai-inner-shadow: _get('ai-inner-shadow') !default;\n\n/// The CSS Custom Property for the `ai-aura-start-sm` token\n$ai-aura-start-sm: _get('ai-aura-start-sm') !default;\n\n/// The CSS Custom Property for the `ai-aura-start` token\n$ai-aura-start: _get('ai-aura-start') !default;\n\n/// The CSS Custom Property for the `ai-aura-end` token\n$ai-aura-end: _get('ai-aura-end') !default;\n\n/// The CSS Custom Property for the `ai-aura-hover-background` token\n$ai-aura-hover-background: _get('ai-aura-hover-background') !default;\n\n/// The CSS Custom Property for the `ai-aura-hover-start` token\n$ai-aura-hover-start: _get('ai-aura-hover-start') !default;\n\n/// The CSS Custom Property for the `ai-aura-hover-end` token\n$ai-aura-hover-end: _get('ai-aura-hover-end') !default;\n\n/// The CSS Custom Property for the `ai-border-strong` token\n$ai-border-strong: _get('ai-border-strong') !default;\n\n/// The CSS Custom Property for the `ai-border-start` token\n$ai-border-start: _get('ai-border-start') !default;\n\n/// The CSS Custom Property for the `ai-border-end` token\n$ai-border-end: _get('ai-border-end') !default;\n\n/// The CSS Custom Property for the `ai-drop-shadow` token\n$ai-drop-shadow: _get('ai-drop-shadow') !default;\n\n/// The CSS Custom Property for the `ai-skeleton-background` token\n$ai-skeleton-background: _get('ai-skeleton-background') !default;\n\n/// The CSS Custom Property for the `ai-skeleton-element-background` token\n$ai-skeleton-element-background: _get(\n  'ai-skeleton-element-background'\n) !default;\n\n/// The CSS Custom Property for the `ai-overlay` token\n$ai-overlay: _get('ai-overlay') !default;\n\n/// The CSS Custom Property for the `ai-popover-caret-center` token\n$ai-popover-caret-center: _get('ai-popover-caret-center') !default;\n\n/// The CSS Custom Property for the `ai-popover-caret-bottom` token\n$ai-popover-caret-bottom: _get('ai-popover-caret-bottom') !default;\n\n/// The CSS Custom Property for the `ai-popover-caret-bottom-background` token\n$ai-popover-caret-bottom-background: _get(\n  'ai-popover-caret-bottom-background'\n) !default;\n\n/// The CSS Custom Property for the `ai-popover-caret-bottom-background-actions` token\n$ai-popover-caret-bottom-background-actions: _get(\n  'ai-popover-caret-bottom-background-actions'\n) !default;\n\n/// The CSS Custom Property for the `chat-prompt-background` token\n$chat-prompt-background: _get('chat-prompt-background') !default;\n\n/// The CSS Custom Property for the `chat-prompt-border-start` token\n$chat-prompt-border-start: _get('chat-prompt-border-start') !default;\n\n/// The CSS Custom Property for the `chat-prompt-border-end` token\n$chat-prompt-border-end: _get('chat-prompt-border-end') !default;\n\n/// The CSS Custom Property for the `chat-bubble-user` token\n$chat-bubble-user: _get('chat-bubble-user') !default;\n\n/// The CSS Custom Property for the `chat-bubble-agent` token\n$chat-bubble-agent: _get('chat-bubble-agent') !default;\n\n/// The CSS Custom Property for the `chat-bubble-border` token\n$chat-bubble-border: _get('chat-bubble-border') !default;\n\n/// The CSS Custom Property for the `chat-avatar-bot` token\n$chat-avatar-bot: _get('chat-avatar-bot') !default;\n\n/// The CSS Custom Property for the `chat-avatar-agent` token\n$chat-avatar-agent: _get('chat-avatar-agent') !default;\n\n/// The CSS Custom Property for the `chat-avatar-user` token\n$chat-avatar-user: _get('chat-avatar-user') !default;\n\n/// The CSS Custom Property for the `chat-shell-background` token\n$chat-shell-background: _get('chat-shell-background') !default;\n\n/// The CSS Custom Property for the `chat-header-background` token\n$chat-header-background: _get('chat-header-background') !default;\n\n/// The CSS Custom Property for the `chat-button` token\n$chat-button: _get('chat-button') !default;\n\n/// The CSS Custom Property for the `chat-button-hover` token\n$chat-button-hover: _get('chat-button-hover') !default;\n\n/// The CSS Custom Property for the `chat-button-text-hover` token\n$chat-button-text-hover: _get('chat-button-text-hover') !default;\n\n/// The CSS Custom Property for the `chat-button-active` token\n$chat-button-active: _get('chat-button-active') !default;\n\n/// The CSS Custom Property for the `chat-button-selected` token\n$chat-button-selected: _get('chat-button-selected') !default;\n\n/// The CSS Custom Property for the `chat-button-text-selected` token\n$chat-button-text-selected: _get('chat-button-text-selected') !default;\n\n/// The CSS Custom Property for the `highlight` token\n$highlight: _get('highlight') !default;\n\n/// The CSS Custom Property for the `overlay` token\n$overlay: _get('overlay') !default;\n\n/// The CSS Custom Property for the `toggle-off` token\n$toggle-off: _get('toggle-off') !default;\n\n/// The CSS Custom Property for the `shadow` token\n$shadow: _get('shadow') !default;\n\n/// The CSS Custom Property for the `focus` token\n$focus: _get('focus') !default;\n\n/// The CSS Custom Property for the `focus-inset` token\n$focus-inset: _get('focus-inset') !default;\n\n/// The CSS Custom Property for the `focus-inverse` token\n$focus-inverse: _get('focus-inverse') !default;\n\n/// The CSS Custom Property for the `skeleton-background` token\n$skeleton-background: _get('skeleton-background') !default;\n\n/// The CSS Custom Property for the `skeleton-element` token\n$skeleton-element: _get('skeleton-element') !default;\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n// stylelint-disable number-max-precision\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@carbon/grid/scss/config' as gridconfig;\n@use '@carbon/grid/scss/breakpoint' as grid;\n@use 'prefix' as *;\n@use 'font-family';\n@use 'scale';\n\n/// @type Map\n/// @access public\n/// @deprecated\n/// @group @carbon/type\n$caption-01: (\n  font-size: scale.type-scale(1),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @deprecated\n/// @group @carbon/type\n$caption-02: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: scale.type-scale(1),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-02: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$legal-01: (\n  font-size: scale.type-scale(1),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$legal-02: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @deprecated\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: scale.type-scale(1),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @deprecated\n/// @group @carbon/type\n$helper-text-02: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-compact-01: $body-short-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.42857,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-01: $body-long-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: scale.type-scale(3),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-compact-02: $body-short-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: scale.type-scale(3),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-02: $body-long-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: font-family.font-family('mono'),\n  font-size: scale.type-scale(1),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.33333,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: font-family.font-family('mono'),\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.42857,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.42857,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: (\n  font-size: scale.type-scale(2),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.28572,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-compact-01: $productive-heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: scale.type-scale(3),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: (\n  font-size: scale.type-scale(3),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-compact-02: $productive-heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: scale.type-scale(5),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-03: $productive-heading-03 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: scale.type-scale(7),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-04: $productive-heading-04 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: scale.type-scale(8),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-05: $productive-heading-05 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-06: $productive-heading-06 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: scale.type-scale(12),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-07: $productive-heading-07 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: scale.type-scale(5),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: scale.type-scale(5),\n      line-height: 1.4,\n    ),\n    max: (\n      font-size: scale.type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-heading-03: $expressive-heading-03 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: scale.type-scale(7),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.28572,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: scale.type-scale(8),\n      line-height: 1.25,\n      font-weight: font-family.font-weight('regular'),\n    ),\n    max: (\n      font-size: scale.type-scale(8),\n      font-weight: font-family.font-weight('regular'),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-heading-04: $expressive-heading-04 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: scale.type-scale(8),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(9),\n      font-weight: font-family.font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: scale.type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: scale.type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: scale.type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-heading-05: $expressive-heading-05 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: scale.type-scale(8),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: scale.type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: scale.type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: scale.type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-heading-06: $expressive-heading-06 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: scale.type-scale(6),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: scale.type-scale(7),\n      line-height: 1.28572,\n    ),\n    max: (\n      font-size: scale.type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-paragraph-01: $expressive-paragraph-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-family: font-family.font-family('serif'),\n  font-size: scale.type-scale(5),\n  font-weight: font-family.font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(5),\n    ),\n    lg: (\n      font-size: scale.type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: scale.type-scale(7),\n      line-height: 1.28572,\n    ),\n    max: (\n      font-size: scale.type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-quotation-01: $quotation-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-family: font-family.font-family('serif'),\n  font-size: scale.type-scale(8),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: scale.type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: scale.type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: scale.type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-quotation-02: $quotation-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(10),\n    ),\n    lg: (\n      font-size: scale.type-scale(12),\n    ),\n    xlg: (\n      font-size: scale.type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: scale.type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-display-01: $display-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(10),\n    ),\n    lg: (\n      font-size: scale.type-scale(12),\n    ),\n    xlg: (\n      font-size: scale.type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: scale.type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-display-02: $display-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(12),\n      line-height: 1.18,\n    ),\n    lg: (\n      font-size: scale.type-scale(13),\n      line-height: 1.16,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: scale.type-scale(15),\n      line-height: 1.13,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: scale.type-scale(16),\n      line-height: 1.11,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-display-03: $display-03 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: scale.type-scale(10),\n  font-weight: font-family.font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: scale.type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: scale.type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: scale.type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: scale.type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$fluid-display-04: $display-04 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  caption-02: $caption-02,\n  label-01: $label-01,\n  label-02: $label-02,\n  helper-text-01: $helper-text-01,\n  helper-text-02: $helper-text-02,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n  // V11 Tokens\n  legal-01: $legal-01,\n  legal-02: $legal-02,\n  body-compact-01: $body-compact-01,\n  body-compact-02: $body-compact-02,\n  heading-compact-01: $heading-compact-01,\n  heading-compact-02: $heading-compact-02,\n  body-01: $body-01,\n  body-02: $body-02,\n  heading-03: $heading-03,\n  heading-04: $heading-04,\n  heading-05: $heading-05,\n  heading-06: $heading-06,\n  heading-07: $heading-07,\n  fluid-heading-03: $fluid-heading-03,\n  fluid-heading-04: $fluid-heading-04,\n  fluid-heading-05: $fluid-heading-05,\n  fluid-heading-06: $fluid-heading-06,\n  fluid-paragraph-01: $fluid-paragraph-01,\n  fluid-quotation-01: $fluid-quotation-01,\n  fluid-quotation-02: $fluid-quotation-02,\n  fluid-display-01: $fluid-display-01,\n  fluid-display-02: $fluid-display-02,\n  fluid-display-03: $fluid-display-03,\n  fluid-display-04: $fluid-display-04,\n) !default;\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return math.div($value, $value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: gridconfig.$grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map.remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map.get($type-styles, breakpoints) {\n    @include grid.breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: gridconfig.$grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map.get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map.get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map.remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map.get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map.get($type-styles, font-size);\n  $min-font-size: map.get($type-styles, font-size);\n  @if map.has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map.get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map.get($breakpoint, width);\n  $min-vw: map.get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: grid.breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map.has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: grid.breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map.get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map.get(\n      map.get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map.get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: gridconfig.$grid-breakpoints\n) {\n  @if not map.has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map.get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map.has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @include custom-properties($name, $token);\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-12: 6rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$spacing-13: 10rem !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/layout\n$spacing: (\n  spacing-01: $spacing-01,\n  spacing-02: $spacing-02,\n  spacing-03: $spacing-03,\n  spacing-04: $spacing-04,\n  spacing-05: $spacing-05,\n  spacing-06: $spacing-06,\n  spacing-07: $spacing-07,\n  spacing-08: $spacing-08,\n  spacing-09: $spacing-09,\n  spacing-10: $spacing-10,\n  spacing-11: $spacing-11,\n  spacing-12: $spacing-12,\n  spacing-13: $spacing-13,\n);\n","// stylelint-disable carbon/motion-duration-use, carbon/motion-easing-use\n\n//\n// Copyright IBM Corp. 2020, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n// Standard imports.\n@use '@carbon/styles/scss/theme' as *;\n@use '@carbon/styles/scss/colors' as *;\n@use '@carbon/styles/scss/spacing' as *;\n@use '@carbon/styles/scss/motion' as *;\n@use '@carbon/styles/scss/breakpoint' as *;\n@use '@carbon/styles/scss/type';\n@use '@carbon/styles/scss/utilities';\n@use '../../global/styles/project-settings' as *;\n@use '../../global/styles/mixins' as *;\n\n// Tearsheets use the following IBM Products components:\n// ActionSet\n@use '../ActionSet/action-set';\n\n$block-class: #{$pkg-prefix}--tearsheet;\n\n// stylelint-disable-next-line carbon/theme-use\n$motion-duration: $duration-moderate-02;\n\n@include block-wrap($block-class) {\n  &.#{$block-class} {\n    --overlay-color: #{$overlay};\n    --overlay-opacity: 1;\n\n    &::before {\n      position: absolute;\n      display: block;\n      background: var(--overlay-color);\n      content: '';\n      inset: 0;\n      opacity: var(--overlay-opacity);\n\n      transition:\n        background-color $motion-duration motion(exit, expressive),\n        opacity $motion-duration motion(exit, expressive);\n\n      @media (prefers-reduced-motion: reduce) {\n        transition: none;\n      }\n    }\n\n    &.#{$block-class}.#{$block-class} {\n      /* tearsheet uses --overlay-color and --overlay-opacity in ::before */\n      background: initial;\n    }\n\n    z-index: utilities.z('modal') + 1;\n    align-items: flex-end;\n    color: $text-primary;\n    transition:\n      visibility 0s linear $motion-duration,\n      background-color $motion-duration motion(exit, expressive),\n      opacity $motion-duration motion(exit, expressive);\n    --#{$block-class}--stacking-scale-factor-single: 0.95;\n    --#{$block-class}--stacking-scale-factor-double: 0.9;\n  }\n\n  &.is-visible {\n    z-index: utilities.z('modal');\n    align-items: flex-end;\n    transition:\n      visibility 0s linear,\n      background-color $motion-duration motion(entrance, expressive),\n      opacity $motion-duration motion(entrance, expressive);\n    @media (prefers-reduced-motion: reduce) {\n      transition: none;\n    }\n  }\n\n  &.#{$block-class}--stacked-1-of-2 {\n    --overlay-opacity: 0.67;\n\n    z-index: utilities.z('modal') - 1;\n  }\n\n  &.#{$block-class}--stacked-1-of-3 {\n    --overlay-opacity: 0.22;\n\n    z-index: utilities.z('modal') - 2;\n  }\n\n  &.#{$block-class}--stacked-2-of-3 {\n    --overlay-opacity: 0.5;\n\n    z-index: utilities.z('modal') - 1;\n  }\n\n  &.#{$block-class}--stacked-2-of-2,\n  &.#{$block-class}--stacked-3-of-3 {\n    --overlay-opacity: 0.5;\n  }\n\n  .#{$block-class}__container {\n    block-size: 100%;\n    inset-block-start: auto;\n    max-block-size: calc(100% - #{$spacing-09});\n    // we want the enter/leave animation to run up most of the height of the\n    // viewport, capped at 500px to set an upper limit on the movement speed\n    // For the reason for calc() see https://github.com/sass/sass/issues/2849\n    // and https://github.com/sass/node-sass/issues/2815.\n    // stylelint-disable-next-line carbon/layout-use\n    transform: translate3d(0, calc(min(95vh, 500px)), 0);\n  }\n\n  &.#{$block-class}.#{$block-class}.#{$block-class}.#{$block-class}--has-slug\n    .#{$block-class}__container,\n  &.#{$block-class}.#{$block-class}.#{$block-class}.#{$block-class}--has-ai-label\n    .#{$block-class}__container {\n    border: 1px solid transparent;\n\n    /* override carbon ai removing background gradient */\n    background:\n      linear-gradient(to top, var(--cds-layer), var(--cds-layer)) padding-box,\n      linear-gradient(\n          to bottom,\n          var(--cds-ai-border-start, #78a9ff),\n          var(--cds-ai-border-end, #d0e2ff)\n        )\n        border-box,\n      linear-gradient(to top, var(--cds-layer), var(--cds-layer)) border-box;\n    border-block-end: 0;\n    box-shadow: 0 4px 10px 2px $ai-drop-shadow;\n  }\n\n  // extra specificity to ensure this transition overrides the carbon default\n  &.#{$block-class}.#{$block-class} .#{$block-class}__container {\n    transition:\n      transform $motion-duration motion(entrance, expressive),\n      max-height $motion-duration motion(entrance, expressive);\n  }\n\n  &.#{$block-class}--stacked-1-of-2\n    .#{$block-class}__container:not(\n      .#{$block-class}__container--mixed-size-stacking\n    ),\n  &.#{$block-class}--stacked-2-of-3\n    .#{$block-class}__container:not(\n      .#{$block-class}__container--mixed-size-stacking\n    ) {\n    max-block-size: calc(100% - #{$spacing-09} + #{$spacing-05});\n  }\n\n  &.#{$block-class}--stacked-1-of-3\n    .#{$block-class}__container:not(\n      .#{$block-class}__container--mixed-size-stacking\n    ) {\n    max-block-size: calc(100% - #{$spacing-09} + (2 * #{$spacing-05}));\n  }\n\n  .#{$block-class}__container--lower {\n    max-block-size: calc(100% - (#{$spacing-09} + #{$spacing-08}));\n  }\n\n  &.#{$block-class}--stacked-1-of-2\n    .#{$block-class}__container--lower:not(\n      .#{$block-class}__container--mixed-size-stacking\n    ),\n  &.#{$block-class}--stacked-2-of-3\n    .#{$block-class}__container--lower:not(\n      .#{$block-class}__container--mixed-size-stacking\n    ) {\n    max-block-size: calc(\n      100% - (#{$spacing-09} + #{$spacing-08}) + #{$spacing-05}\n    );\n  }\n\n  &.#{$block-class}--stacked-1-of-3\n    .#{$block-class}__container--lower:not(\n      .#{$block-class}__container--mixed-size-stacking\n    ) {\n    max-block-size: calc(\n      100% - (#{$spacing-09} + #{$spacing-08}) + (2 * #{$spacing-05})\n    );\n  }\n\n  &.#{$block-class}--wide .#{$block-class}__container {\n    inline-size: 100%;\n  }\n\n  &.#{$block-class}--wide\n    .#{$pkg-prefix}--action-set\n    .#{$pkg-prefix}--action-set__action-button.#{$pkg-prefix}--action-set__action-button--expressive {\n    block-size: $spacing-11;\n  }\n\n  @include breakpoint(md) {\n    &.#{$block-class}--wide .#{$block-class}__container {\n      inline-size: calc(100% - (2 * #{$spacing-10}));\n    }\n  }\n\n  &.#{$block-class}--stacked-1-of-2.is-visible .#{$block-class}__container,\n  &.#{$block-class}--stacked-2-of-3.is-visible .#{$block-class}__container {\n    transform: scale(var(--#{$block-class}--stacking-scale-factor-single));\n  }\n\n  &.#{$block-class}--stacked-1-of-3.is-visible .#{$block-class}__container {\n    transform: scale(var(--#{$block-class}--stacking-scale-factor-double));\n  }\n\n  &.#{$block-class}--wide .#{$block-class}__header {\n    padding: $spacing-06 $spacing-07;\n    margin: 0;\n    background-color: $layer;\n    border-block-end: 1px solid $border-subtle-01;\n  }\n\n  &.#{$block-class}--narrow .#{$block-class}__header {\n    padding: $spacing-05;\n    margin: 0;\n    background-color: $layer;\n    border-block-end: 1px solid $border-subtle-01;\n  }\n\n  .#{$block-class}__header-content {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .#{$block-class}__header-fields {\n    flex: 1 1 100%;\n  }\n\n  .#{$block-class}__header-actions {\n    flex: 0 0 auto;\n    padding-inline-start: $spacing-06;\n  }\n\n  // buttons inside button sets in the header action area have 8px gap\n  .#{$block-class}__header-actions\n    .#{$carbon-prefix}--btn-set\n    .#{$carbon-prefix}--btn:not(:first-of-type) {\n    margin-inline-start: $spacing-03;\n  }\n\n  .#{$block-class}__header--no-close-icon {\n    display: none;\n  }\n\n  &.#{$block-class}--wide\n    .#{$carbon-prefix}--modal-header__heading.#{$block-class}__heading {\n    @include type.type-style('heading-04');\n  }\n\n  .#{$block-class}__header-description {\n    display: inline-flex;\n    margin-block-start: $spacing-05;\n    max-inline-size: 100%;\n\n    @include type.type-style('body-compact-01');\n\n    @include breakpoint-up('md') {\n      max-inline-size: 60%;\n    }\n  }\n\n  &.#{$block-class}--narrow .#{$block-class}__header-description {\n    margin-block-start: $spacing-03;\n  }\n\n  .#{$block-class}__header-navigation {\n    margin: $spacing-04 0 0;\n  }\n\n  &.#{$block-class}--wide\n    .#{$block-class}__header.#{$block-class}__header--with-nav {\n    padding: $spacing-06 $spacing-07 0;\n  }\n\n  &.#{$block-class}--wide\n    .#{$block-class}__header.#{$block-class}__header--with-close-icon,\n  &.#{$block-class}--has-slug .#{$block-class}__header.#{$block-class}__header,\n  &.#{$block-class}--has-ai-label\n    .#{$block-class}__header.#{$block-class}__header {\n    padding-inline-end: $spacing-11;\n  }\n\n  &.#{$block-class}--wide.#{$block-class}--has-slug\n    .#{$block-class}__header.#{$block-class}__header--with-close-icon,\n  &.#{$block-class}--wide.#{$block-class}--has-ai-label\n    .#{$block-class}__header.#{$block-class}__header--with-close-icon {\n    /* spacing 11 plus additional space for slug/close */\n    /* stylelint-disable-next-line carbon/layout-use */\n    padding-inline-end: calc(#{$spacing-11 + $spacing-09});\n  }\n\n  &.#{$block-class}--narrow .#{$block-class}__header-description {\n    max-inline-size: 80%;\n  }\n\n  .#{$block-class}__header-navigation {\n    margin: $spacing-04 0 0;\n  }\n\n  &.#{$block-class} .#{$block-class}__body {\n    display: flex;\n    flex-direction: row;\n    padding: 0;\n    margin: 0;\n  }\n\n  .#{$block-class}__resize-detector {\n    block-size: 0;\n    inline-size: 100%;\n  }\n\n  .#{$block-class}__influencer {\n    flex: 0 0 257px; // influencer width 256px plus 1px border\n    border-inline-end: 1px solid $border-subtle-01;\n    overflow-y: auto;\n    @supports (overflow-block: auto) {\n      overflow-block: auto;\n    }\n\n    // the normal 80% content width inside modals should not apply to influencer content\n    // apply the class again for higher specificity\n    &.#{$block-class}__influencer p {\n      padding-inline-end: 0;\n    }\n  }\n\n  @include breakpoint-down(md) {\n    .#{$block-class}__container {\n      max-block-size: 100%;\n    }\n\n    .#{$block-class}__influencer {\n      flex-basis: auto;\n    }\n  }\n\n  .#{$block-class}__influencer--wide {\n    flex-basis: 321px; // influencer width 320px plus 1px border\n  }\n\n  .#{$block-class}__right {\n    display: grid;\n    flex-grow: 1;\n    grid-template-columns: 100%;\n    grid-template-rows: 1fr auto;\n  }\n\n  .#{$block-class}__main {\n    display: flex;\n    flex-direction: row;\n    background-color: $background;\n    grid-column: 1 / -1;\n    grid-row: 1 / -1;\n  }\n\n  &.#{$block-class}--narrow .#{$block-class}__main {\n    background-color: $layer;\n  }\n\n  .#{$block-class}__main .#{$block-class}__influencer {\n    border-inline-end: none;\n    border-inline-start: 1px solid $border-subtle-01;\n  }\n\n  .#{$block-class}__content {\n    overflow: auto;\n    flex-grow: 1;\n  }\n\n  &.#{$block-class}--has-slug .#{$block-class}__content,\n  &.#{$block-class}--has-ai-label .#{$block-class}__content {\n    @include utilities.ai-popover-gradient('default', 0);\n\n    box-shadow: inset 0 -80px 70px -65px $ai-inner-shadow;\n  }\n\n  &.#{$block-class}--wide .#{$block-class}__content {\n    // Specific to the Tearsheet *and* radio buttons,\n    // `readOnly` styling is not applying a grey outline.\n    .#{$carbon-prefix}--radio-button[readonly]\n      + .#{$carbon-prefix}--radio-button__label\n      .#{$carbon-prefix}--radio-button__appearance {\n      border-color: $icon-disabled;\n    }\n\n    .#{$carbon-prefix}--select--inline .#{$carbon-prefix}--select-input {\n      background-color: transparent;\n    }\n\n    // and restore the 'light' prop in case light fields are wanted\n    .#{$carbon-prefix}--text-input--light,\n    .#{$carbon-prefix}--text-area--light,\n    .#{$carbon-prefix}--search--light .#{$carbon-prefix}--search-input,\n    .#{$carbon-prefix}--select--light .#{$carbon-prefix}--select-input,\n    .#{$carbon-prefix}--dropdown--light,\n    .#{$carbon-prefix}--dropdown--light .#{$carbon-prefix}--dropdown-list,\n    /* stylelint-disable-next-line prettier/prettier */\n    .#{$carbon-prefix}--number--light input[type='number'],\n    .#{$carbon-prefix}--date-picker--light\n      .#{$carbon-prefix}--date-picker__input {\n      background-color: $field-02;\n    }\n  }\n\n  .#{$block-class}__button-container {\n    grid-column: 1 / -1;\n    grid-row: -1 / -1;\n    overflow-x: auto;\n    @supports (overflow-inline: auto) {\n      /* stylelint-disable-next-line declaration-property-value-disallowed-list */\n      overflow-inline: auto;\n    }\n  }\n\n  .#{$block-class}__buttons {\n    display: inline-flex;\n    border-block-start: 1px solid $border-subtle-01;\n    min-inline-size: 100%;\n  }\n\n  &.#{$block-class}--wide .#{$block-class}__buttons {\n    background: $background;\n  }\n\n  &.#{$block-class}--has-slug,\n  &.#{$block-class}--has-ai-label {\n    --overlay-color: #{$ai-overlay};\n  }\n\n  &.#{$block-class}--has-slug:not(.#{$block-class}--has-close)\n    .#{$carbon-prefix}--slug,\n  &.#{$block-class}--has-ai-label:not(.#{$block-class}--has-close)\n    .#{$carbon-prefix}--slug {\n    inset-inline-end: 0;\n    /* stylelint-disable-next-line carbon/layout-use */\n    margin-block: 6px;\n    margin-inline-end: $spacing-05;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@carbon/layout/scss/convert';\n@use 'config' as *;\n\n/// Provide a map and index, and get back the relevant key value\n/// @access public\n/// @param {Map} $map - Map\n/// @param {Integer} $index - Key chain\n/// @return {String} Desired value\n/// @group @carbon/layout\n@function -key-by-index($map, $index) {\n  $keys: map.keys($map);\n  @return list.nth($keys, $index);\n}\n\n/// Get the value of the next breakpoint, or null for the last breakpoint\n/// @param {String} $name - The name of the breakpoint\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @param {List} $breakpoint-names [map-keys($breakpoints)] - A list of names from the `$breakpoints` map\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function breakpoint-next(\n  $name,\n  $breakpoints: $grid-breakpoints,\n  $breakpoint-names: map.keys($breakpoints)\n) {\n  $n: list.index($breakpoint-names, $name);\n  @if $n != null and $n < list.length($breakpoint-names) {\n    @return list.nth($breakpoint-names, $n + 1);\n  }\n  @return null;\n}\n\n/// Get the value of the previous breakpoint, or null for the first breakpoint\n/// @param {String} $name - The name of the breakpoint\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @param {List} $breakpoint-names [map-keys($breakpoints)] - A list of names from the `$breakpoints` map\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function breakpoint-prev(\n  $name,\n  $breakpoints: $grid-breakpoints,\n  $breakpoint-names: map.keys($breakpoints)\n) {\n  $n: list.index($breakpoint-names, $name);\n  @if $n != null and $n > 1 {\n    @return list.nth($breakpoint-names, $n - 1);\n  }\n  @return null;\n}\n\n/// Check to see if the given breakpoint name\n/// @param {String} $name - The name of the breakpoint\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @return {Bool}\n/// @access public\n/// @group @carbon/layout\n@function is-smallest-breakpoint($name, $breakpoints: $grid-breakpoints) {\n  @return list.index(map.keys($breakpoints), $name) == 1;\n}\n\n/// Returns the largest breakpoint name\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function largest-breakpoint-name($breakpoints: $grid-breakpoints) {\n  $total-breakpoints: list.length($breakpoints);\n  @return -key-by-index($breakpoints, $total-breakpoints);\n}\n\n/// Get the infix for a given breakpoint in a list of breakpoints. Useful for generating the size part in a selector, for example: `.prefix--col-sm-2`.\n/// @param {String} $name - The name of the breakpoint\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function breakpoint-infix($name) {\n  @return '-#{$name}';\n}\n\n/// Generate a media query from the width of the given breakpoint to infinity\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  @if meta.type-of($name) == 'number' {\n    @media (min-width: $name) {\n      @content;\n    }\n  } @else if map.has-key($breakpoints, $name) {\n    $breakpoint: map.get($breakpoints, $name);\n    $width: map.get($breakpoint, width);\n    @if is-smallest-breakpoint($name, $breakpoints) {\n      @content;\n    } @else {\n      @media (min-width: $width) {\n        @content;\n      }\n    }\n  } @else {\n    @error 'Unable to find a breakpoint with name `#{$name}`. Expected one of: (#{map.keys($breakpoints)})';\n  }\n}\n\n/// Generate a media query for the maximum width of the given styles\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  @if meta.type-of($name) == 'number' {\n    @media (max-width: $name) {\n      @content;\n    }\n  } @else if map.has-key($breakpoints, $name) {\n    // We borrow this logic from bootstrap for specifying the value of the\n    // max-width. The maximum width is calculated by finding the breakpoint and\n    // subtracting .02 from its value. This value is used instead of .01 to\n    // avoid rounding issues in Safari\n    // https://github.com/twbs/bootstrap/blob/c5b1919deaf5393fcca9e9b9d7ce9c338160d99d/scss/mixins/_breakpoints.scss#L34-L46\n    $breakpoint: map.get($breakpoints, $name);\n    $width: map.get($breakpoint, width) - 0.02;\n    @media (max-width: $width) {\n      @content;\n    }\n  } @else {\n    @error 'Unable to find a breakpoint with name `#{$name}`. Expected one of: (#{map.keys($breakpoints)})';\n  }\n}\n\n/// Generate a media query for the range between the lower and upper breakpoints\n/// @param {String | Number} $lower\n/// @param {String | Number} $upper\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $is-number-lower: meta.type-of($lower) == 'number';\n  $is-number-upper: meta.type-of($upper) == 'number';\n  $min: if($is-number-lower, $lower, map.get($breakpoints, $lower));\n  $max: if($is-number-upper, $upper, map.get($breakpoints, $upper));\n\n  @if $min and $max {\n    $min-width: if(not $is-number-lower and $min, map.get($min, width), $min);\n    $max-width: if(not $is-number-upper and $max, map.get($max, width), $max);\n    @media (min-width: $min-width) and (max-width: $max-width) {\n      @content;\n    }\n  } @else if $min != null and $max == null {\n    @include breakpoint-up($lower) {\n      @content;\n    }\n  } @else if $min == null and $max != null {\n    @include breakpoint-down($upper) {\n      @content;\n    }\n  } @else {\n    @error 'Unable to find a breakpoint to satisfy: (#{$lower},#{$upper}). Expected both to be one of (#{map.keys($breakpoints)}).';\n  }\n}\n\n/// Generate media query for the largest breakpoint\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin largest-breakpoint($breakpoints: $grid-breakpoints) {\n  @include breakpoint(largest-breakpoint-name()) {\n    @content;\n  }\n}\n\n/// Generate a media query for a given breakpoint\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin breakpoint($name, $breakpoints: $grid-breakpoints) {\n  @include breakpoint-up($name, $breakpoints) {\n    @content;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use '../config' as *;\n@use '@carbon/themes/scss/config' with (\n  $prefix: $prefix\n);\n@use '../compat/themes' as compat;\n@use '../themes';\n\n@forward '@carbon/themes/scss/theme' with (\n  $fallback: themes.$white !default,\n  $theme: compat.$white !default\n);\n@forward '@carbon/themes/scss/tokens';\n\n@use '@carbon/themes/scss/tokens';\n@use '@carbon/themes/scss/theme';\n@use '../utilities/custom-property';\n\n// Layer sets\n$layer: custom-property.get-var('layer');\n$layer-active: custom-property.get-var('layer-active');\n$layer-background: custom-property.get-var('layer-background');\n$layer-hover: custom-property.get-var('layer-hover');\n$layer-selected: custom-property.get-var('layer-selected');\n$layer-selected-hover: custom-property.get-var('layer-selected-hover');\n$layer-accent: custom-property.get-var('layer-accent');\n$layer-accent-hover: custom-property.get-var('layer-accent-hover');\n$layer-accent-active: custom-property.get-var('layer-accent-active');\n\n$field: custom-property.get-var('field');\n$field-hover: custom-property.get-var('field-hover');\n\n$border-subtle: custom-property.get-var('border-subtle');\n$border-subtle-selected: custom-property.get-var('border-subtle-selected');\n$border-strong: custom-property.get-var('border-strong');\n$border-tile: custom-property.get-var('border-tile');\n","//\n// Copyright IBM Corp. 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use '../theme';\n@use './custom-property';\n\n/// Experimental - name and structure subject to change. Use at your own risk!\n/// Adds AI gradient styles to a component\n/// @access private\n/// @param {String} $direction  - Direction of gradient from: `left`, `right`, `top`, and `bottom`\n/// @param {Number} $span - Percentage span of gradient with regards to parent component\n/// @example @include ai-gradient('right', '33%');\n/// @group utilities\n@mixin ai-gradient($direction: 'bottom', $span: 50%) {\n  $deg: 0;\n  @if $direction == 'bottom' {\n    $deg: 0deg;\n  } @else if $direction == 'left' {\n    $deg: 90deg;\n  } @else if $direction == 'top' {\n    $deg: 180deg;\n  } @else if $direction == 'right' {\n    $deg: 270deg;\n  }\n\n  background-image: linear-gradient(\n    $deg,\n    theme.$ai-aura-start-sm 0%,\n    15%,\n    theme.$ai-aura-end $span,\n    transparent 100%\n  );\n\n  border-block-end-color: theme.$ai-border-strong;\n}\n\n@mixin ai-table-gradient($type: 'default', $span: 50%) {\n  @if $type == 'hover' {\n    background: linear-gradient(\n        to right,\n        theme.$ai-aura-hover-start 0%,\n        15%,\n        theme.$ai-aura-hover-end 50%\n      ),\n      theme.$ai-aura-hover-background;\n  } @else if $type == 'selected' {\n    background: linear-gradient(\n        to right,\n        theme.$ai-aura-start-sm 0%,\n        theme.$ai-aura-end 50%,\n        transparent 50%\n      ),\n      theme.$layer-selected;\n  } @else {\n    background: linear-gradient(\n      to right,\n      theme.$ai-aura-start-sm 0%,\n      theme.$ai-aura-end $span,\n      transparent 50%\n    );\n  }\n}\n\n/// Experimental - name and structure subject to change. Use at your own risk!\n/// Adds callout gradient styles to a component\n/// @access private\n/// @example @include ai-popover-gradient();\n/// @param {String} $type  - Type of gradient, either 'default', 'selected' or 'hover'\n/// @param {Number} $offset  - specify a pixel offset the callout should start from the bottom\n/// @param {String} $background  - specify the token to be used as the background\n/// @group utilities\n@mixin ai-popover-gradient(\n  $type: 'default',\n  $offset: 0,\n  $background: 'ai-popover-background'\n) {\n  $start: 0%;\n  @if $offset != 0 {\n    $start: calc(0% + #{$offset});\n  }\n\n  $background: custom-property.get-var(\n    #{$background},\n    theme.$ai-popover-background\n  );\n\n  @if $type == 'hover' {\n    background:\n      linear-gradient(\n          to top,\n          theme.$ai-aura-hover-start $start,\n          15%,\n          theme.$ai-aura-hover-end 50%\n        )\n        padding-box,\n      linear-gradient(\n          to top,\n          theme.$ai-aura-hover-background,\n          theme.$ai-aura-hover-background\n        )\n        padding-box,\n      linear-gradient(to bottom, theme.$ai-border-start, theme.$ai-border-end)\n        border-box,\n      // Needed to underlay the transparent border\n      linear-gradient(\n          to top,\n          theme.$ai-aura-hover-background,\n          theme.$ai-aura-hover-background\n        )\n        border-box;\n  } @else if $type == 'selected' {\n    background:\n      linear-gradient(\n          to top,\n          theme.$ai-aura-start $start,\n          15%,\n          theme.$ai-aura-end 50%\n        )\n        padding-box,\n      linear-gradient(to top, theme.$layer, theme.$layer) padding-box,\n      linear-gradient(to bottom, theme.$border-inverse, theme.$border-inverse)\n        border-box,\n      // Needed to underlay the transparent border\n      linear-gradient(to top, theme.$layer, theme.$layer)\n        border-box;\n  } @else {\n    background:\n      linear-gradient(\n          to top,\n          $background $start,\n          theme.$ai-aura-start $start,\n          15%,\n          theme.$ai-aura-end 50%\n        )\n        padding-box,\n      linear-gradient(to top, $background, $background) padding-box,\n      linear-gradient(to bottom, theme.$ai-border-start, theme.$ai-border-end)\n        border-box,\n      // Needed to underlay the transparent border\n      linear-gradient(to top, $background, $background)\n        border-box;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use 'sass:map';\n@use 'sass:meta';\n@use './config';\n@use './themes';\n@use './theme';\n// Inline themes depend on layer styles to property reset the layer level\n@use './layer/layer-tokens';\n@use './utilities/component-tokens';\n@use './utilities/custom-property';\n@use './components/button/tokens' as button;\n@use './components/notification/tokens' as notification;\n@use './components/tag/tokens' as tag;\n@use './components/icon-indicator/tokens' as icon-indicator;\n@use './components/content-switcher/tokens' as content-switcher;\n\n/// Specify a Map of zones where the key will be used as part of the selector\n/// and the value will be a map used to emit CSS Custom Properties for all color\n/// values\n$zones: (\n  white: themes.$white,\n  g10: themes.$g10,\n  g90: themes.$g90,\n  g100: themes.$g100,\n) !default;\n\n$-components: (\n  button.$button-tokens,\n  notification.$notification-tokens,\n  tag.$tag-tokens,\n  icon-indicator.$status-tokens,\n  content-switcher.$content-switcher-tokens\n);\n\n@each $name, $theme in $zones {\n  .#{config.$prefix}--#{'' + $name} {\n    background-color: custom-property.get-var('background');\n    color: custom-property.get-var('text-primary');\n\n    @each $key, $value in $theme {\n      @if meta.type-of($value) == color {\n        @include custom-property.declaration($key, $value);\n      }\n    }\n\n    // Note: we need to re-emit the contextual layer tokens as part of the theme\n    // mixin. Otherwise, the layer tokens are defined at the :root level and will\n    // not pick up the theme-specific, or zone-specific, value from the first\n    // layer.\n    //\n    // For example, in this situation:\n    //\n    // ```\n    // :root {\n    //   --layer-one: #000000;\n    //   --layer: var(--layer-one);\n    // }\n    // ```\n    //\n    // This will always evaluate to the value of `--layer-one` at the `:root`\n    // selector, even if `--layer-one` is redefined layer on in the cascade.\n    //\n    // ```\n    // .zone {\n    //   --layer-one: #ffffff;\n    // }\n    // ```\n    //\n    // Even though you would expect `--layer` to be redefined, it will keep the\n    // value defined at the `:root` level.\n    //\n    // @see https://github.com/carbon-design-system/carbon/issues/11138\n    @include layer-tokens.emit-layer-tokens(1);\n\n    @each $group in $-components {\n      @each $key, $value in $group {\n        @if meta.type-of($value) == map {\n          $fallback: map.get($value, fallback);\n          $theme-values: map.get($value, values);\n\n          @each $theme-value in $theme-values {\n            $value: map.get($theme-value, value);\n\n            @if theme.matches(map.get($theme-value, theme), $theme) and\n              meta.type-of($value) ==\n              color\n            {\n              @include custom-property.declaration($key, $value);\n            }\n          }\n        } @else if meta.type-of($value) == color {\n          @include custom-property.declaration($key, $value);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright IBM Corp. 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@use '@carbon/react/scss/type' as *;\n@use '@carbon/react/scss/spacing' as *;\n@use '@carbon/react/scss/colors' as *;\n@use '@carbon/styles/scss/theme' as carbontheme;\n@use '@carbon/styles/scss/themes' as carbonthemes;\n@use '@carbon/styles/scss/breakpoint' as *;\n@use '@carbon/styles/scss/utilities';\n@use '@carbon/ibm-products/scss/config' as config;\n\n$prefix: 'clabs--whats-new' !default;\n\n.#{$prefix}__bubble {\n  position: fixed;\n  z-index: 10000;\n  display: none;\n  padding: $spacing-05;\n  border-radius: $spacing-01;\n  background-color: carbontheme.$layer;\n  color: carbontheme.$text-primary;\n  font-weight: bold;\n  inline-size: max-content;\n  inset-block-start: 0;\n  inset-inline-start: 0;\n  pointer-events: none;\n}\n\n.#{$prefix}__bubble-hidden {\n  display: none;\n}\n\n.#{$prefix}__bubble-open {\n  display: grid;\n  pointer-events: all;\n}\n\n.#{$prefix}__bubble-drop-shadow {\n  filter: drop-shadow(0 $spacing-01 $spacing-01 rgba(0, 0, 0, 0.2));\n}\n\n.#{$prefix}__bubble__arrow {\n  position: absolute;\n  z-index: 10010;\n  background: carbontheme.$layer;\n  block-size: $spacing-04;\n  inline-size: $spacing-04;\n  transform: rotate(45deg);\n}\n\n.#{$prefix}__bubble__header {\n  z-index: 10020;\n  display: flex;\n  justify-content: flex-end;\n  margin-block-start: -$spacing-05;\n  margin-inline: -$spacing-05;\n}\n","/**\n * Copyright IBM Corp. 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@use '@carbon/react/scss/type' as *;\n@use '@carbon/react/scss/spacing' as *;\n@use '@carbon/react/scss/colors' as *;\n@use '@carbon/react/scss/theme' as *;\n@use '@carbon/styles/scss/breakpoint' as *;\n\n$prefix: 'clabs--whats-new' !default;\n\n.#{$prefix}__toc-list {\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  min-inline-size: 10rem;\n}\n\n.#{$prefix}__toc-item a {\n  display: inline-block;\n  border-inline-start: 0.25rem solid var(--cds-border-subtle-01, #c6c6c6);\n  color: var(--cds-text-secondary, #525252);\n  font-size: var(--cds-body-02-font-size, 1rem);\n  font-weight: var(--cds-body-02-font-weight, 400);\n  inline-size: 100%;\n  letter-spacing: var(--cds-body-02-letter-spacing, 0);\n  line-height: var(--cds-body-02-line-height, 1.5);\n  padding-block: 0.75rem;\n  padding-inline-start: 0.75rem;\n  text-decoration: none;\n  transition: border 400ms ease-out;\n}\n\n.#{$prefix}__toc-item-active a {\n  border-inline-start-color: var(--cds-border-interactive, #0f62fe);\n  color: var(--cds-text-primary, #161616);\n}\n\n.#{$prefix}__toc-sections {\n  display: flex;\n  flex-direction: column;\n  block-size: 100%;\n  overflow-y: auto;\n  overscroll-behavior-y: contain;\n  scroll-snap-type: y mandatory;\n}\n","/**\n * Copyright IBM Corp. 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@use '@carbon/react/scss/type' as *;\n@use '@carbon/react/scss/spacing' as *;\n@use '@carbon/react/scss/colors' as *;\n@use '@carbon/react/scss/theme' as *;\n@use '@carbon/styles/scss/breakpoint' as *;\n@use '@carbon/styles/scss/utilities/convert' as convert;\n\n$prefix: 'clabs--whats-new' !default;\n$animateTime: 0.25s;\n\n.#{$prefix}__view-stack {\n  min-block-size: convert.to-rem(256px);\n  min-inline-size: convert.to-rem(256px);\n}\n\n.#{$prefix}__view-stack ul {\n  position: relative;\n  overflow: hidden;\n  min-block-size: 100%;\n  min-inline-size: 100%;\n}\n\n.#{$prefix}__view {\n  position: absolute;\n  z-index: 80;\n  overflow: hidden auto;\n  block-size: 100%;\n  inline-size: 100%;\n  inset-inline-start: 100%;\n  transform: translateX(0);\n  transition: transform $animateTime cubic-bezier(0.2, 0, 0.38, 0.9);\n}\n\n.#{$prefix}__view-active {\n  z-index: 100;\n  transform: translateX(-100%);\n}\n\n.#{$prefix}__view-in-stack {\n  z-index: 90;\n  transform: translateX(-200%);\n}\n\n@keyframes out-to-active {\n  from {\n    transform: translateX(0);\n  }\n\n  to {\n    transform: translateX(-100%);\n  }\n}\n\n@keyframes active-to-out {\n  from {\n    transform: translateX(-100%);\n  }\n\n  to {\n    transform: translateX(0);\n  }\n}\n\n.#{$prefix}__view-recycle-in {\n  z-index: 100;\n  animation: out-to-active $animateTime cubic-bezier(0.2, 0, 0.38, 0.9) forwards;\n}\n\n.#{$prefix}__view-recycle-out {\n  z-index: 90;\n  animation: active-to-out $animateTime cubic-bezier(0.2, 0, 0.38, 0.9) forwards;\n}\n\n.#{$prefix}__view-stack-announcer {\n  position: absolute;\n  overflow: hidden;\n  padding: 0;\n  border: 0;\n  margin: convert.to-rem(-1px);\n  block-size: convert.to-rem(1px);\n  clip: rect(0 0 0 0);\n  -webkit-clip-path: inset(50%);\n  clip-path: inset(50%);\n  inline-size: convert.to-rem(1px);\n  white-space: nowrap;\n}\n","/* stylelint-disable declaration-no-important */\n/**\n * Copyright IBM Corp. 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@use '@carbon/react/scss/zone';\n@use '@carbon/styles/scss/themes';\n@use '@carbon/react/scss/theme' as *;\n@use '@carbon/react/scss/type' as *;\n@use '@carbon/react/scss/spacing' as *;\n@use '@carbon/react/scss/colors' as *;\n@use '@carbon/styles/scss/breakpoint' as *;\n@use 'styles/bubble';\n@use 'styles/toc';\n@use 'styles/view-stack';\n\n$prefix: 'clabs--whats-new' !default;\n$carbonPrefix: 'cds';\n$productsPrefix: 'c4p';\n\n.#{$prefix}__wn_pattern__tearsheet {\n  .#{$carbonPrefix}--modal-container {\n    max-inline-size: 1000px;\n  }\n  .#{$productsPrefix}--tearsheet__header {\n    background-color: $background !important;\n    padding-inline-end: $spacing-07 !important;\n  }\n  .#{$carbonPrefix}--tearsheet__main {\n    overflow-y: hidden !important;\n  }\n  .#{$carbonPrefix}--tabs--vertical {\n    block-size: auto !important;\n  }\n  .#{$productsPrefix}--tearsheet__container {\n    background-color: $background;\n  }\n}\n\n.#{$prefix}__wn_pattern__tearsheet_navigation_container {\n  display: grid;\n  grid-area: ContentSwitcher;\n  grid-template-areas: 'ContentSwitcher Link';\n  grid-template-columns: 1fr 1fr;\n  margin-block: $spacing-02 $spacing-06;\n}\n\n.#{$prefix}__wn_pattern__tearsheet__contentswitcher {\n  padding-inline: 0 !important;\n}\n\n.#{$prefix}__wn_pattern__tearsheet__link {\n  align-items: center;\n  grid-area: Link;\n  justify-self: end;\n}\n.#{$prefix}__wn_pattern__tearsheet_influencer_container {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: $spacing-06 $spacing-05 $spacing-07 $spacing-07;\n  block-size: 100%;\n}\n\n.#{$prefix}__wn_pattern__features {\n  block-size: 100%;\n}\n\n.#{$prefix}__wn_pattern__feature__sections {\n  padding-inline: $spacing-07;\n}\n\n.#{$prefix}__wn_pattern__feature__section_group {\n  border-block-end: 1px solid $border-subtle-01;\n  padding-block-start: $spacing-07;\n}\n\n.#{$prefix}__wn_pattern__feature__section_group_heading {\n  @include type-style('heading-compact-01');\n}\n\n.#{$prefix}__wn_pattern__feature__section {\n  padding-block: $spacing-09;\n\n  &:first-of-type {\n    padding-block-start: $spacing-07;\n  }\n\n  &:last-of-type {\n    padding-block-end: $spacing-07;\n  }\n}\n\n.#{$prefix}__wn_pattern__feature__section_image {\n  inline-size: 100%;\n  margin-block-end: $spacing-06;\n}\n\n.#{$prefix}__wn_pattern__tag_container,\n.#{$prefix}__wn_pattern__feature__section_heading,\n.#{$prefix}__wn_pattern__feature__section_body {\n  padding-inline-end: 20%;\n  @include breakpoint-down(lg) {\n    padding-inline-end: 0;\n  }\n}\n\n.#{$prefix}__wn_pattern__tag_container {\n  margin-block-end: $spacing-02;\n\n  .#{$carbonPrefix}--tag:first-of-type {\n    margin-inline-start: 0;\n\n    > span {\n      margin-inline-start: 0;\n    }\n  }\n}\n\n.#{$prefix}__wn_pattern__feature__section_heading {\n  margin-block-end: $spacing-05;\n}\n\n.#{$prefix}__wn_pattern__feature__section_body {\n  @include type-style('body-01');\n\n  color: $text-primary;\n  margin-block-end: $spacing-06;\n\n  p {\n    margin-block-end: $spacing-04;\n  }\n}\n\n// NOTIFICATION STYLES\n\n.#{$prefix}__wn_pattern__bubble_viewstack {\n  block-size: 400px;\n  inline-size: 256px;\n}\n\n.#{$prefix}__wn_pattern__bubble_viewstack-view-image {\n  inline-size: 100%;\n  margin-block-end: $spacing-05;\n}\n\n.#{$prefix}__wn_pattern__bubble_viewstack-view-info {\n  @include type-style('label-01');\n\n  display: flex;\n  align-items: center;\n  margin-block-end: $spacing-03;\n\n  > span {\n    padding-block-start: 1px;\n    padding-inline-start: $spacing-03;\n  }\n}\n\n.#{$prefix}__wn_pattern__bubble_viewstack-view-heading {\n  @include type-style('productive-heading-02');\n}\n.#{$prefix}__wn_pattern__bubble_viewstack-view-description {\n  @include type-style('body-01');\n\n  margin-block-start: $spacing-03;\n\n  > p {\n    @include type-style('body-01');\n\n    margin-block-end: 8px;\n\n    &:last-of-type {\n      margin-block-end: 0;\n    }\n  }\n}\n.#{$prefix}__wn_pattern__bubble_viewstack-view-buttons {\n  margin-block-start: $spacing-05;\n}\n\n.#{$prefix}__wn_pattern__bubble_footer {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding-block-start: $spacing-05;\n}\n\n.#{$prefix}__wn_pattern__bubble_progress {\n  justify-self: flex-start;\n  margin-inline-end: auto;\n  @include type-style('helper-text-01');\n}\n","/**\n * Copyright IBM Corp. 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@use '@carbon/ibm-products/scss/components/Tearsheet';\n@use '../components/whats-new.scss';\n@use '@carbon/styles/scss/theme' as *;\n@use '@carbon/styles/scss/themes';\n@use '@carbon/styles/scss/type';\n@use '@carbon/styles/scss/config';\n@use '@carbon/react/scss/components/button/tokens' as *;\n\n.storyBody {\n  background-color: $background;\n  min-block-size: 600px;\n}\n\n:root[data-carbon-theme='g100'] {\n  .storyBody {\n    @include theme(themes.$g100);\n  }\n}\n\n:root[data-carbon-theme='g90'] {\n  .storyBody {\n    @include theme(themes.$g90);\n  }\n}\n\n:root[data-carbon-theme='g10'] {\n  .storyBody {\n    @include theme(themes.$g10);\n  }\n}\n\n:root[data-carbon-theme='white'] {\n  .storyBody {\n    @include theme(themes.$white);\n  }\n}\n\n.controlHeader {\n  display: flex;\n  border-block-end: 1px solid $background-inverse;\n  gap: 1px;\n}\n\n.iconBtnRight {\n  margin-inline: auto 48px;\n}\n\n.iconBtnBody {\n  margin-block: 128px;\n}\n\n.iconBtnRightBottom {\n  margin: 0 auto;\n  inline-size: 48px;\n}\n\n.PlayingCardViewStack {\n  block-size: 500px;\n  inline-size: 300px;\n  outline: thin dashed $button-danger-primary;\n}\n\n.PlayingCard {\n  position: relative;\n  border: thin $background solid;\n  border-radius: 32px;\n  margin: 8px;\n  background-color: $background-inverse;\n  block-size: calc(100% - 16px);\n  color: $text-inverse;\n  font-size: 24px;\n  inline-size: calc(100% - 16px);\n}\n\n.ViewStackStoryExample {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 4px;\n  margin-block-start: 64px;\n}\n\n.ViewStackStoryHistory {\n  display: flex;\n  flex-direction: column;\n  block-size: 500px;\n  inline-size: 300px;\n  outline: thin dashed $button-danger-primary;\n}\n\n.ViewStackStoryControls {\n  display: grid;\n  block-size: 500px;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  inline-size: 300px;\n  outline: thin dashed $button-danger-primary;\n}\n\n.ViewStackStoryHistoryRow {\n  flex-grow: 0;\n  padding-block: 4px;\n  padding-inline: 8px;\n}\n\n.ViewStackStoryHistoryEntriesLabel {\n  margin-block-end: 4px;\n  padding-block: 4px;\n  padding-inline: 8px;\n}\n\n.ViewStackStoryHistoryEntries {\n  flex-grow: 1;\n  margin: 8px;\n  outline: 1px solid rgba(255, 255, 255, 0.5);\n  overflow-y: auto;\n  padding-block: 4px;\n}\n\n.ViewStackStoryHistoryEntry {\n  padding: 8px;\n  border-block-end: 1px solid rgba(255, 255, 255, 0.15);\n}\n\n// TOC\n.TocExampleLayout {\n  display: grid;\n  margin: 64px;\n  grid-template-columns: 1fr 3fr;\n}\n\n.TocExampleContentColumn {\n  padding: 32px;\n  block-size: 400px;\n\n  p {\n    margin-block: 24px;\n    padding-inline-end: 32px;\n  }\n}\n\n// BUBBLE\n.BubbleExampleContent {\n  inline-size: 256px;\n}\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@use 'sass:map';\n@use 'sass:meta';\n@use 'config';\n@use 'themes';\n\n/// Specify the fallback theme, used as a catch-all for tokens that you may not\n/// have defined in your custom theme\n$fallback: themes.$white !default;\n\n/// Specify the current theme. This can override existing tokens, or add new\n/// tokens. If you are adding new tokens, it's recommended that you set the\n/// fallback for your current theme\n$theme: () !default;\n$theme: map.merge($fallback, $theme);\n\n/// Local component tokens that can be updated with `@mixin add-component-tokens`.\n$-component-tokens: ();\n\n/// Include the CSS Custom Properties for the active theme or a given theme on\n/// a selector\n@mixin theme($active-theme: $theme, $component-tokens...) {\n  @each $token, $value in $active-theme {\n    @include -custom-property($token, $value);\n  }\n\n  @each $group in $component-tokens {\n    @each $token, $value in $group {\n      @include -custom-property($token, $value);\n    }\n  }\n\n  @each $token, $value in $-component-tokens {\n    @include -custom-property(\n      $token,\n      -resolve-token-value($active-theme, $value)\n    );\n  }\n}\n\n/// Retrieve the value for the given $token from the current $theme\n/// @param {String} $token\n@function get($token) {\n  @if map.has-key($theme, $token) {\n    @return map.get($theme, $token);\n  }\n  @error \"Unable to find token: #{$token} in current $theme\";\n}\n\n/// Compare two themes to see if the second theme is a superset of the first\n/// theme. In other words, this function will return true if every token in the\n/// first theme is available in the second theme and has the same value. The\n/// second theme is allowed to have additional values and it will still match.\n/// @param {Map} $a\n/// @param {Map} $b\n/// @returns {Boolean}\n@function matches($a, $b) {\n  @each $key, $value in $a {\n    @if map.has-key($b, $key) == false {\n      @return false;\n    }\n\n    @if map.get($b, $key) != $value {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n/// Add component tokens which will be included any time the theme mixin is\n/// called\n@mixin add-component-tokens($token-map) {\n  $-component-tokens: map.merge($-component-tokens, $token-map) !global;\n}\n\n/// Determine the value from a component token that matches the given theme.\n/// This is helpful when a component token may change depending on what theme the\n/// component is being rendered in.\n@function -resolve-token-value($active-theme: $theme, $token-value) {\n  @if meta.type-of($token-value) == map and map.has-key($token-value, values) {\n    $fallback: map.get($token-value, fallback);\n    $theme-values: map.get($token-value, values);\n\n    @each $theme-value in $theme-values {\n      $theme-to-match: map.get($theme-value, theme);\n      $value: map.get($theme-value, value);\n\n      @if matches($theme-to-match, $active-theme) {\n        @return $value;\n      }\n    }\n\n    @return $fallback;\n  }\n\n  @return $token-value;\n}\n\n/// @access private\n/// @group @carbon/themes\n@mixin -custom-property($name, $value) {\n  @if meta.type-of($value) == map {\n    @each $property, $property-value in $value {\n      // Only support one-level of depth for values that are maps. This is to\n      // avoid bringing properties like `breakpoints` on type tokens\n      @if type-of($property-value) != map {\n        @include -custom-property('#{$name}-#{$property}', $property-value);\n      }\n    }\n  } @else {\n    --#{config.$prefix}-#{$name}: #{$value};\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2023\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@forward './theme/theme' hide theme;\n@use './theme/theme';\n@use './layer/layer-tokens';\n@use './utilities/custom-property';\n\n/// Include the CSS Custom Properties for the active theme or a given theme on\n/// a selector\n@mixin theme($args...) {\n  @include theme.theme($args...);\n\n  // If the system is in high-contrast mode, use the system defined colors.  This mostly happens automatically, but\n  // we need to do it manually for icons and selected backgrounds.  Importantly, the custom properties we set here\n  // need to override the CSS custom properties set above.  See:\n  // - https://github.com/carbon-design-system/carbon/issues/19015\n  // - https://developer.mozilla.org/en-US/docs/Web/CSS/system-color.\n  // - https://carbondesignsystem.com/elements/color/tokens/#icon\n  @media screen and (-ms-high-contrast: active), (forced-colors: active) {\n    // Icon colors specified by \"fill\".\n    @include custom-property.declaration('icon-primary', ButtonText);\n    @include custom-property.declaration('icon-secondary', ButtonText);\n    @include custom-property.declaration('icon-interactive', ButtonText);\n    @include custom-property.declaration('icon-disabled', GrayText);\n    @include custom-property.declaration('icon-on-color-disabled', GrayText);\n\n    // Since icon-inverse and icon-on-color are generally used to indicated selected icons, use SelectedItemText.\n    @include custom-property.declaration('icon-inverse', SelectedItemText);\n    @include custom-property.declaration('icon-on-color', SelectedItemText);\n\n    // Some components currently set these values for fill, although unclear if that's valid.\n    @include custom-property.declaration('button-disabled', GrayText);\n    @include custom-property.declaration('interactive', ButtonText);\n    @include custom-property.declaration('link-primary', LinkText);\n    @include custom-property.declaration('link-primary-hover', LinkText);\n    @include custom-property.declaration('link-secondary', LinkText);\n    @include custom-property.declaration('link-inverse', SelectedItemText);\n    @include custom-property.declaration(\n      'link-inverse-hover',\n      SelectedItemText\n    );\n    @include custom-property.declaration(\n      'link-inverse-visited',\n      SelectedItemText\n    );\n    @include custom-property.declaration('link-visited', VisitedText);\n\n    // Force a background-color for selected buttons etc., otherwise the user won't know they are selected.\n    @include custom-property.declaration('background-selected', SelectedItem);\n    @include custom-property.declaration(\n      'background-selected-hover',\n      SelectedItem\n    );\n    @include custom-property.declaration('background-inverse', SelectedItem);\n    @include custom-property.declaration(\n      'layer-selected-inverse',\n      SelectedItem\n    );\n  }\n\n  // Note: we need to re-emit the contextual layer tokens as part of the theme\n  // mixin. Otherwise, the layer tokens are defined at the :root level and will\n  // not pick up the theme-specific, or zone-specific, value from the first\n  // layer.\n  //\n  // For example, in this situation:\n  //\n  // ```\n  // :root {\n  //   --layer-one: #000000;\n  //   --layer: var(--layer-one);\n  // }\n  // ```\n  //\n  // This will always evaluate to the value of `--layer-one` at the `:root`\n  // selector, even if `--layer-one` is redefined layer on in the cascade.\n  //\n  // ```\n  // .zone {\n  //   --layer-one: #ffffff;\n  // }\n  // ```\n  //\n  // Even though you would expect `--layer` to be redefined, it will keep the\n  // value defined at the `:root` level.\n  //\n  // @see https://github.com/carbon-design-system/carbon/issues/11138\n  @include layer-tokens.emit-layer-tokens(1);\n}\n"],"names":[],"sourceRoot":""}