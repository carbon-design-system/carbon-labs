import{_ as o,l as e,I as p,k as m,K as s}from"./diagramElement-udoFSoOK.js";import{p as n}from"./mermaid-parser.core-B2fH9c25.js";import"./property-DRkoNOFH.js";import"./lit-element-CKvUdWNz.js";import"./settings-BQP9c3yA.js";import"./state-BaIcuqWU.js";import"./iframe-B3iqAZ1p.js";import"../sb-preview/runtime.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./timer-CN_v9RCa.js";import"./index-DrFu-skq.js";import"./loading-CnlMKYWX.js";import"./class-map-BqTUllwo.js";import"./directive-CF8sV3Lr.js";import"./carbon-element-CIUZhCzP.js";import"./unsafe-html-DEKExhFX.js";import"./_baseUniq-NQp9Utzq.js";import"./_basePickBy-DB9Vizvl.js";import"./clone-4UZtIBpb.js";var g={parse:o(async r=>{const t=await n("info",r);e.debug(t)},"parse")},v={version:s},d=o(()=>v.version,"getVersion"),c={getVersion:d},l=o((r,t,i)=>{e.debug(`rendering info diagram
`+r);const a=p(t);m(a,100,400,!0),a.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw"),f={draw:l},O={parser:g,db:c,renderer:f};export{O as diagram};
